\documentclass[a4paper,10pt]{memoir}\usepackage{knitr}

\usepackage[utf8]{inputenc}

% \title{R for Photobiology: a handbook}
% \author{Pedro J. Aphalo \and others}
% \pretitle{\begin{center}\LARGE}
% \posttitle{\par\end{center}\vskip 0.5em}

% using Lucida bright using now free package from PC TeX
\usepackage[lucidasmallscale,nofontinfo,seriftt=true,math-style=iso]{lucimatx}
% replace option altbullet
\renewcommand{\labelitemi}{%
 {\UseTextSymbol{OMS}\textbullet}}
% needed for Lucida
\linespread{1.04}

\usepackage[footinfo, missing={`none'}]{gitinfo} % remember to setup Git hooks

\usepackage{hologo}

\usepackage[british]{babel}
\usepackage{csquotes}

%\chapterstyle{ell}
\usepackage{graphicx}
\DeclareGraphicsExtensions{.jpg,.pdf}

\usepackage{microtype}
\usepackage[style=authoryear-comp,firstinits,sortcites,maxcitenames=2,%
    mincitenames=1,maxbibnames=10,minbibnames=10,backref,uniquename=mininit,%
    uniquelist=minyear,sortfirstinits=true]{biblatex}%,refsection=chapter

\usepackage[hyperindex,bookmarks,pdfview=FitB,%backref,
            pdftitle={R for Photobiology},%
            pdfkeywords={photobiology, visible radiation, ultraviolet radiation, R, quantification, methods, calculations},%
            pdfsubject={Photobiology},%
            pdfauthor={Pedro J. Aphalo, Andreas Albert}%
            ]{hyperref}
%\chapterstyle{veelo}

\usepackage{color,calc,soul}%,graphicx,fourier
\definecolor{nicegreen}{rgb}{.129,.647,.149}
\definecolor{grey50}{rgb}{.5,.5,.5}
\makeatletter
\newlength\dlf@normtxtw
\setlength\dlf@normtxtw{\textwidth}
%\def\myhelvetfont{\def\sfdefault{mdput}}
\newsavebox{\feline@chapter}
\newcommand\feline@chapter@marker[1][4cm]{%
\sbox\feline@chapter{%
\resizebox{!}{#1}{\fboxsep=1pt%
\colorbox{nicegreen}{\color{white}\normalfont\bfseries\thechapter}%\sffamily
}}%
\rotatebox{90}{%
\resizebox{%
\heightof{\usebox{\feline@chapter}}+\depthof{\usebox{\feline@chapter}}}%
{!}{\scshape\so\@chapapp}}\quad%
\raisebox{\depthof{\usebox{\feline@chapter}}}{\usebox{\feline@chapter}}%
}
\newcommand\feline@chm[1][4cm]{%
\sbox\feline@chapter{\feline@chapter@marker[#1]}%
\makebox[0pt][l]{% aka \rlap
\makebox[1cm][r]{\usebox\feline@chapter}%
}}
\makechapterstyle{daleif1}{
\renewcommand\chapnamefont{\normalfont\Large\scshape\raggedleft\so}
\renewcommand\chaptitlefont{\normalfont\huge\bfseries\upshape\color{nicegreen}}%\sffamily
\renewcommand\chapternamenum{}
\renewcommand\printchaptername{}
\renewcommand\printchapternum{\null\hfill\feline@chm[2.5cm]\par}
\renewcommand\afterchapternum{\par\vskip\midchapskip}
\renewcommand\printchaptertitle[1]{\chaptitlefont\raggedleft ##1\par}
}
\makeatother
\chapterstyle{daleif1}

\newlength{\drop}
%% Some shades

\newcommand*{\titleLL}{\begingroup% Lost Languages
\drop=0.1\textheight
\fboxsep 0.5\baselineskip
\sffamily
\vspace*{\drop}
\centering
{\textcolor{nicegreen}{\HUGE R for Photobiology}}\par
\vspace{0.5\drop}
\colorbox{grey50}{\textcolor{yellow}{\normalfont\itshape\Large
A handbook}}\par
\vspace{\drop}
{\Large Pedro J. Aphalo\\ and\\ Andreas Albert}\par
\vfill
{\footnotesize Git: tag\gitVtagn , committed with hash \gitAbbrevHash\ on \gitAuthorIsoDate\\ by\ \gitAuthorName \\PDF created \today\\ \copyright\ 2013-2014 by the authors}\par
\vspace*{\drop}
\endgroup}

\maxsecnumdepth{subsection}
\maxtocdepth{section}

\usepackage{siunitx}
\usepackage{framed}
\renewenvironment{shaded}{%
  \def\FrameCommand{\fboxsep=\FrameSep \colorbox{shadecolor}}%
  \MakeFramed{\advance\hsize-\width \FrameRestore\FrameRestore}}%
 {\endMakeFramed}
\definecolor{shadecolor}{gray}{0.80}

\usepackage{abbrev}
\usepackage{r4photobiology}
%\usepackage{glossaries}
%\usepackage{imakeidx}

\addbibresource{rbooks.bib}
\addbibresource{handbook.bib}
\addbibresource{guidelines.bib}

%\makeindex
%\makeglossaries
%\loadglsentries{gp_glossary}


\newcommand{\gls}[1]{} % until start building the glossary.
\IfFileExists{upquote.sty}{\usepackage{upquote}}{}
\begin{document}

% knitr setup











\thispagestyle{empty}
\titleLL
\clearpage


\frontmatter
%\begin{titlingpage}
%  \maketitle
%\titleLL
%\end{titlingpage}

\tableofcontents

%\listoftables

%\listoffigures

\include{preface.tr}

\include{abbreviations.tr}

\mainmatter

\setsecnumdepth{subsection}

\part{Preliminaries}













\part{Cookbook of calculations}




\chapter{Radiation physics}\label{chap:physics}

\begin{abstract}
  In this chapter we explain how to code some optics and physics computations in R.
\end{abstract}

\section{Packages used in this chapter}

For executing the examples listed in this chapter you need first to load the following packages from the library:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{library}\hlstd{(ggplot2)}
\end{alltt}


{\ttfamily\noindent\itshape\color{messagecolor}{\#\# Loading required package: methods}}\begin{alltt}
\hlkwd{library}\hlstd{(photobiologygg)}
\end{alltt}


{\ttfamily\noindent\itshape\color{messagecolor}{\#\# Loading required package: photobiology\\\#\# Loading required package: lubridate\\\#\# Loading required package: data.table\\\#\# \\\#\# Attaching package: 'data.table'\\\#\# \\\#\# The following objects are masked from 'package:lubridate':\\\#\# \\\#\#\ \ \ \  hour, mday, month, quarter, wday, week,\\\#\#\ \ \ \  yday, year\\\#\# \\\#\# Loading required package: photobiologyWavebands\\\#\# Loading required package: proto\\\#\# Loading required package: splus2R\\\#\# Loading required package: plyr\\\#\# \\\#\# Attaching package: 'plyr'\\\#\# \\\#\# The following object is masked from 'package:lubridate':\\\#\# \\\#\#\ \ \ \  here}}\begin{alltt}
\hlkwd{library}\hlstd{(photobiology)}
\hlkwd{library}\hlstd{(photobiologyFilters)}
\end{alltt}
\end{kframe}
\end{knitrout}



%%%%
\section{Introduction}\label{sec:physics:intro}

%%%%
\section{Task: black body emission}\label{sec:physics:intro}

The emitted spectral radiance (\radiance[s]) is described by Planck's law of black body radiation at temperature $T$, measured in degrees Kelvin (K):%\index{Planck's law of black body radiation}\index{black body spectral radiance}
%
\begin{equation}
%\radiance[s](\lambda,T) = \frac{2hc^2}{\lambda^5}\cdot\frac{1}{\exp\left\{hc/k_BT\lambda\right\}-1} \label{equ_planck}
\radiance[s](\lambda,T) = \frac{2hc^2}{\lambda^5}\cdot\frac{1}{\mathrm{e}^{(hc/k_\mathrm{B}T\lambda)}-1} \label{equ_planck}
\end{equation}
%
with Boltzmann's constant $k_\mathrm{B}=1.381\times 10^{-23}$ \Unit{J\,K^{-1}}, Planck's constant\index{Planck constant} $h=6.626\times 10^{-34}$ \jsecond and speed of light in vacuum $c=2.998\times 10^{8}$ \msecond.

We can easily define an R function based on the equation above, which returns \Unit{W\,sr^{-1}\,m^{-3}}:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{h} \hlkwb{<-} \hlnum{6.626e-34} \hlcom{# J s-1}
\hlstd{c} \hlkwb{<-} \hlnum{2.998e8} \hlcom{# m s-1}
\hlstd{kB} \hlkwb{<-} \hlnum{1.381e-23} \hlcom{# J K-1}
\hlstd{black_body_spectrum} \hlkwb{<-} \hlkwa{function}\hlstd{(}\hlkwc{w.length}\hlstd{,} \hlkwc{Tabs}\hlstd{) \{}
  \hlstd{w.length} \hlkwb{<-} \hlstd{w.length} \hlopt{*} \hlnum{1e-9} \hlcom{# nm -> m}
  \hlstd{((}\hlnum{2} \hlopt{*} \hlstd{h} \hlopt{*} \hlstd{c}\hlopt{^}\hlnum{2}\hlstd{)} \hlopt{/} \hlstd{w.length}\hlopt{^}\hlnum{5}\hlstd{)} \hlopt{*}
    \hlnum{1} \hlopt{/} \hlstd{(}\hlkwd{exp}\hlstd{((h} \hlopt{*} \hlstd{c} \hlopt{/} \hlstd{(kB} \hlopt{*} \hlstd{Tabs} \hlopt{*} \hlstd{w.length)))} \hlopt{-} \hlnum{1}\hlstd{)}
\hlstd{\}}
\end{alltt}
\end{kframe}
\end{knitrout}

We can use the function for calculating black body emission spectra for different temperatures:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{black_body_spectrum}\hlstd{(}\hlnum{500}\hlstd{,} \hlnum{5000}\hlstd{)}
\end{alltt}
\begin{verbatim}
## [1] 1.212443e+13
\end{verbatim}
\end{kframe}
\end{knitrout}

The function is vectorized:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{black_body_spectrum}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{300}\hlstd{,}\hlnum{400}\hlstd{,}\hlnum{500}\hlstd{),} \hlnum{5000}\hlstd{)}
\end{alltt}
\begin{verbatim}
## [1] 3.354907e+12 8.759028e+12 1.212443e+13
\end{verbatim}
\end{kframe}
\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{black_body_spectrum}\hlstd{(}\hlnum{500}\hlstd{,} \hlkwd{c}\hlstd{(}\hlnum{4500}\hlstd{,}\hlnum{5000}\hlstd{))}
\end{alltt}
\begin{verbatim}
## [1] 6.387979e+12 1.212443e+13
\end{verbatim}
\end{kframe}
\end{knitrout}

We aware that if two vectors are supplied, then the elements in each one are matched and recycled\footnote{Exercise: calculate each of the four values individually to work out how the two vectors are being used.}:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{black_body_spectrum}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{500}\hlstd{,} \hlnum{500}\hlstd{,} \hlnum{600}\hlstd{,} \hlnum{600}\hlstd{),} \hlkwd{c}\hlstd{(}\hlnum{4500}\hlstd{,}\hlnum{5000}\hlstd{))} \hlcom{# tricky!}
\end{alltt}
\begin{verbatim}
## [1] 6.387979e+12 1.212443e+13 7.474587e+12
## [4] 1.277769e+13
\end{verbatim}
\end{kframe}
\end{knitrout}

We can use the function defined above for plotting black body emission spectra for different temperatures. We use \code{ggplot2} and directly plot a function using \code{stat\_function}, using \code{args} to pass the additional argument giving the absolute temperature to be used. We plot three lines using three different temperatures (5600~K, 4500~K, and 3700~K):

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=}\hlkwd{data.frame}\hlstd{(}\hlkwc{x}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{50}\hlstd{,}\hlnum{1500}\hlstd{)),} \hlkwd{aes}\hlstd{(x))} \hlopt{+}
  \hlkwd{stat_function}\hlstd{(}\hlkwc{fun}\hlstd{=black_body_spectrum,}
                \hlkwc{args} \hlstd{=} \hlkwd{list}\hlstd{(}\hlkwc{Tabs}\hlstd{=}\hlnum{5600}\hlstd{),}
                \hlkwc{colour}\hlstd{=}\hlstr{"blue"}\hlstd{)} \hlopt{+}
  \hlkwd{stat_function}\hlstd{(}\hlkwc{fun}\hlstd{=black_body_spectrum,}
                \hlkwc{args} \hlstd{=} \hlkwd{list}\hlstd{(}\hlkwc{Tabs}\hlstd{=}\hlnum{4500}\hlstd{),}
                \hlkwc{colour}\hlstd{=}\hlstr{"orange"}\hlstd{)} \hlopt{+}
  \hlkwd{stat_function}\hlstd{(}\hlkwc{fun}\hlstd{=black_body_spectrum,}
                \hlkwc{args} \hlstd{=} \hlkwd{list}\hlstd{(}\hlkwc{Tabs}\hlstd{=}\hlnum{3700}\hlstd{),}
                \hlkwc{colour}\hlstd{=}\hlstr{"red"}\hlstd{)} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{y}\hlstd{=}\hlkwd{expression}\hlstd{(Spectral}\hlopt{~~}\hlstd{radiance}\hlopt{~~}\hlstd{(W}\hlopt{~}\hlstd{sr}\hlopt{^-}\hlnum{1}\hlopt{~}\hlstd{m}\hlopt{^-}\hlnum{3}\hlstd{)),}
       \hlkwc{x}\hlstd{=}\hlstr{"Wavelength (nm)"}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.64\textwidth]{figure/pos-unnamed-chunk-17-1} 

}



\end{knitrout}


Wien's displacement law, gives the peak wavelength of the radiation emitted by a black body as a function of its absolute temperature.
%
\begin{equation}
\lambda_{max} \cdot T = 2.898 \times 10^6 \,\mathrm{nm\,K} \label{equ_wien}
\end{equation}
%
A function implementing this equation takes just a few lines of code:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{k.wein} \hlkwb{<-} \hlnum{2.8977721e6} \hlcom{# nm K}
\hlstd{black_body_peak_wl} \hlkwb{<-} \hlkwa{function}\hlstd{(}\hlkwc{Tabs}\hlstd{) \{}
  \hlstd{k.wein} \hlopt{/} \hlstd{Tabs}
\hlstd{\}}
\end{alltt}
\end{kframe}
\end{knitrout}

It can be used to plot the temperature dependence of the location of the wavelength at which radiance is at its maximum:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=}\hlkwd{data.frame}\hlstd{(}\hlkwc{Tabs}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{2000}\hlstd{,}\hlnum{7000}\hlstd{)),} \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=Tabs))} \hlopt{+}
  \hlkwd{stat_function}\hlstd{(}\hlkwc{fun}\hlstd{=black_body_peak_wl)} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{x}\hlstd{=}\hlstr{"Temperature (K)"}\hlstd{,}
       \hlkwc{y}\hlstd{=}\hlstr{"Wavelength at peak of emission (nm)"}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.64\textwidth]{figure/pos-unnamed-chunk-19-1} 

}



\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiologyFilters))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiologygg))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiology))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{ggplot2))}
\end{alltt}
\end{kframe}
\end{knitrout}




\chapter{Astronomy}\label{chap:astronomy}

\begin{abstract}
  In this chapter we explain how to code some astronomical computations in R.
\end{abstract}

\section{Packages used in this chapter}

For executing the examples listed in this chapter you need first to load the following packages from the library:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{library}\hlstd{(photobiology)}
\hlkwd{library}\hlstd{(lubridate)}
\hlkwd{library}\hlstd{(ggplot2)}
\hlkwd{library}\hlstd{(ggmap)}
\end{alltt}
\end{kframe}
\end{knitrout}

%%%%
\section{Introduction}\label{sec:astro:intro}

This chapter deals with calculations that require times and/or dates as arguments. One could use R's built-in functions for POSIXct but package \code{lubridate} makes working with dates and times, much easier. Package \code{lubridate} defines functions for decoding dates represented as character strings, and for manipulating dates and doing calcualtions on dates. Each one of the different functions shown in the code chunk below can decode dates in different formats as long as the year, month and date order in the string agrees with the name of the function:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{ymd}\hlstd{(}\hlstr{"20140320"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## [1] "2014-03-20 UTC"
\end{verbatim}
\begin{alltt}
\hlkwd{ymd}\hlstd{(}\hlstr{"2014-03-20"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## [1] "2014-03-20 UTC"
\end{verbatim}
\begin{alltt}
\hlkwd{ymd}\hlstd{(}\hlstr{"14-03-20"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## [1] "2014-03-20 UTC"
\end{verbatim}
\begin{alltt}
\hlkwd{ymd}\hlstd{(}\hlstr{"2014-3-20"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## [1] "2014-03-20 UTC"
\end{verbatim}
\begin{alltt}
\hlkwd{ymd}\hlstd{(}\hlstr{"2014/3/20"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## [1] "2014-03-20 UTC"
\end{verbatim}
\begin{alltt}
\hlkwd{dmy}\hlstd{(}\hlstr{"20032014"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## [1] "2014-03-20 UTC"
\end{verbatim}
\begin{alltt}
\hlkwd{mdy}\hlstd{(}\hlstr{"03202014"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## [1] "2014-03-20 UTC"
\end{verbatim}
\end{kframe}
\end{knitrout}

For astronomical calculations we need as argument the geographical coordinates. It is, of course, possible to enter latitude and longitude values recorded with a GPS instrument or manually obtained from a map. However, when the location is searchable through Google Maps, it is also possible to obtain the coordinates by means of a query from within R using packages \code{RgoogleMaps}, or package \code{ggmap}, as done here. When inputing coordinate values manually, they should in degrees as numeric values (in other words the fractional part is given as part of floating point numberin degrees, and not as separate integers representing minutes and seconds of degree).

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{geocode}\hlstd{(}\hlstr{"Helsinki"}\hlstd{)}
\end{alltt}
\begin{verbatim}
##        lon      lat
## 1 24.94102 60.17332
\end{verbatim}
\begin{alltt}
\hlkwd{geocode}\hlstd{(}\hlstr{"Viikinkaari 1, 00790 Helsinki, Finland"}\hlstd{)}
\end{alltt}
\begin{verbatim}
##        lon     lat
## 1 25.01673 60.2253
\end{verbatim}
\end{kframe}
\end{knitrout}

%%%%
\section{Task: calculating the length of the photoperiod}\label{sec:astro:photoperiod}

In function \code{day\_night} from our \code{photobiology} package we use function \code{sun\_angles}, which is an edited version of function \code{sunAngle} from package \code{ode}, to calculate the altitude or elevation of the sun. We first find local solar noon by finding the maximal solar elevation, and then search for sunrise in the first half of the day and for sunset in the second half, defined based on the local solar noon. Sunset and sunrise are by default based on a solar elevation angle equal to zero. The argument \code{twilight} can be used to set the angle according to different conventions.

In the examples we use \code{geocode} to get the latitude and longitude of cities. \code{geocode} accepts any valid Google Maps search terms, including street addresses, and postal codes within cities. \code{day\_night} returns a list containing the times at sunrise, sunset and noon, and day- and night lengths. This first example is for Buenos Aires on two different dates, by use of the optional argument \code{tz} we request the results to be expressed in local time for Buenos Aires.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{geo_code_BA} \hlkwb{<-} \hlkwd{geocode}\hlstd{(}\hlstr{"Buenos Aires"}\hlstd{)}
\hlstd{geo_code_BA}
\end{alltt}
\begin{verbatim}
##         lon       lat
## 1 -58.38159 -34.60372
\end{verbatim}
\begin{alltt}
\hlkwd{day_night}\hlstd{(}\hlkwd{ymd}\hlstd{(}\hlstr{"2013-12-21"}\hlstd{),}
          \hlkwc{lon} \hlstd{= geo_code_BA[[}\hlstr{"lon"}\hlstd{]],}
          \hlkwc{lat} \hlstd{= geo_code_BA[[}\hlstr{"lat"}\hlstd{]],}
          \hlkwc{tz}\hlstd{=}\hlstr{"America/Argentina/Buenos_Aires"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## $day
## [1] "2013-12-21 UTC"
## 
## $sunrise
## [1] "2013-12-21 05:42:00 ART"
## 
## $noon
## [1] "2013-12-21 12:51:46 ART"
## 
## $sunset
## [1] "2013-12-21 20:01:32 ART"
## 
## $daylength
## Time difference of 14.32535 hours
## 
## $nightlength
## Time difference of 9.674649 hours
\end{verbatim}
\begin{alltt}
\hlkwd{day_night}\hlstd{(}\hlkwd{ymd}\hlstd{(}\hlstr{"2013-06-21"}\hlstd{),}
          \hlkwc{lon} \hlstd{= geo_code_BA[[}\hlstr{"lon"}\hlstd{]],}
          \hlkwc{lat} \hlstd{= geo_code_BA[[}\hlstr{"lat"}\hlstd{]],}
          \hlkwc{tz}\hlstd{=}\hlstr{"America/Argentina/Buenos_Aires"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## $day
## [1] "2013-06-21 UTC"
## 
## $sunrise
## [1] "2013-06-21 08:04:57 ART"
## 
## $noon
## [1] "2013-06-21 12:55:32 ART"
## 
## $sunset
## [1] "2013-06-21 17:45:49 ART"
## 
## $daylength
## Time difference of 9.681105 hours
## 
## $nightlength
## Time difference of 14.3189 hours
\end{verbatim}
\end{kframe}
\end{knitrout}

We here repeat the same calculations for Munich on the same days ---note that the output for December is in "EET" time coordinates, and for June it is in "EEST", i.e.\ in `winter-' and `summer time' coordinates.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{geo_code_Mu} \hlkwb{<-} \hlkwd{geocode}\hlstd{(}\hlstr{"Munich"}\hlstd{)}
\hlstd{geo_code_Mu}
\end{alltt}
\begin{verbatim}
##        lon      lat
## 1 11.58198 48.13513
\end{verbatim}
\begin{alltt}
\hlkwd{day_night}\hlstd{(}\hlkwd{ymd}\hlstd{(}\hlstr{"2013-12-21"}\hlstd{),}
          \hlkwc{lon} \hlstd{= geo_code_Mu[[}\hlstr{"lon"}\hlstd{]],}
          \hlkwc{lat} \hlstd{= geo_code_Mu[[}\hlstr{"lat"}\hlstd{]],}
          \hlkwc{tz}\hlstd{=}\hlstr{"Europe/Berlin"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## $day
## [1] "2013-12-21 UTC"
## 
## $sunrise
## [1] "2013-12-21 08:07:27 CET"
## 
## $noon
## [1] "2013-12-21 12:11:49 CET"
## 
## $sunset
## [1] "2013-12-21 16:16:11 CET"
## 
## $daylength
## Time difference of 8.145512 hours
## 
## $nightlength
## Time difference of 15.85449 hours
\end{verbatim}
\begin{alltt}
\hlkwd{day_night}\hlstd{(}\hlkwd{ymd}\hlstd{(}\hlstr{"2013-06-21"}\hlstd{),}
          \hlkwc{lon} \hlstd{= geo_code_Mu[[}\hlstr{"lon"}\hlstd{]],}
          \hlkwc{lat} \hlstd{= geo_code_Mu[[}\hlstr{"lat"}\hlstd{]],}
          \hlkwc{tz}\hlstd{=}\hlstr{"Europe/Berlin"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## $day
## [1] "2013-06-21 UTC"
## 
## $sunrise
## [1] "2013-06-21 05:19:41 CEST"
## 
## $noon
## [1] "2013-06-21 13:15:29 CEST"
## 
## $sunset
## [1] "2013-06-21 21:11:16 CEST"
## 
## $daylength
## Time difference of 15.85966 hours
## 
## $nightlength
## Time difference of 8.140341 hours
\end{verbatim}
\end{kframe}
\end{knitrout}

As a final example, we calculate day length based on different definitions of twilight for Helsinki, at the equinox:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{geo_code_He} \hlkwb{<-} \hlkwd{geocode}\hlstd{(}\hlstr{"Helsinki"}\hlstd{)}
\hlstd{geo_code_He}
\end{alltt}
\begin{verbatim}
##        lon      lat
## 1 24.94102 60.17332
\end{verbatim}
\begin{alltt}
\hlkwd{day_night}\hlstd{(}\hlkwd{ymd}\hlstd{(}\hlstr{"2013-09-21"}\hlstd{),}
          \hlkwc{lon} \hlstd{= geo_code_He[[}\hlstr{"lon"}\hlstd{]],} \hlkwc{lat} \hlstd{= geo_code_He[[}\hlstr{"lat"}\hlstd{]])}
\end{alltt}
\begin{verbatim}
## $day
## [1] "2013-09-21 UTC"
## 
## $sunrise
## [1] "2013-09-21 07:08:45 EEST"
## 
## $noon
## [1] "2013-09-21 13:12:49 EEST"
## 
## $sunset
## [1] "2013-09-21 19:16:23 EEST"
## 
## $daylength
## Time difference of 12.12728 hours
## 
## $nightlength
## Time difference of 11.87272 hours
\end{verbatim}
\begin{alltt}
\hlkwd{day_night}\hlstd{(}\hlkwd{ymd}\hlstd{(}\hlstr{"2013-09-21"}\hlstd{),}
          \hlkwc{lon} \hlstd{= geo_code_He[[}\hlstr{"lon"}\hlstd{]],} \hlkwc{lat} \hlstd{= geo_code_He[[}\hlstr{"lat"}\hlstd{]],}
          \hlkwc{twilight}\hlstd{=}\hlstr{"civil"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## $day
## [1] "2013-09-21 UTC"
## 
## $sunrise
## [1] "2013-09-21 07:57:16 EEST"
## 
## $noon
## [1] "2013-09-21 13:12:49 EEST"
## 
## $sunset
## [1] "2013-09-21 18:28:02 EEST"
## 
## $daylength
## Time difference of 10.51275 hours
## 
## $nightlength
## Time difference of 13.48725 hours
\end{verbatim}
\begin{alltt}
\hlkwd{day_night}\hlstd{(}\hlkwd{ymd}\hlstd{(}\hlstr{"2013-09-21"}\hlstd{),}
          \hlkwc{lon} \hlstd{= geo_code_He[[}\hlstr{"lon"}\hlstd{]],} \hlkwc{lat} \hlstd{= geo_code_He[[}\hlstr{"lat"}\hlstd{]],}
          \hlkwc{twilight}\hlstd{=}\hlstr{"nautical"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## $day
## [1] "2013-09-21 UTC"
## 
## $sunrise
## [1] "2013-09-21 08:47:20 EEST"
## 
## $noon
## [1] "2013-09-21 13:12:49 EEST"
## 
## $sunset
## [1] "2013-09-21 17:38:05 EEST"
## 
## $daylength
## Time difference of 8.845828 hours
## 
## $nightlength
## Time difference of 15.15417 hours
\end{verbatim}
\begin{alltt}
\hlkwd{day_night}\hlstd{(}\hlkwd{ymd}\hlstd{(}\hlstr{"2013-09-21"}\hlstd{),}
          \hlkwc{lon} \hlstd{= geo_code_He[[}\hlstr{"lon"}\hlstd{]],} \hlkwc{lat} \hlstd{= geo_code_He[[}\hlstr{"lat"}\hlstd{]],}
          \hlkwc{twilight}\hlstd{=}\hlstr{"astronomical"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## $day
## [1] "2013-09-21 UTC"
## 
## $sunrise
## [1] "2013-09-21 09:41:31 EEST"
## 
## $noon
## [1] "2013-09-21 13:12:49 EEST"
## 
## $sunset
## [1] "2013-09-21 16:44:00 EEST"
## 
## $daylength
## Time difference of 7.041373 hours
## 
## $nightlength
## Time difference of 16.95863 hours
\end{verbatim}
\end{kframe}
\end{knitrout}


\section{Task: calculating the position of the sun}\label{sec:astro:position}

\code{sun\_angles} not only returns solar elevation, but all the angles defining the position of the sun. The time argument to \code{sun\_angles} is internally converted to UTC (universal time coordinates, which is equal to GMT) time zone, so time defined for any time zone is valid input. The time zone used for the output is by default that currently in use in the computer on which R is running, but we can easily specify the time coordinates used for the output with parameter \code{tz}, using any string accepted by package \code{lubridate}.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{geo_code_Jo} \hlkwb{<-} \hlkwd{geocode}\hlstd{(}\hlstr{"Joensuu"}\hlstd{)}
\hlstd{geo_code_Jo}
\end{alltt}
\begin{verbatim}
##        lon      lat
## 1 29.76353 62.60109
\end{verbatim}
\begin{alltt}
\hlstd{my_time} \hlkwb{<-} \hlkwd{ymd_hms}\hlstd{(}\hlstr{"2014-05-29 18:00:00"}\hlstd{,} \hlkwc{tz}\hlstd{=}\hlstr{"EET"}\hlstd{)}
\hlkwd{sun_angles}\hlstd{(my_time,}
         \hlkwc{lon} \hlstd{= geo_code_Jo[[}\hlstr{"lon"}\hlstd{]],} \hlkwc{lat} \hlstd{= geo_code_Jo[[}\hlstr{"lat"}\hlstd{]])}
\end{alltt}
\begin{verbatim}
## $time
## [1] "2014-05-29 18:00:00 EEST"
## 
## $azimuth
## [1] 267.585
## 
## $elevation
## [1] 25.81887
## 
## $diameter
## [1] 0.5260482
## 
## $distance
## [1] 1.013595
\end{verbatim}
\end{kframe}
\end{knitrout}

We can calculate the current position of the sun, in this case giving the position of the sun in the sky of Joensuu when this .PDF file was generated.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{sun_angles}\hlstd{(}\hlkwd{now}\hlstd{(),}
         \hlkwc{lon} \hlstd{= geo_code_Jo[[}\hlstr{"lon"}\hlstd{]],} \hlkwc{lat} \hlstd{= geo_code_Jo[[}\hlstr{"lat"}\hlstd{]])}
\end{alltt}
\begin{verbatim}
## $time
## [1] "2014-11-27 13:45:42 EET"
## 
## $azimuth
## [1] 207.1927
## 
## $elevation
## [1] 3.087934
## 
## $diameter
## [1] 0.5403688
## 
## $distance
## [1] 0.9867335
\end{verbatim}
\end{kframe}
\end{knitrout}

\section{Task: plotting sun elevation through a day}

Function \code{sun\_angles} described above is vectorized, so it is very easy to calculate the position of the sun throughout a day at a given location on Earth. The example here uses sun only elevation, plotted for Helsinki through the course of 23 June 2014. We first a vector of times, using \code{seq} which can not only be used with numbers, but also with dates. Note that \code{by} is specified as a string.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{opts_chunk}\hlopt{$}\hlkwd{set}\hlstd{(opts_fig_wide)}
\end{alltt}
\end{kframe}
\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{hours} \hlkwb{<-} \hlkwd{seq}\hlstd{(}\hlkwc{from}\hlstd{=}\hlkwd{ymd}\hlstd{(}\hlstr{"2014-06-23"}\hlstd{,} \hlkwc{tz}\hlstd{=}\hlstr{"EET"}\hlstd{),}
             \hlkwc{by}\hlstd{=}\hlstr{"10 min"}\hlstd{,}
             \hlkwc{length}\hlstd{=}\hlnum{24} \hlopt{*} \hlnum{6}\hlstd{)}
\hlstd{elevations} \hlkwb{<-} \hlkwd{sun_angles}\hlstd{(hours,}
          \hlkwc{lon} \hlstd{= geo_code_He[[}\hlstr{"lon"}\hlstd{]],}
          \hlkwc{lat} \hlstd{= geo_code_He[[}\hlstr{"lat"}\hlstd{]])}\hlopt{$}\hlstd{elevation}
\hlstd{sun_elev_hel} \hlkwb{<-} \hlkwd{data.frame}\hlstd{(}\hlkwc{time_eet} \hlstd{= hours,}
                            \hlkwc{elevation} \hlstd{= elevations,}
                            \hlkwc{location} \hlstd{=} \hlstr{"Helsinki"}\hlstd{,}
                            \hlkwc{lon} \hlstd{= geo_code_He[[}\hlstr{"lon"}\hlstd{]],}
                           \hlkwc{lat} \hlstd{= geo_code_He[[}\hlstr{"lat"}\hlstd{]])}
\end{alltt}
\end{kframe}
\end{knitrout}

We also create a small data frame with data for plotting and labeling the different twilight conventions.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{twilight} \hlkwb{<-}
  \hlkwd{data.frame}\hlstd{(}\hlkwc{angle} \hlstd{=} \hlkwd{c}\hlstd{(}\hlnum{0}\hlstd{,} \hlopt{-}\hlnum{6}\hlstd{,} \hlopt{-}\hlnum{12}\hlstd{,} \hlopt{-}\hlnum{18}\hlstd{),}
             \hlkwc{label} \hlstd{=} \hlkwd{c}\hlstd{(}\hlstr{"Horizon"}\hlstd{,} \hlstr{"Civil twilight"}\hlstd{,}
                       \hlstr{"Nautical twilight"}\hlstd{,}
                       \hlstr{"Astronomical twilight"}\hlstd{),}
             \hlkwc{time} \hlstd{=} \hlkwd{rep}\hlstd{(}\hlkwd{ymd_hms}\hlstd{(}\hlstr{"2014-06-23 12:00:00"}\hlstd{,}
                                \hlkwc{tz}\hlstd{=}\hlstr{"EET"}\hlstd{),}
                        \hlnum{4}\hlstd{) )}
\end{alltt}
\end{kframe}
\end{knitrout}

We draw a plot using the data frames created above.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{ggplot}\hlstd{(sun_elev_hel,}
       \hlkwd{aes}\hlstd{(}\hlkwc{x} \hlstd{= time_eet,} \hlkwc{y} \hlstd{= elevation))} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{geom_hline}\hlstd{(}\hlkwc{data}\hlstd{=twilight,}
             \hlkwd{aes}\hlstd{(}\hlkwc{yintercept} \hlstd{= angle,} \hlkwc{linetype}\hlstd{=}\hlkwd{factor}\hlstd{(label)))} \hlopt{+}
  \hlkwd{annotate}\hlstd{(}\hlkwc{geom}\hlstd{=}\hlstr{"text"}\hlstd{,}
           \hlkwc{x}\hlstd{=twilight}\hlopt{$}\hlstd{time,} \hlkwc{y}\hlstd{=twilight}\hlopt{$}\hlstd{angle,}
           \hlkwc{label}\hlstd{=twilight}\hlopt{$}\hlstd{label,} \hlkwc{vjust}\hlstd{=}\hlopt{-}\hlnum{0.4}\hlstd{,} \hlkwc{size}\hlstd{=}\hlnum{4}\hlstd{)} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{y} \hlstd{=} \hlstr{"Solar elevation at Helsinki (degrees)"}\hlstd{,}
       \hlkwc{x} \hlstd{=} \hlstr{"Time EEST"}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-astro-8-1} 

}



\end{knitrout}

\section{Task: plotting day length through the year}

For this we first need to generate a sequence of dates. We use \code{seq} as in the previous section, but instead of supplying a length as argument we supply an ending time. Instead of giving \code{by} in minutes as above, we now use days:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{days} \hlkwb{<-} \hlkwd{seq}\hlstd{(}\hlkwc{from}\hlstd{=}\hlkwd{ymd}\hlstd{(}\hlstr{"2014-01-01"}\hlstd{),} \hlkwc{to}\hlstd{=}\hlkwd{ymd}\hlstd{(}\hlstr{"2014-12-31"}\hlstd{),}
            \hlkwc{by}\hlstd{=}\hlstr{"3 day"}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}

To calculate the length of each day, we need to use an explicit loop as function \code{day\_night} is not vectorized. We repeat the calculations for three locations at different latitudes, then row bind the data frames into a single data frame. Each individual data frame contains information to identify the sites:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{len_days} \hlkwb{<-} \hlkwd{length}\hlstd{(days)}
\hlstd{photoperiods} \hlkwb{<-} \hlkwd{numeric}\hlstd{(len_days)}
\hlstd{geo_code_He} \hlkwb{<-} \hlkwd{geocode}\hlstd{(}\hlstr{"Helsinki"}\hlstd{)}
\hlkwa{for} \hlstd{(i} \hlkwa{in} \hlnum{1}\hlopt{:}\hlstd{len_days) \{}
  \hlstd{day_night.ls} \hlkwb{<-} \hlkwd{day_night}\hlstd{(days[i],}
                            \hlkwc{lon} \hlstd{= geo_code_He[[}\hlstr{"lon"}\hlstd{]],}
                            \hlkwc{lat} \hlstd{= geo_code_He[[}\hlstr{"lat"}\hlstd{]],}
                            \hlkwc{tz}\hlstd{=}\hlstr{"EET"}\hlstd{)}
  \hlstd{photoperiods[i]} \hlkwb{<-}
    \hlkwd{as.numeric}\hlstd{(day_night.ls[[}\hlstr{"daylength"}\hlstd{]],}
               \hlkwc{units}\hlstd{=}\hlstr{"hours"}\hlstd{)}
\hlstd{\}}
\hlstd{daylengths_hel} \hlkwb{<-}
  \hlkwd{data.frame}\hlstd{(}\hlkwc{day} \hlstd{= days,}
             \hlkwc{daylength} \hlstd{= photoperiods,}
             \hlkwc{location}\hlstd{=}\hlstr{"Helsinki"}\hlstd{,}
             \hlkwc{lon} \hlstd{= geo_code_He[[}\hlstr{"lon"}\hlstd{]],}
             \hlkwc{lat} \hlstd{= geo_code_He[[}\hlstr{"lat"}\hlstd{]])}
\hlstd{geo_code_Iv} \hlkwb{<-} \hlkwd{geocode}\hlstd{(}\hlstr{"Ivalo"}\hlstd{)}
\hlkwa{for} \hlstd{(i} \hlkwa{in} \hlnum{1}\hlopt{:}\hlstd{len_days) \{}
  \hlstd{day_night.ls} \hlkwb{<-} \hlkwd{day_night}\hlstd{(days[i],}
                            \hlkwc{lon} \hlstd{= geo_code_Iv[[}\hlstr{"lon"}\hlstd{]],}
                            \hlkwc{lat} \hlstd{= geo_code_Iv[[}\hlstr{"lat"}\hlstd{]],}
                            \hlkwc{tz}\hlstd{=}\hlstr{"EET"}\hlstd{)}
  \hlstd{photoperiods[i]} \hlkwb{<-}
    \hlkwd{as.numeric}\hlstd{(day_night.ls[[}\hlstr{"daylength"}\hlstd{]],}
               \hlkwc{units}\hlstd{=}\hlstr{"hours"}\hlstd{)}
\hlstd{\}}
\hlstd{daylengths_ivalo} \hlkwb{<-}
  \hlkwd{data.frame}\hlstd{(}\hlkwc{day} \hlstd{= days,}
             \hlkwc{daylength} \hlstd{= photoperiods,}
             \hlkwc{location}\hlstd{=}\hlstr{"Ivalo"}\hlstd{,}
             \hlkwc{lon} \hlstd{= geo_code_Iv[[}\hlstr{"lon"}\hlstd{]],}
             \hlkwc{lat} \hlstd{= geo_code_Iv[[}\hlstr{"lat"}\hlstd{]])}
\hlstd{geo_code_At} \hlkwb{<-} \hlkwd{geocode}\hlstd{(}\hlstr{"Athens, Greece"}\hlstd{)}
\hlkwa{for} \hlstd{(i} \hlkwa{in} \hlnum{1}\hlopt{:}\hlstd{len_days) \{}
  \hlstd{day_night.ls} \hlkwb{<-} \hlkwd{day_night}\hlstd{(days[i],}
                            \hlkwc{lon} \hlstd{= geo_code_At[[}\hlstr{"lon"}\hlstd{]],}
                            \hlkwc{lat} \hlstd{= geo_code_At[[}\hlstr{"lat"}\hlstd{]],}
                            \hlkwc{tz}\hlstd{=}\hlstr{"EET"}\hlstd{)}
  \hlstd{photoperiods[i]} \hlkwb{<-}
    \hlkwd{as.numeric}\hlstd{(day_night.ls[[}\hlstr{"daylength"}\hlstd{]],}
               \hlkwc{units}\hlstd{=}\hlstr{"hours"}\hlstd{)}
\hlstd{\}}
\hlstd{daylengths_athens} \hlkwb{<-}
  \hlkwd{data.frame}\hlstd{(}\hlkwc{day} \hlstd{= days,}
             \hlkwc{daylength} \hlstd{= photoperiods,}
             \hlkwc{location}\hlstd{=}\hlstr{"Athens"}\hlstd{,}
             \hlkwc{lon} \hlstd{= geo_code_At[[}\hlstr{"lon"}\hlstd{]],}
             \hlkwc{lat} \hlstd{= geo_code_At[[}\hlstr{"lat"}\hlstd{]])}

\hlstd{daylengths} \hlkwb{<-} \hlkwd{rbind}\hlstd{(daylengths_hel,}
                    \hlstd{daylengths_ivalo,}
                    \hlstd{daylengths_athens)}
\end{alltt}
\end{kframe}
\end{knitrout}

Once we have the data available, plotting is simple:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{ggplot}\hlstd{(daylengths,}
       \hlkwd{aes}\hlstd{(}\hlkwc{x} \hlstd{= day,} \hlkwc{y} \hlstd{= daylength,} \hlkwc{colour}\hlstd{=}\hlkwd{factor}\hlstd{(location)))} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{scale_y_continuous}\hlstd{(}\hlkwc{breaks}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{0}\hlstd{,}\hlnum{6}\hlstd{,}\hlnum{12}\hlstd{,}\hlnum{18}\hlstd{,}\hlnum{24}\hlstd{),} \hlkwc{limits}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{0}\hlstd{,}\hlnum{24}\hlstd{))} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{x} \hlstd{=} \hlstr{"Date"}\hlstd{,} \hlkwc{y} \hlstd{=} \hlstr{"Daylength (h)"}\hlstd{,} \hlkwc{colour}\hlstd{=}\hlstr{"Location"}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-astro-11-1} 

}



\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiology))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{lubridate))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{ggmap))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{ggplot2))}
\end{alltt}
\end{kframe}
\end{knitrout}




\chapter{Basic operations on spectra}\label{chap:base}

\begin{abstract}
  In this chapter we describe the objects used to store data and functions and operators for basic operations. We also give some examples of operating on these objects and their components using normal R functions and operators.
\end{abstract}

\section{Packages used in this chapter}

For executing the examples listed in this chapter you need first to load the following packages from the library:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{library}\hlstd{(photobiology)}
\hlkwd{library}\hlstd{(photobiologyWavebands)}
\hlkwd{library}\hlstd{(photobiologyFilters)}
\hlkwd{library}\hlstd{(photobiologyLEDs)}
\end{alltt}
\end{kframe}
\end{knitrout}

%%%%
\section{Introduction}

The suite uses object-oriented programming for its higher level `user-friendly' syntax. Objects are implemented using ``S3'' classes. The two main distinct kinds of objects are different types of spectra, and wavebands. Spectral objects contain, as their name implies, spectral data. Wavebands contain the information needed to calculate irradiance, non-weighted or weighted (effective), and a name and a label to be used in output printing. Functions and operators are defined for operations on these objects, alone and in combination. We will first describe spectra, and then wavebands, in each case describing operators and functions. Towards the end of the chapter we describe

\section{Spectra}\label{sec:spct:objects}

\subsection{How are spectra stored?}

For spectra the classes are a specialization of \code{data.table} which are in turn a specialization of \code{data.frame}. This means that they are compatible with functions that operate on these classes.

\sloppy
The suite defines a \code{generic.spct} class, from which two specialized classes, `\code{filter.spct}, \code{reflector.spct}, \code{source.spct}, \code{response.spct} and \code{chroma.spct} are derived. Having this class structure allows us to create special methods and operators, which use the same names than the generic ones defined by R itself, but take into account the special properties of spectra. Each spectrum object can hold only one spectrum.

Objects of class \code{generic.spct} one one mandatory component \code{w.length}, containing wavelength values in \Unit{nm}.

Objects of class \code{source.spct} have two mandatory components \code{w.length}, and \code{s.e.irrad}, and an optional one, \code{s.q.irrad}. They are expected to contain data expressed always in the same units: nm, for \code{w.length}, \wattnm for \code{s.e.irrad}, and \molnm for \code{s.q.irrad}. Objects can have a ``comment'' attribute with a textual description. Additional columns are ignored, but not deleted, unless the operation applied could invalidate them.

Objects of class \code{filter.spct} have two mandatory components \code{w.length}, and \code{Tfr} and two optional components,\code{Tpc} and \code{A}. They are expected to contain data expressed always in the same units: nm, for \code{w.length}, a fraction of one for \code{Tfr}, and \% for \code{Tpc}. Absorbance \code{A} values are expected to be expressed based on $\log_{10}$. Objects have a ``comment'' attribute with a textual description.

Objects of class \code{reflector.spct} have two mandatory components \code{w.length}, and \code{Rfr} and one optional components,\code{Rpc}. They are expected to contain data expressed always in the same units: nm, for \code{w.length}, a fraction of one for \code{Rfr}, and \% for \code{Rpc}. Objects have a ``comment'' attribute with a textual description.

Objects of class \code{chroma.spct} have four mandatory components \code{w.length}, and \code{x, y, z} giving the chromaticity coordinates for trichromic vision.

Objects of class \code{response.spct} have two mandatory components \code{w.length}, and \code{response} giving the spectral response.

\subsection{How can the user create spectra from his own data}

If the data is already stored in a data frame or data table, or even a list, and if the components have one of the recognized ``standard'' names, specific \code{setGenericSpct}, \code{setSourceSpct}, \code{setFilterSpct}, \code{setReflectorSpct} commands can be used to change the class attribute and check that the object is valid. These functions have the same semantics as \code{setDT} and \code{setDF} from package \code{data.table}, they modify their argument directly---the argument is passed by \emph{reference} instead of by \emph{copy} as is usual in R. As \code{sun.data} is part of the package, we need to make a copy before modifying it, with one's own data frames or data tables this step is not need.

We can create a new object from two vectors,

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{source.spct}\hlstd{(sun.data}\hlopt{$}\hlstd{w.length,} \hlkwc{s.e.irrad} \hlstd{= sun.data}\hlopt{$}\hlstd{s.e.irrad)}
\end{alltt}
\end{kframe}
\end{knitrout}

or make a copy of a data frame or a data table and convert it into a source spectrum,

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{as.source.spct}\hlstd{(sun.data)}
\end{alltt}
\end{kframe}
\end{knitrout}

or convert an existing data frame or data table into a source spectrum\footnote{In this case we need to copy sun.data because this data frame is protected as a member of the package. This is rarely needed with user's data.}.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{my_sun.spct} \hlkwb{<-} \hlstd{sun.data}
\hlkwd{setSourceSpct}\hlstd{(my_sun.spct)}
\end{alltt}
\end{kframe}
\end{knitrout}

We can query the class of an object.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{class}\hlstd{(my_sun.spct)}
\end{alltt}
\begin{verbatim}
## [1] "source.spct"  "generic.spct" "data.table"  
## [4] "data.frame"
\end{verbatim}
\begin{alltt}
\hlkwd{is.source.spct}\hlstd{(my_sun.spct)}
\end{alltt}
\begin{verbatim}
## [1] TRUE
\end{verbatim}
\end{kframe}
\end{knitrout}

Similar functions are available for filter, reflector and response spectral objects.


Table \ref{tab:obj:components} lists the different `names' understood by the constructor functions which take a data frame as argument, and the required and optional components of the different spectral object classes.

\begin{table}
\caption{Names of spectral object components, and the additional names recognized during automatic spectral object creation, and the units of expression.}\label{tab:obj:components}
\begin{center}
\begin{tabular}{lllll}
\toprule
Class    & required & optional & recognized & units\\
\midrule
generic.spct & w.length & --- & wl, wavelength & nm\\
\midrule
source.spct & w.length & --- & wl, wavelength & nm\\
            & s.e.irrad & --- & irradiance & \wattnm\\
            & ---       & s.q.irrad & --- & \molnm\\
\midrule
filter.spct & w.length & --- & wl, wavelength & nm \\
            & Tfr      & --- & --- & $x/1$  \\
            & ---      & Tpc    & transmittance & \% \\
            & ---      & A      & absorbance & a.u. $\log_{10}$-based\\
\midrule
reflector.spct & w.length & --- & wl, wavelength \\
            & Rfr      & --- & --- & $x/1$  \\
            & ---      & Rpc    & reflectance & \% \\
\midrule
response.spct & w.length & --- & wl, wavelength & nm\\
            & response   & --- & response & arbitrary u.\\
%            & ---       & resp.actual & --- & absolute u.\\
\midrule
chroma.spct & w.length & --- & wl, wavelength & nm\\
            & x, y, z  & ---    & X, Y, Z & relative u.\\
\bottomrule
\end{tabular}
\end{center}
\end{table}

\subsection{What operators are available for operations between spectra?}

All operations with spectral objects affect only the required components listed in Table \ref{tab:obj:components}, all optional components are deleted, while unrecognized components are left alone. There will be seldom need to add numerical components, and the user should take into account that the paradigm of the suite is that each spectrum is stored as a separate object. However, it is allowed, and possibly useful to have factors as components with levels identifying different bands, or color vectors with RGB values. Ancillary information information useful for presentation and plotting might sometimes be useful.

Several operators are defined for spectral objects. Using operators is an easy and familiar way of doing calculations, but operators are rather inflexible (they can take at most two arguments, the operands) and performance is slower than with functions with additional parameters that allow optimizing the algorithm. The operators are defined so that an operation between two \code{filter.spct} objects yields another \code{filter.spct} object, an operation between two \code{reflector.spct} yields a \code{reflector.spct} object, and operations between a \code{filter.spct} object and a \code{source.spct}, between a \code{reflector.spct} and a \code{source.spct}, or between two \code{source.spct} objects yield \code{source.spct} objects. The object returned contains data only for the overlapping region of wavelengths. The objects do NOT need to have values at the same wavelengths, as interpolation is handled transparently. All four basic maths operations are supported with any combination of spectra, and the user is responsible for deciding which calculations make sense and which not. Operations can be concatenated and combined. The unary negation operator is also implemented.

For example we can convolute the emission spectrum of a light source and the transmittance spectrum of a filter.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{sun.spct} \hlopt{*} \hlstd{polyester.new.spct}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad
##   1:      293 7.828995e-09
##   2:      294 1.842720e-08
##   3:      295 6.528525e-08
##   4:      296 2.034036e-07
##   5:      297 4.600472e-07
##  ---                      
## 504:      796 3.705200e-01
## 505:      797 3.764354e-01
## 506:      798 3.855015e-01
## 507:      799 3.809123e-01
## 508:      800 3.706909e-01
\end{verbatim}
\end{kframe}
\end{knitrout}

\subsection{What operators are available for operations between spectra and numeric vectors?}

The same four basic math operators plus power (`\verb|^|') are defined for the case when the first term or factor is a spectrum and the second one a numeric vector, possibly of length one. Recycling rules apply. These operations do not alter \code{w.length}, just the other \textit{required} components such as spectral irradiance and transmittance. The optional components are deleted as they can be recalculated if needed. Unrecognized `user' components are left unchanged.

For example we can divide an spectrum by a numeric value (a vector of length 1, which gets recycle). The value returned is a spectral object of the same type as the firt argument.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{sun.spct} \hlopt{/} \hlnum{2}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad
##   1:      293 1.304833e-06
##   2:      294 3.071200e-06
##   3:      295 1.088087e-05
##   4:      296 3.390059e-05
##   5:      297 7.667453e-05
##  ---                      
## 504:      796 2.040308e-01
## 505:      797 2.070602e-01
## 506:      798 2.118140e-01
## 507:      799 2.092925e-01
## 508:      800 2.034528e-01
\end{verbatim}
\end{kframe}
\end{knitrout}

\subsection{What unary math functions are available for spectra?}

Logarithms (\code{log, log10}), square root (\code{sqrt}) and exponentiation (\code{exp}) are defined for spectra. These functions are not applied on \code{w.length}, but instead to the other mandatory component \code{s.e.irrad}, \code{Rfr} or \code{Tfr}. Any optional numeric components are discarded. (Other user-supplied components should remain unchanged, but this needs further checking!)

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{log10}\hlstd{(sun.spct)}
\end{alltt}
\begin{verbatim}
##      w.length  s.e.irrad
##   1:      293 -5.5834152
##   2:      294 -5.2116619
##   3:      295 -4.6623062
##   4:      296 -4.1687627
##   5:      297 -3.8143189
##  ---                    
## 504:      796 -0.3892742
## 505:      797 -0.3828734
## 506:      798 -0.3730153
## 507:      799 -0.3782164
## 508:      800 -0.3905064
\end{verbatim}
\end{kframe}
\end{knitrout}

\subsection{What `summary' functions are available for spectra?}

The R functions \code{summary, print} work using their \code{data.table} definitions, however, there are special versions of \code{range, min, max} that when applied to spectra return values corresponding to wavelengths, two other generic functions defined in the suite give additional summaries of spectra \code{spread, midpoint}.

\subsection{Examples}

Package \code{phobiologyFilters} makes available many different filter spectra, from which we choose Schott filter GG400. Package \code{photobiology} makes available one example solar spectrum. Using these data we will simulate the filtered solar spectrum.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{filtered_sun.spct} \hlkwb{<-} \hlstd{sun.spct} \hlopt{*} \hlstd{gg400.spct}
\hlstd{filtered_sun.spct}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad
##   1:      293 2.609665e-11
##   2:      294 6.142401e-11
##   3:      295 2.176175e-10
##   4:      296 6.780119e-10
##   5:      297 1.533491e-09
##  ---                      
## 504:      796 3.958198e-01
## 505:      797 4.016967e-01
## 506:      798 4.109192e-01
## 507:      799 4.060274e-01
## 508:      800 3.946984e-01
\end{verbatim}
\end{kframe}
\end{knitrout}

The GG440 data is for internal transmittance, consequently the results above would be close to the truth only for filters treated with an anti-reflexion multicoating. Let's assume a filter with 9\% reflectance across all wavelengths (a coarse approximation for uncoated glass):

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{filtered_uncoated_sun.spct} \hlkwb{<-} \hlstd{sun.spct} \hlopt{*} \hlstd{gg400.spct} \hlopt{*} \hlstd{(}\hlnum{100} \hlopt{-} \hlnum{9}\hlstd{)} \hlopt{/} \hlnum{100}
\hlstd{filtered_uncoated_sun.spct}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad
##   1:      293 2.374795e-11
##   2:      294 5.589585e-11
##   3:      295 1.980319e-10
##   4:      296 6.169908e-10
##   5:      297 1.395476e-09
##  ---                      
## 504:      796 3.601960e-01
## 505:      797 3.655440e-01
## 506:      798 3.739365e-01
## 507:      799 3.694849e-01
## 508:      800 3.591755e-01
\end{verbatim}
\end{kframe}
\end{knitrout}

Calculations related to filters will be explained in detail in chapter \ref{chap:filters}. This is just an example of how the operators work, even when, as in this example, the wavelength values do not coincide bertween the two spectra.

%%%%
\subsection{Task: uniform scaling of a spectrum}\label{sec:base:scale}

As noted above operators are available for \code{generic.scpt}, \code{source.spct}, \code{filter.spct} and \code{reflector.spct} objects, and `recycling' takes places when needed:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{sun.spct}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad    s.q.irrad
##   1:      293 2.609665e-06 6.391730e-12
##   2:      294 6.142401e-06 1.509564e-11
##   3:      295 2.176175e-05 5.366385e-11
##   4:      296 6.780119e-05 1.677626e-10
##   5:      297 1.533491e-04 3.807181e-10
##  ---                                   
## 504:      796 4.080616e-01 2.715219e-06
## 505:      797 4.141204e-01 2.758995e-06
## 506:      798 4.236281e-01 2.825879e-06
## 507:      799 4.185850e-01 2.795738e-06
## 508:      800 4.069055e-01 2.721132e-06
\end{verbatim}
\begin{alltt}
\hlstd{sun.spct} \hlopt{*} \hlnum{2}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad
##   1:      293 5.219330e-06
##   2:      294 1.228480e-05
##   3:      295 4.352350e-05
##   4:      296 1.356024e-04
##   5:      297 3.066981e-04
##  ---                      
## 504:      796 8.161233e-01
## 505:      797 8.282407e-01
## 506:      798 8.472561e-01
## 507:      799 8.371699e-01
## 508:      800 8.138111e-01
\end{verbatim}
\end{kframe}
\end{knitrout}

All four basic binary operators (\code{+, -, *, /}) can be used in the same way, but when operating between a spectrum an a numeric value the spectrum should be the first term or factor. If an operation on a ``source.spct'' would yield different values for data on energy and photon basis, only the value based on energy data is returned in \code{s.e.irrad} and \code{s.q.irrad} is set to NA.

%%%%
\subsection{Task: simple operations between two spectra}\label{sec:base:simple:opper}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{filtered_sun.spct} \hlkwb{<-} \hlstd{ug1.spct} \hlopt{*} \hlstd{sun.spct}
\hlstd{filtered_sun.spct}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad
##   1:      293 2.286067e-07
##   2:      294 6.191540e-07
##   3:      295 2.480839e-06
##   4:      296 8.624311e-06
##   5:      297 2.153021e-05
##  ---                      
## 504:      796 1.069122e-01
## 505:      797 1.072572e-01
## 506:      798 1.084488e-01
## 507:      799 1.059020e-01
## 508:      800 1.017264e-01
\end{verbatim}
\end{kframe}
\end{knitrout}

All four basic binary operators (\code{+, -, *, /}) can be used in the same way, and they can be combined into equations.

%%%%
\subsection{Task: arithmetic operations within one spectrum}\label{sec:base:binoper}

If data for two spectra are available for the same wavelength values, then we can simply use the built in R mat operators on vectors (e.g.\ when only individual vectors are available, or a data frame). These operators are vectorized, which means that an addition between two vectors adds the elements at each position. A non-nonsensical example follows using R syntax on a data frame, returning a vector.

Using data frame syntax on a data frame, data table or spectral object, returning a vector:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlcom{# not run}
\hlkwd{with}\hlstd{(sun.spct, s.e.irrad}\hlopt{^}\hlnum{2} \hlopt{/} \hlstd{w.length)}
\end{alltt}
\end{kframe}
\end{knitrout}

Using data table syntax on a data table or spectral object, returning a vector:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlcom{# not run}
\hlstd{sun.spct[ , s.e.irrad}\hlopt{^}\hlnum{2} \hlopt{/} \hlstd{w.length]}
\end{alltt}
\end{kframe}
\end{knitrout}

Using data table syntax, adding the result to the \code{data.table} object, or a \code{\_\_\_.spct} object:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlcom{# run}
\hlstd{my_sun.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(sun.spct)}
\hlstd{my_sun.spct[ , result} \hlkwb{:=} \hlstd{s.e.irrad}\hlopt{^}\hlnum{2} \hlopt{/} \hlstd{w.length]}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad    s.q.irrad
##   1:      293 2.609665e-06 6.391730e-12
##   2:      294 6.142401e-06 1.509564e-11
##   3:      295 2.176175e-05 5.366385e-11
##   4:      296 6.780119e-05 1.677626e-10
##   5:      297 1.533491e-04 3.807181e-10
##  ---                                   
## 504:      796 4.080616e-01 2.715219e-06
## 505:      797 4.141204e-01 2.758995e-06
## 506:      798 4.236281e-01 2.825879e-06
## 507:      799 4.185850e-01 2.795738e-06
## 508:      800 4.069055e-01 2.721132e-06
##            result
##   1: 2.324352e-14
##   2: 1.283302e-13
##   3: 1.605335e-12
##   4: 1.553041e-11
##   5: 7.917823e-11
##  ---             
## 504: 2.091888e-04
## 505: 2.151765e-04
## 506: 2.248882e-04
## 507: 2.192908e-04
## 508: 2.069651e-04
\end{verbatim}
\end{kframe}
\end{knitrout}

\subsection{Task: other operations between two spectra}\label{sec:base:binoper}

If data for two spectra are available for the same wavelength values, then we can simply use the built in R math operators. These operators are vectorized, which means that an addition between two vectors adds the elements at the same index position in the two vectors with data, in this case for two different spectra. So, they do not differ from the examples in the previous section for normal R syntax. Data table syntax is no longer so convenient in this case.

In contrast to the previous case, operations using built-in R operators cannot be done if the wavelengths in two spectral data sets are not matched. In this situation is when functions and operators defined in package \code{photobiology} come to the rescue by transparently making the two operand spectra compatible by interpolation. The result they return includes all the individual wavelength values (the set union of the wavelengths from the two spectra in the region where they overlap). The functions are \code{sum\_spectra}, \code{subt\_spectra}, \code{prod\_spectra}, \code{div\_spectra}, and \code{oper\_spectra}. Here is a very simple hypothetical example:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlcom{# not run}
\hlstd{out1.dt} \hlkwb{<-} \hlkwd{sum_spectra}\hlstd{(spc1}\hlopt{$}\hlstd{w.length, spc2}\hlopt{$}\hlstd{w.length,}
                       \hlstd{spc1}\hlopt{$}\hlstd{s.e.irrad, spc2}\hlopt{$}\hlstd{s.e.irrad)}
\end{alltt}
\end{kframe}
\end{knitrout}

We can achieve the same result, with simpler syntax, using spectral objects and the corresponding operators. The actual computations are done in both cases by the same code, but the example below adds some ``syntactic sugar'' to make the script code more readable.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{out2.spct} \hlkwb{<-} \hlstd{sun.spct} \hlopt{+} \hlstd{sun.spct}
\hlstd{out3.spct} \hlkwb{<-} \hlkwd{e2q}\hlstd{(sun.spct} \hlopt{+} \hlstd{sun.spct)}
\hlstd{out3.spct}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad    s.q.irrad
##   1:      293 5.219330e-06 1.278346e-11
##   2:      294 1.228480e-05 3.019128e-11
##   3:      295 4.352350e-05 1.073277e-10
##   4:      296 1.356024e-04 3.355251e-10
##   5:      297 3.066981e-04 7.614363e-10
##  ---                                   
## 504:      796 8.161233e-01 5.430438e-06
## 505:      797 8.282407e-01 5.517990e-06
## 506:      798 8.472561e-01 5.651759e-06
## 507:      799 8.371699e-01 5.591475e-06
## 508:      800 8.138111e-01 5.442264e-06
\end{verbatim}
\end{kframe}
\end{knitrout}

In both cases only spectral energy irradiance is calculated during the summing operation, while in the second example, it is simple to convert the returned spectral energy irradiance values into spectral photon irradiance. \code{out1.data} is a "data.table", while the second will be a spectrum of a class dependent on the classes of \code{spc1} and \code{spc2}. Obviously, the second calculation will be slower, but in most cases unnoticeable so\footnote{The reason behind keeping \code{e2q} as a separately called function is that otherwise calculations would be slowed-down by doing the conversion when it is not needed, either at intermediate steps in the calculation, or when the user has no use for the result}.

The function \code{oper\_spectra} takes the operator to use as an argument, and this abstraction both simplifies the package code, and also makes it easy for users to add other operators if needed:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{out.data} \hlkwb{<-} \hlkwd{oper_spectra}\hlstd{(spc1}\hlopt{$}\hlstd{w.length, spc2}\hlopt{$}\hlstd{w.length,}
                         \hlstd{spc1}\hlopt{$}\hlstd{s.e.irrad, spc2}\hlopt{$}\hlstd{s.e.irrad,}
                         \hlkwc{bin.oper}\hlstd{=`^`)}
\end{alltt}
\end{kframe}
\end{knitrout}

and yields one spectrum to a power of a second one. Such additional functions are not predefined, as I cannot think of any use for them. \code{oper\_spectra} is used internally to define the functions for the four basic maths operators, and the corresponding operators.

\subsection{Task: trimming a spectrum}\label{sec:base:trim}

This is basically a subsetting operation, but our functions operate only based on wavelengths, while R \code{subset} is more general. On the other hand, our functions \code{trim\_spct} and \code{trim\_tails} add a few `bells and whistles'. The trimming is based on wavelengths and by default the cut points are inserted by interpolation, so that the spectrum returned includes the limits given as arguments. In addition, by default the trimming is done by deleting both spectral irradiance and wavelength values outside the range delimited by the limits (just like \code{subset} does), but through parameter \code{fill} the values outside the limits can be replaced by any value desired (most commonly \code{NA} or 0.) It is possible to supply only one, or both of \code{low.limit} and \code{high.limit}, depending on the desired trimming, or use a \code{waveband} definition. If the limits are outside the original data set, then the output spectrum is expanded and the tails filled with the value given as argument for \code{fill}.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{trim_spct}\hlstd{(my_sun.spct,} \hlkwd{UV}\hlstd{())}
\end{alltt}


{\ttfamily\noindent\color{warningcolor}{\#\# Warning in trim\_spct(my\_sun.spct, UV()): Not trimming short end as low.limit is outside spectral data range.}}\begin{alltt}
\hlkwd{trim_spct}\hlstd{(my_sun.spct,} \hlkwd{UV}\hlstd{(),} \hlkwc{fill}\hlstd{=}\hlnum{0}\hlstd{)}
\hlkwd{trim_spct}\hlstd{(my_sun.spct,} \hlkwc{low.limit}\hlstd{=}\hlnum{400}\hlstd{)}
\hlkwd{trim_spct}\hlstd{(my_sun.spct,} \hlkwc{low.limit}\hlstd{=}\hlnum{250}\hlstd{,} \hlkwc{fill}\hlstd{=}\hlnum{0.0}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}

\code{trim\_tails} can be used for trimming spectra when data is available as vectors. We here present different examples for both functions, we encourage readers to try to reproduce all examples using both functions.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlcom{# not run}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{trim_tails}\hlstd{(w.length, s.e.irrad,}
                \hlkwc{low.limit}\hlstd{=}\hlnum{300}\hlstd{))}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{trim_tails}\hlstd{(w.length, s.e.irrad,}
                \hlkwc{low.limit}\hlstd{=}\hlnum{300}\hlstd{,} \hlkwc{fill}\hlstd{=}\hlkwa{NULL}\hlstd{))}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{trim_tails}\hlstd{(w.length, s.e.irrad,}
                \hlkwc{low.limit}\hlstd{=}\hlnum{300}\hlstd{,} \hlkwc{fill}\hlstd{=}\hlnum{NA}\hlstd{))}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{trim_tails}\hlstd{(w.length, s.e.irrad,}
                \hlkwc{low.limit}\hlstd{=}\hlnum{300}\hlstd{,} \hlkwc{fill}\hlstd{=}\hlnum{0.0}\hlstd{))}
\end{alltt}
\end{kframe}
\end{knitrout}

If the limits are outside the range of the input spectral data, and \code{fill} is set to a value other than \code{NULL} the output is expanded up to the limits and filled.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlcom{# not run}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{trim_tails}\hlstd{(w.length, s.e.irrad,}
                \hlkwc{low.limit}\hlstd{=}\hlnum{300}\hlstd{,} \hlkwc{high.limit}\hlstd{=}\hlnum{1000}\hlstd{))}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{trim_tails}\hlstd{(w.length, s.e.irrad,}
                \hlkwc{low.limit}\hlstd{=}\hlnum{300}\hlstd{,} \hlkwc{high.limit}\hlstd{=}\hlnum{1000}\hlstd{,} \hlkwc{fill}\hlstd{=}\hlnum{NA}\hlstd{))}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{trim_tails}\hlstd{(w.length, s.e.irrad,}
                \hlkwc{low.limit}\hlstd{=}\hlnum{300}\hlstd{,} \hlkwc{high.limit}\hlstd{=}\hlnum{1000}\hlstd{,} \hlkwc{fill}\hlstd{=}\hlnum{0.0}\hlstd{))}
\end{alltt}
\end{kframe}
\end{knitrout}

\subsection{Task: conversion from energy to photon base}\label{sec:base:e2q}

The energy of a quantum of radiation\index{radiation quantum}\index{photon} in a vacuum, \quantum, depends on the wavelength\index{wavelength}, $\lambda$, or frequency\index{frequency}\footnote{Wavelength and frequency are related to each other by the speed of light, according to $\nu = c / \lambda$ where $c$ is speed of light in vacuum. Consequently there are two equivalent formulations for equation \ref{equ_energy}.}, $\nu$,
%
\begin{equation}
\quantum = h \cdot \nu = h \cdot \frac{c}{\lambda} \label{equ_energy}
\end{equation}
%
with the Planck constant\index{Planck constant} $h=6.626\times 10^{-34}$ \jsecond and speed of light in vacuum $c=2.998\times 10^{8}$ \msecond. When dealing with numbers of photons, the equation (\ref{equ_energy}) can be extended by using Avogadro's number\index{Avogadro's number} $N_\mathrm{A}=6.022\times 10^{23}$ mol$^{-1}$. Thus, the energy of one mole of photons, \molequanta, is
%
\begin{equation}
\molequanta = h' \cdot \nu = h' \cdot \frac{c}{\lambda} \label{equ_molenergy}
\label{eq:energy:mol:photons}
\end{equation}
%
with $h'=h\cdot N_\mathrm{A}=3.990\times 10^{-10}$ \Unit{J\,s\,mol^{-1}}.

Function \code{as\_quantum} converts \watt into \textit{number of photons} per square meter per second, and \code{as\_quantum\_mol} does the same conversion but returns \mol. Function \code{as\_quantum} is based on the equation \ref{equ_energy} while \code{as\_quantum\_mol} uses equation \ref{equ_molenergy}. To obtain \umol we multiply by $10^6$:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{as_quantum_mol}\hlstd{(}\hlnum{550}\hlstd{,} \hlnum{200}\hlstd{)} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
## [1] 919.5147
\end{verbatim}
\end{kframe}
\end{knitrout}

The calculation above is for monochromatic light (200 \watt at 550 \Unit{nm}).

The functions are vectorized, so they can be applied to whole spectra (when data are available as vectors), to convert \wattnm to \molnm:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{head}\hlstd{(sun.data}\hlopt{$}\hlstd{s.e.irrad,} \hlnum{10}\hlstd{)}
\end{alltt}
\begin{verbatim}
##  [1] 2.609665e-06 6.142401e-06 2.176175e-05
##  [4] 6.780119e-05 1.533491e-04 3.669677e-04
##  [7] 7.845430e-04 1.264554e-03 2.623718e-03
## [10] 3.922583e-03
\end{verbatim}
\begin{alltt}
\hlstd{s.q.irrad} \hlkwb{<-} \hlkwd{with}\hlstd{(sun.data,}
                  \hlkwd{as_quantum_mol}\hlstd{(w.length, s.e.irrad))}
\hlkwd{head}\hlstd{(s.q.irrad,} \hlnum{10}\hlstd{)}
\end{alltt}
\begin{verbatim}
##  [1] 6.391730e-12 1.509564e-11 5.366385e-11
##  [4] 1.677626e-10 3.807181e-10 9.141345e-10
##  [7] 1.960893e-09 3.171207e-09 6.601607e-09
## [10] 9.902505e-09
\end{verbatim}
\end{kframe}
\end{knitrout}

Once again, easiest is to use spectral objects. The default is to add \code{s.q.irrad} to the source spectrum, unless it is already present in the object in which case values are not recalculated.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{sun.spct}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad    s.q.irrad
##   1:      293 2.609665e-06 6.391730e-12
##   2:      294 6.142401e-06 1.509564e-11
##   3:      295 2.176175e-05 5.366385e-11
##   4:      296 6.780119e-05 1.677626e-10
##   5:      297 1.533491e-04 3.807181e-10
##  ---                                   
## 504:      796 4.080616e-01 2.715219e-06
## 505:      797 4.141204e-01 2.758995e-06
## 506:      798 4.236281e-01 2.825879e-06
## 507:      799 4.185850e-01 2.795738e-06
## 508:      800 4.069055e-01 2.721132e-06
\end{verbatim}
\begin{alltt}
\hlstd{my_sun.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(sun.spct)}
\hlkwd{e2q}\hlstd{(my_sun.spct)}
\end{alltt}
\end{kframe}
\end{knitrout}

%%%%%% CHECK THIS  and/or fix the code if needed
\code{e2q} has a parameter \code{action}, with default \code{"add"}. Another valid argument value is \code{"replace"}, but it should be used with extreme care, as the returned object, is no longer a \code{source.spct} object and is not compatible with all operators and functions defined for \code{source.spct} objects.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{sun.spct}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad    s.q.irrad
##   1:      293 2.609665e-06 6.391730e-12
##   2:      294 6.142401e-06 1.509564e-11
##   3:      295 2.176175e-05 5.366385e-11
##   4:      296 6.780119e-05 1.677626e-10
##   5:      297 1.533491e-04 3.807181e-10
##  ---                                   
## 504:      796 4.080616e-01 2.715219e-06
## 505:      797 4.141204e-01 2.758995e-06
## 506:      798 4.236281e-01 2.825879e-06
## 507:      799 4.185850e-01 2.795738e-06
## 508:      800 4.069055e-01 2.721132e-06
\end{verbatim}
\begin{alltt}
\hlstd{my_sun.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(sun.spct)}
\hlkwd{e2q}\hlstd{(my_sun.spct,} \hlstr{"replace"}\hlstd{)}
\hlstd{my_sun.spct}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad    s.q.irrad
##   1:      293 2.609665e-06 6.391730e-12
##   2:      294 6.142401e-06 1.509564e-11
##   3:      295 2.176175e-05 5.366385e-11
##   4:      296 6.780119e-05 1.677626e-10
##   5:      297 1.533491e-04 3.807181e-10
##  ---                                   
## 504:      796 4.080616e-01 2.715219e-06
## 505:      797 4.141204e-01 2.758995e-06
## 506:      798 4.236281e-01 2.825879e-06
## 507:      799 4.185850e-01 2.795738e-06
## 508:      800 4.069055e-01 2.721132e-06
\end{verbatim}
\end{kframe}
\end{knitrout}

\subsection{Task: conversion from photon to energy base}\label{sec:base:q2e}

\code{as\_energy} is the inverse function of \code{as\_quantum\_mol}:

In \cite{Aphalo2012} it is written: ``Example 1: red light at 600~nm has about 200 \kjmole, therefore, 1~$\mymu$mol photons has 0.2~J. Example 2: \UVB radiation at 300~nm has about 400 \kjmole, therefore, 1~$\mymu$mol photons has 0.4~J. Equations \ref{equ_energy} and \ref{equ_molenergy} are valid for all kinds of electromagnetic waves.'' Let's re-calculate the exact values---as the output from \code{as\_energy} is expressed in \jmole we multiply the result by $10^{-3}$ to obtain \kjmole:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{as_energy}\hlstd{(}\hlnum{600}\hlstd{,} \hlnum{1}\hlstd{)} \hlopt{*} \hlnum{1e-3}
\end{alltt}
\begin{verbatim}
## [1] 199.3805
\end{verbatim}
\begin{alltt}
\hlkwd{as_energy}\hlstd{(}\hlnum{300}\hlstd{,} \hlnum{1}\hlstd{)} \hlopt{*} \hlnum{1e-3}
\end{alltt}
\begin{verbatim}
## [1] 398.7611
\end{verbatim}
\end{kframe}
\end{knitrout}

Because of vectorization we can also operate on a whole spectrum:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{s.e.irrad} \hlkwb{<-} \hlkwd{with}\hlstd{(sun.data,} \hlkwd{as_energy}\hlstd{(w.length, s.q.irrad))}
\end{alltt}
\end{kframe}
\end{knitrout}

Function \code{q2e} is the reverse of \code{e2q}, it is rarely needed in user code and \code{source.spct} objects almost always contain \code{s.e.irrad}. It can also be used as a roundabout way of removing a \code{s.q.irrad} column, which cloud be usefull when some objects may be missing spectral energy itrradiance data.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{sun.spct}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad    s.q.irrad
##   1:      293 2.609665e-06 6.391730e-12
##   2:      294 6.142401e-06 1.509564e-11
##   3:      295 2.176175e-05 5.366385e-11
##   4:      296 6.780119e-05 1.677626e-10
##   5:      297 1.533491e-04 3.807181e-10
##  ---                                   
## 504:      796 4.080616e-01 2.715219e-06
## 505:      797 4.141204e-01 2.758995e-06
## 506:      798 4.236281e-01 2.825879e-06
## 507:      799 4.185850e-01 2.795738e-06
## 508:      800 4.069055e-01 2.721132e-06
\end{verbatim}
\begin{alltt}
\hlstd{my_sun.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(sun.spct)}
\hlkwd{q2e}\hlstd{(my_sun.spct,} \hlstr{"replace"}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}

Otherwise it feels more natural to use the following data.table syntax:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{sun.spct}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad    s.q.irrad
##   1:      293 2.609665e-06 6.391730e-12
##   2:      294 6.142401e-06 1.509564e-11
##   3:      295 2.176175e-05 5.366385e-11
##   4:      296 6.780119e-05 1.677626e-10
##   5:      297 1.533491e-04 3.807181e-10
##  ---                                   
## 504:      796 4.080616e-01 2.715219e-06
## 505:      797 4.141204e-01 2.758995e-06
## 506:      798 4.236281e-01 2.825879e-06
## 507:      799 4.185850e-01 2.795738e-06
## 508:      800 4.069055e-01 2.721132e-06
\end{verbatim}
\begin{alltt}
\hlstd{my_sun.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(sun.spct)}
\hlstd{my_sun.spct[ , s.q.irrad} \hlkwb{:=} \hlkwa{NULL}\hlstd{]}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad
##   1:      293 2.609665e-06
##   2:      294 6.142401e-06
##   3:      295 2.176175e-05
##   4:      296 6.780119e-05
##   5:      297 1.533491e-04
##  ---                      
## 504:      796 4.080616e-01
## 505:      797 4.141204e-01
## 506:      798 4.236281e-01
## 507:      799 4.185850e-01
## 508:      800 4.069055e-01
\end{verbatim}
\end{kframe}
\end{knitrout}

As we have seen above by default \code{q2e} and \code{e2q} return a modified copy of the spectrum as a new object. This is safe, but inefficient in use of memory and computing resources. We first copy the data to a new object, and delete the \code{s.e.irrad} variable, so that we can test the use of the functions by reference.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{sun.spct}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad    s.q.irrad
##   1:      293 2.609665e-06 6.391730e-12
##   2:      294 6.142401e-06 1.509564e-11
##   3:      295 2.176175e-05 5.366385e-11
##   4:      296 6.780119e-05 1.677626e-10
##   5:      297 1.533491e-04 3.807181e-10
##  ---                                   
## 504:      796 4.080616e-01 2.715219e-06
## 505:      797 4.141204e-01 2.758995e-06
## 506:      798 4.236281e-01 2.825879e-06
## 507:      799 4.185850e-01 2.795738e-06
## 508:      800 4.069055e-01 2.721132e-06
\end{verbatim}
\begin{alltt}
\hlstd{my_sun.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(sun.spct)}
\hlstd{my_sun.spct[ , s.e.irrad} \hlkwb{:=} \hlkwa{NULL}\hlstd{]}
\end{alltt}
\begin{verbatim}
##      w.length    s.q.irrad
##   1:      293 6.391730e-12
##   2:      294 1.509564e-11
##   3:      295 5.366385e-11
##   4:      296 1.677626e-10
##   5:      297 3.807181e-10
##  ---                      
## 504:      796 2.715219e-06
## 505:      797 2.758995e-06
## 506:      798 2.825879e-06
## 507:      799 2.795738e-06
## 508:      800 2.721132e-06
\end{verbatim}
\end{kframe}
\end{knitrout}

When parameter \code{byref} is given \code{TRUE} as argument the original spectrum is modified.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{q2e}\hlstd{(my_sun.spct,} \hlkwc{byref}\hlstd{=}\hlnum{TRUE}\hlstd{)}
\hlstd{my_sun.spct}
\end{alltt}
\begin{verbatim}
##      w.length    s.q.irrad    s.e.irrad
##   1:      293 6.391730e-12 2.609665e-06
##   2:      294 1.509564e-11 6.142401e-06
##   3:      295 5.366385e-11 2.176175e-05
##   4:      296 1.677626e-10 6.780119e-05
##   5:      297 3.807181e-10 1.533491e-04
##  ---                                   
## 504:      796 2.715219e-06 4.080616e-01
## 505:      797 2.758995e-06 4.141204e-01
## 506:      798 2.825879e-06 4.236281e-01
## 507:      799 2.795738e-06 4.185850e-01
## 508:      800 2.721132e-06 4.069055e-01
\end{verbatim}
\end{kframe}
\end{knitrout}

\subsection{Task: interpolating a spectrum}\label{sec:base:interpol}

Functions \code{interpolate\_spct} and \code{interpolate\_spectrum} allow interpolation to different wavelength values. \code{interpolate\_spectrum} is used internally, and accepts spectral data measured at arbitrary wavelengths. Raw data from array spectrometers is not available with a constant wavelength step. It is always best to do any interpolation as late as possible in the data analysis.

In this example we generate interpolated data for the range 280~nm to 300~nm at 1~nm steps, by default output values outside the wavelength range of the input are set to \code{NA}s unless a different argument is provided for parameter \code{fill}:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{interpolate_spct}\hlstd{(sun.spct,} \hlkwd{seq}\hlstd{(}\hlnum{290}\hlstd{,} \hlnum{300}\hlstd{,} \hlkwc{by}\hlstd{=}\hlnum{0.1}\hlstd{))}
\end{alltt}
\begin{verbatim}
##      w.length   s.e.irrad    s.q.irrad
##   1:    290.0          NA           NA
##   2:    290.1          NA           NA
##   3:    290.2          NA           NA
##   4:    290.3          NA           NA
##   5:    290.4          NA           NA
##  ---                                  
##  97:    299.6 0.001072550 2.687082e-09
##  98:    299.7 0.001120551 2.808113e-09
##  99:    299.8 0.001168552 2.929144e-09
## 100:    299.9 0.001216553 3.050176e-09
## 101:    300.0 0.001264554 3.171207e-09
\end{verbatim}
\begin{alltt}
\hlkwd{interpolate_spct}\hlstd{(sun.spct,} \hlkwd{seq}\hlstd{(}\hlnum{290}\hlstd{,} \hlnum{300}\hlstd{,} \hlkwc{by}\hlstd{=}\hlnum{0.1}\hlstd{),} \hlkwc{fill}\hlstd{=}\hlnum{0.0}\hlstd{)}
\end{alltt}
\begin{verbatim}
##      w.length   s.e.irrad    s.q.irrad
##   1:    290.0 0.000000000 0.000000e+00
##   2:    290.1 0.000000000 0.000000e+00
##   3:    290.2 0.000000000 0.000000e+00
##   4:    290.3 0.000000000 0.000000e+00
##   5:    290.4 0.000000000 0.000000e+00
##  ---                                  
##  97:    299.6 0.001072550 2.687082e-09
##  98:    299.7 0.001120551 2.808113e-09
##  99:    299.8 0.001168552 2.929144e-09
## 100:    299.9 0.001216553 3.050176e-09
## 101:    300.0 0.001264554 3.171207e-09
\end{verbatim}
\end{kframe}
\end{knitrout}

\code{interpolate\_spct} takes any \code{\_\_.spct} object, and returns an object of the same type as its input. It can be used to interpolate source spectra as well as transmittance, reflectance, response, and even generic spectra.

\code{interpolate\_spectrum} takes numeric vectors as arguments, but is otherwise functionally equivalent.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.dt,}
     \hlkwd{interpolate_spectrum}\hlstd{(w.length, s.e.irrad,} \hlnum{290}\hlopt{:}\hlnum{300}\hlstd{))}
\end{alltt}
\begin{verbatim}
##  [1]           NA           NA           NA
##  [4] 2.609665e-06 6.142401e-06 2.176175e-05
##  [7] 6.780119e-05 1.533491e-04 3.669677e-04
## [10] 7.845430e-04 1.264554e-03
\end{verbatim}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.dt,}
     \hlkwd{interpolate_spectrum}\hlstd{(w.length, s.e.irrad,} \hlnum{290}\hlopt{:}\hlnum{300}\hlstd{,} \hlkwc{fill}\hlstd{=}\hlnum{0.0}\hlstd{))}
\end{alltt}
\begin{verbatim}
##  [1] 0.000000e+00 0.000000e+00 0.000000e+00
##  [4] 2.609665e-06 6.142401e-06 2.176175e-05
##  [7] 6.780119e-05 1.533491e-04 3.669677e-04
## [10] 7.845430e-04 1.264554e-03
\end{verbatim}
\end{kframe}
\end{knitrout}

\begin{framed}
These functions, in their current implementation, always return
interpolated values, even when the density of wavelengths in the output is less than that in the input.
A future version of the package will include a \code{smooth\_spectrum} function, and possibly a \code{remap\_w.length} function that will automatically choose between interpolation and smoothing/averaging as needed.
\end{framed}

\section{Wavebands}\label{sec:wb:objects}

\subsection{How are wavebands stored?}

Wavebands are derived from R lists. All valid R operations for lists can be also used with \code{waveband} objects. However, there are \code{waveband}-specific specializations of generic R methods.

\subsection{How can the user create waveband objects}

Wavebands are created by means of function \code{new\_waveband} which has several arguments, but except for the first two they have default values.

The simplest \code{waveband} creation call is one supplying as argument just any R object for which the \code{range} function returns the wavelength limits of the desired band.

Any numeric vector of at least two elements, any spectral object or any waveband object is valid input.
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{waveband}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{300}\hlstd{,} \hlnum{400}\hlstd{))}
\end{alltt}
\begin{verbatim}
## range.300.400 
## low (nm) 300 
## high (nm) 400 
## weighted none
\end{verbatim}
\end{kframe}
\end{knitrout}

As you can see above, a name and label are created automatically for the new wavebenad. The user can also supply these as arguments, but must be careful not to duplicate existing names.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{waveband}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{300}\hlstd{,} \hlnum{400}\hlstd{),} \hlkwc{wb.name}\hlstd{=}\hlstr{"a.name"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## a.name 
## low (nm) 300 
## high (nm) 400 
## weighted none
\end{verbatim}
\end{kframe}
\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{waveband}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{300}\hlstd{,} \hlnum{400}\hlstd{),} \hlkwc{wb.name}\hlstd{=}\hlstr{"a.name"}\hlstd{,} \hlkwc{wb.label}\hlstd{=}\hlstr{"A nice name"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## a.name 
## low (nm) 300 
## high (nm) 400 
## weighted none
\end{verbatim}
\end{kframe}
\end{knitrout}

An alterantive function, taking two numbers, giving the boundaries of the waveband is also available.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{new_waveband}\hlstd{(}\hlnum{300}\hlstd{,} \hlnum{400}\hlstd{)}
\end{alltt}
\begin{verbatim}
## range.300.400 
## low (nm) 300 
## high (nm) 400 
## weighted none
\end{verbatim}
\end{kframe}
\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{new_waveband}\hlstd{(}\hlnum{300}\hlstd{,} \hlnum{400}\hlstd{,} \hlkwc{wb.name}\hlstd{=}\hlstr{"a.name"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## a.name 
## low (nm) 300 
## high (nm) 400 
## weighted none
\end{verbatim}
\end{kframe}
\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{new_waveband}\hlstd{(}\hlnum{300}\hlstd{,} \hlnum{400}\hlstd{,} \hlkwc{wb.name}\hlstd{=}\hlstr{"a.name"}\hlstd{,} \hlkwc{wb.label}\hlstd{=}\hlstr{"A nice name"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## a.name 
## low (nm) 300 
## high (nm) 400 
## weighted none
\end{verbatim}
\end{kframe}
\end{knitrout}

For both functions, if we include a weighting function, there is still quite a lot of flexibility. One can supply either a function that takes energy irradiance as input or a function that takes photon irradiance as input. Unless both are supplied, the missing function will be automatically created. There are also arguments related to normalization, both of the output, and of the SWF supplied as argument. In the examples above, `hinges' are created automatically for the range extremes. When using SWF with discontinuous derivatives, best results are obtained by supplying the hinges to be used as arguments to \code{new\_waveband}. An example follows for the definition of a waveband for the CIE98 SWF---the function \code{CIE.e.fun} is defined in package \code{photobiologyWavebands} but any R function taking a numeric vector of wavelengths as input and returning a numeric vector of the same length containing weights can be used. The use of SWFs is discussed in more detail in chapter \ref{chap:wt:irrad}.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{waveband}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{250}\hlstd{,} \hlnum{400}\hlstd{),}
         \hlkwc{weight}\hlstd{=}\hlstr{"SWF"}\hlstd{,} \hlkwc{SWF.e.fun}\hlstd{=CIE.e.fun,} \hlkwc{SWF.norm}\hlstd{=}\hlnum{298}\hlstd{,}
         \hlkwc{norm}\hlstd{=}\hlnum{298}\hlstd{,} \hlkwc{hinges}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{249.99}\hlstd{,} \hlnum{250}\hlstd{,} \hlnum{298}\hlstd{,} \hlnum{328}\hlstd{,} \hlnum{399.99}\hlstd{,} \hlnum{400}\hlstd{),}
         \hlkwc{wb.name}\hlstd{=}\hlstr{"CIE98.298"}\hlstd{,} \hlkwc{wb.label}\hlstd{=}\hlstr{"CIE98"}\hlstd{)}
\end{alltt}


{\ttfamily\noindent\color{warningcolor}{\#\# Warning in new\_waveband(x.range[1], x.range[2], weight = weight, SWF.e.fun = SWF.e.fun, : Warning: either both photon and energy SWFs should be supplied, or a value for the\\\#\#\ \ \ \ \ \ \ \ \ \ \ \ \ \  wavelength at which the function supplied is normalized should be supplied through SWF.norm}}\begin{verbatim}
## CIE98.298 
## low (nm) 250 
## high (nm) 400 
## weighted SWF
\end{verbatim}
\end{kframe}
\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{new_waveband}\hlstd{(}\hlkwc{w.low}\hlstd{=}\hlnum{250}\hlstd{,} \hlkwc{w.high}\hlstd{=}\hlnum{400}\hlstd{,}
             \hlkwc{weight}\hlstd{=}\hlstr{"SWF"}\hlstd{,} \hlkwc{SWF.e.fun}\hlstd{=CIE.e.fun,} \hlkwc{SWF.norm}\hlstd{=}\hlnum{298}\hlstd{,}
             \hlkwc{norm}\hlstd{=}\hlnum{298}\hlstd{,} \hlkwc{hinges}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{249.99}\hlstd{,} \hlnum{250}\hlstd{,} \hlnum{298}\hlstd{,} \hlnum{328}\hlstd{,} \hlnum{399.99}\hlstd{,} \hlnum{400}\hlstd{),}
             \hlkwc{wb.name}\hlstd{=}\hlstr{"CIE98.298"}\hlstd{,} \hlkwc{wb.label}\hlstd{=}\hlstr{"CIE98"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## CIE98.298 
## low (nm) 250 
## high (nm) 400 
## weighted SWF 
## normalized at 298 nm
\end{verbatim}
\end{kframe}
\end{knitrout}


\subsection{What `summary' functions are available for wavebands?}

Special methods for \code{waveband}s of \code{print} giving more compact output than the default \code{print} method for lists. In addition, \code{range, min, max} when applied to wavebands return values corresponding to wavelengths, other generic functions defined in the suite give additional summaries of wavebands \code{spread}, \code{midpoint}, \code{color}, \code{labels}.


\subsection{Operators and functions}

Several functions described in chapters \ref{chap:uw:irrad}, \ref{chap:wt:irrad}, and \ref{chap:plots} use \code{waveband} objects as arguments. Those functions provide selective summaries of spectra.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{e_irrad}\hlstd{(sun.data,} \hlkwd{UVB}\hlstd{())} \hlopt{/} \hlkwd{e_irrad}\hlstd{(sun.data,} \hlkwd{VIS}\hlstd{())}
\end{alltt}
\begin{verbatim}
##    UVB.ISO 
## 0.00253527 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

Multiplying a source spectrum by an un-weighted waveband, is equivalent to trimming with \code{fill} set to \code{NA}.
 
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{sun.spct} \hlopt{*} \hlkwd{UVA}\hlstd{()}
\end{alltt}
\begin{verbatim}
##      w.length s.e.irrad
##   1:      293         0
##   2:      294         0
##   3:      295         0
##   4:      296         0
##   5:      297         0
##  ---                   
## 504:      796         0
## 505:      797         0
## 506:      798         0
## 507:      799         0
## 508:      800         0
\end{verbatim}
\end{kframe}
\end{knitrout}

Multiplying a source spectrum by a weighted waveband convolutes the spectrum with weights, yielding effective spectral irradiance.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{sun.spct} \hlopt{*} \hlkwd{CIE}\hlstd{()}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad
##   1:      293 2.609665e-06
##   2:      294 6.142401e-06
##   3:      295 2.176175e-05
##   4:      296 6.780119e-05
##   5:      297 1.533491e-04
##  ---                      
## 504:      796 0.000000e+00
## 505:      797 0.000000e+00
## 506:      798 0.000000e+00
## 507:      799 0.000000e+00
## 508:      800 0.000000e+00
\end{verbatim}
\end{kframe}
\end{knitrout}

\section{Internal-use functions}\label{sec:base:internal}

The generic function \code{check} can be used on any type of \code{.spct} object, and depending on its types checks that the required components are present. If they are missing they are added. If it is possible to calculate the missing values from other optional components, they are calculated, otherwise they are filled with \code{NA}. It is used internally during the creation of spectral objects.

The function \code{check\_spectrum} may need to be called by the user if he/she disables automatic sanity checking to increase calculation speed. The family of functions for calculating multipliers are used internally by the package.

The function \code{insert\_hinges} is used internally to insert individual interpolated values to the spectra when needed to reduce errors in calculations.

The function \code{integrate\_irradiance} is used internally for integrating spectra, and accepts spectral data measured at arbitrary wavelengths. Raw data from array spectrometers is not available with a constant wavelength step. It is always best to do any interpolation as late as possible, or never. This function makes it possible to work with spectral data on the original pixel wavelengths.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiologyFilters))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiologyLEDs))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiologyWavebands))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiology))}
\end{alltt}
\end{kframe}
\end{knitrout}






\chapter{Unweighted irradiance}\label{chap:uw:irrad}

\begin{abstract}
  In this chapter we explain how to calculate unweighted energy and photon irradiances from spectral irradiance.
\end{abstract}

\section{Packages used in this chapter}

For executing the examples listed in this chapter you need first to load the following packages from the library:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{library}\hlstd{(photobiology)}
\hlkwd{library}\hlstd{(photobiologyWavebands)}
\end{alltt}
\end{kframe}
\end{knitrout}

%%%%
\section{Introduction}\label{sec:uw:intro}

Functions \code{e\_irrad} and \code{q\_irrad} return energy irradiance and photon (or quantum) irradiance, and both take as argument a \code{source.spct} object containing either spectral (energy) irradiance or spectral photon irradiance data. An additional parameter accepting a \code{waveband} object, or a list of \code{waveband} objects, can be used to set the range(s) of wavelengths and spectral weighting function(s) to use for integration(s). Two additional functions, \code{energy\_irradiance} and \code{photon\_irradiance}, are defined for equivalent calculations on spectral irradiance data stored as numeric vectors.

%%%%
\section{Task: (energy) irradiance from spectral irradiance}\label{sec:uw:eirrad}

The task to be completed is to calculate the (energy) irradiance ($\irr$) in \watt from spectral (energy) irradiance ($\sirr$) in \wattnm and the corresponding wavelengths ($\lambda$) in nm.

\begin{equation}
\irr[\lambda_1 < \lambda < \lambda_2] = \int_{\lambda_1}^{\lambda_2} \sirr\ \mathrm{d}\ \lambda
\label{eq:energy:irrad}
\end{equation}

Let's assume that we want to calculate photosynthetically active radiation (PAR) energy irradiance, for which the most accepted limits are $\lambda_1 = 400 \mathrm{nm}$ and
$\lambda_1 = 700 \mathrm{nm}$. In this example we will use example data for sunlight to calculate $\irr[400\,\mathrm{nm} < \lambda < 700\,\mathrm{nm}]$. The function used for this task when working with spectral objects is \code{e\_irrad} returning energy irradiance. The "names" of the returned valued is set according to the waveband used, and \code{sun.spct} is a \code{source.spct} object.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{e_irrad}\hlstd{(sun.spct,} \hlkwd{waveband}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{400}\hlstd{,}\hlnum{700}\hlstd{)))}
\end{alltt}
\begin{verbatim}
## range.400.700 
##      196.7004 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

or using the \code{PAR} waveband constructor, defined in package \PBWB as a convenience function,

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{e_irrad}\hlstd{(sun.spct,} \hlkwd{PAR}\hlstd{())}
\end{alltt}
\begin{verbatim}
##      PAR 
## 196.7004 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

or if no waveband is supplied as argument, then irradiance is computed for the whole range of wavelengths in the spectral data, and the `name' attribute is generated accordingly.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{e_irrad}\hlstd{(sun.spct)}
\end{alltt}
\begin{verbatim}
## range.293.800 
##      269.1249 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

If a waveband extends outside of the wavelength range of the spectral data, spectral irradiance for unavailable wavelengths is assumed to be zero:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{e_irrad}\hlstd{(sun.spct,} \hlkwd{waveband}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{100}\hlstd{,}\hlnum{400}\hlstd{)))}
\end{alltt}
\begin{verbatim}
## range.100.400 
##      28.32466 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\begin{alltt}
\hlkwd{e_irrad}\hlstd{(sun.spct,} \hlkwd{waveband}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{100}\hlstd{,}\hlnum{250}\hlstd{)))}
\end{alltt}
\begin{verbatim}
## range.100.250 
##             0 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

Both \code{e\_irrad} and \code{q\_irrad} accept, in addition to a waveband as second argument, a list of wavebands. In this case, the returned value is a numeric vector of the same length as the list.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{e_irrad}\hlstd{(sun.spct,} \hlkwd{list}\hlstd{(}\hlkwd{UVB}\hlstd{(),} \hlkwd{UVA}\hlstd{()))}
\end{alltt}
\begin{verbatim}
##    UVB.ISO    UVA.ISO 
##  0.5881141 27.7365487 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

\begin{small}

Storing emission spectral data in \code{source.spct} objects is recommended, as it allows better protection against mistakes, and allows automatic detection of input data base of expression and units. However, it may be sometimes more convenient or efficient to keep spectral data in individual numeric vectors, or data frames. In such cases function \code{energy\_irradiance}, which accepts the spectral data as vectors can be used at the cost of less concise code and weaker error tests. In this case, the user must indicate whether spectral data is on energy or photon based units through parameter \code{unit.in}, which defaults to \code{"energy"}.

For example when using function \code{PAR()}, the code above becomes:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{energy_irradiance}\hlstd{(w.length, s.e.irrad,} \hlkwd{PAR}\hlstd{()))}
\end{alltt}
\begin{verbatim}
##      PAR 
## 196.7004
\end{verbatim}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{energy_irradiance}\hlstd{(w.length, s.e.irrad,} \hlkwd{PAR}\hlstd{(),} \hlkwc{unit.in}\hlstd{=}\hlstr{"energy"}\hlstd{))}
\end{alltt}
\begin{verbatim}
##      PAR 
## 196.7004
\end{verbatim}
\end{kframe}
\end{knitrout}

where \code{sun.data} is a data frame. However, the data can also be stored in separate numeric vectors of equal length.


The \code{sun.data} data frame also contains spectral photon irradiance values:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{names}\hlstd{(sun.data)}
\end{alltt}
\begin{verbatim}
## [1] "w.length"  "s.e.irrad" "s.q.irrad"
\end{verbatim}
\end{kframe}
\end{knitrout}
which allows us to use:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{energy_irradiance}\hlstd{(w.length, s.q.irrad,} \hlkwd{PAR}\hlstd{(),} \hlkwc{unit.in}\hlstd{=}\hlstr{"photon"}\hlstd{))}
\end{alltt}
\begin{verbatim}
##      PAR 
## 196.7004
\end{verbatim}
\end{kframe}
\end{knitrout}

The other examples above can be re-written with similar syntax.

\end{small}

%%%%
\section{Task: photon irradiance from spectral irradiance}\label{sec:uw:qirrad}

The task to be completed is to calculate the photon irradiance ($\pfd$) in \mol from spectral (energy) irradiance ($\sirr$) in \wattnm and the corresponding wavelengths ($\lambda$) in nm.

Combining equations \ref{eq:energy:irrad} and \ref{eq:energy:mol:photons} we obtain:

\begin{equation}
\pfd[\lambda_1 < \lambda < \lambda_2] = \int_{\lambda_1}^{\lambda_2} \sirr\ \frac{h' \cdot c}{\lambda} \mathrm{d}\ \lambda
\end{equation}

Let's assume that we want to calculate photosynthetically active radiation (PAR) photon irradiance (frequently called PPFD or photosynthetic photon flux density), for which the most accepted limits are $\lambda_1 = 400 \mathrm{nm}$ and
$\lambda_1 = 700 \mathrm{nm}$. In this example we will use example data for sunlight to calculate $\irr[400\,\mathrm{nm} < \lambda < 700\,\mathrm{nm}]$. The function used for this task when working with spectral objects is \code{q\_irrad}, returning photon irradiance in \mol. The "names" of the returned valued is set according to the waveband used, and \code{sun.spct} is a \code{source.spct} object.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{q_irrad}\hlstd{(sun.spct,} \hlkwd{waveband}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{400}\hlstd{,}\hlnum{700}\hlstd{)))}
\end{alltt}
\begin{verbatim}
## range.400.700 
##  0.0008937598 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

to obtain the photon irradiance expressed in \umol we multiply the returned value by $1 \times 10^6$:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{q_irrad}\hlstd{(sun.spct,} \hlkwd{waveband}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{400}\hlstd{,}\hlnum{700}\hlstd{)))} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
## range.400.700 
##      893.7598 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

or using the \code{PAR} waveband constructor, defined in package \PBWB as a convenience function,

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{q_irrad}\hlstd{(sun.spct,} \hlkwd{PAR}\hlstd{())} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
##      PAR 
## 893.7598 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

Examples given in section \ref{sec:uw:eirrad} can all be converted by replacing \code{e\_irrad} function calls with \code{q\_irrad} function calls.

\begin{small}

Storing emission spectral data in \code{source.spct} objects is recommended (see section \ref{sec:uw:eirrad}). However, it may be sometimes more convenient or efficient to keep spectral data in individual numeric vectors, or data frames. In such cases function \code{photon\_irradiance}, which accepts the spectral data as vectors can be used at the cost of less concise code and weaker error tests. In this case, the user must indicate whether spectral data is on energy or photon based units through parameter \code{unit.in}, which defaults to \code{"energy"}.

For example when using function \code{PAR()}, the code above becomes:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{photon_irradiance}\hlstd{(w.length, s.e.irrad,} \hlkwd{PAR}\hlstd{()),} \hlkwc{unit.in}\hlstd{=}\hlstr{"energy"}\hlstd{)}  \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
##      PAR 
## 893.7598
\end{verbatim}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{photon_irradiance}\hlstd{(w.length, s.e.irrad,} \hlkwd{PAR}\hlstd{()))}  \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
##      PAR 
## 893.7598
\end{verbatim}
\end{kframe}
\end{knitrout}

where \code{sun.data} is a data frame. However, the data can also be stored in separate numeric vectors of equal length.

\end{small}

\section{Task: irradiances for more than one waveband}\label{sec:uw:mult:wb}

As discussed above, it is possible to calculate simultaneously the irradiances for several wavebands with a single function call by supplying a \code{list} of \code{wavebands} as argument:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{q_irrad}\hlstd{(sun.spct,} \hlkwd{list}\hlstd{(}\hlkwd{Red}\hlstd{(),} \hlkwd{Green}\hlstd{(),} \hlkwd{Blue}\hlstd{()))} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
##   Red.ISO Green.ISO  Blue.ISO 
##  452.1700  220.1562  148.9735 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\begin{alltt}
\hlstd{Q.RGB} \hlkwb{<-} \hlkwd{q_irrad}\hlstd{(sun.spct,} \hlkwd{list}\hlstd{(}\hlkwd{Red}\hlstd{(),} \hlkwd{Green}\hlstd{(),} \hlkwd{Blue}\hlstd{()))} \hlopt{*} \hlnum{1e6}
\hlkwd{signif}\hlstd{(Q.RGB,} \hlnum{3}\hlstd{)}
\end{alltt}
\begin{verbatim}
##   Red.ISO Green.ISO  Blue.ISO 
##       452       220       149 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\begin{alltt}
\hlstd{Q.RGB[}\hlnum{1}\hlstd{]}
\end{alltt}
\begin{verbatim}
## Red.ISO 
##  452.17
\end{verbatim}
\begin{alltt}
\hlstd{Q.RGB[}\hlstr{"Green.ISO"}\hlstd{]}
\end{alltt}
\begin{verbatim}
## Green.ISO 
##  220.1562
\end{verbatim}
\end{kframe}
\end{knitrout}
as the value returned is in \mol we multiply it by $1 \times 10^6$ to obtain \umol.

A named list can be used to override the names used for the output:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{q_irrad}\hlstd{(sun.spct,} \hlkwd{list}\hlstd{(}\hlkwc{R}\hlstd{=}\hlkwd{Red}\hlstd{(),} \hlkwc{G}\hlstd{=}\hlkwd{Green}\hlstd{(),} \hlkwc{B}\hlstd{=}\hlkwd{Blue}\hlstd{()))} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
##        R        G        B 
## 452.1700 220.1562 148.9735 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

Even when using a single waveband:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{q_irrad}\hlstd{(sun.spct,} \hlkwd{list}\hlstd{(}\hlstr{'ultraviolet-B'}\hlstd{=}\hlkwd{UVB}\hlstd{()))} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
## ultraviolet-B 
##      1.526862 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

\begin{small}
The examples above, can be easily rewritten using functions \code{e\_irrad}, \code{energy\_irradiance} or \code{photon\_irradiance}.

For example, the second example above becomes:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{e_irrad}\hlstd{(sun.spct,} \hlkwd{list}\hlstd{(}\hlkwc{R}\hlstd{=}\hlkwd{Red}\hlstd{(),} \hlkwc{G}\hlstd{=}\hlkwd{Green}\hlstd{(),} \hlkwc{B}\hlstd{=}\hlkwd{Blue}\hlstd{()))}
\end{alltt}
\begin{verbatim}
##        R        G        B 
## 79.61176 49.30478 37.57760 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

or

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{energy_irradiance}\hlstd{(w.length, s.e.irrad,}
                       \hlkwd{list}\hlstd{(}\hlkwc{R}\hlstd{=}\hlkwd{Red}\hlstd{(),} \hlkwc{G}\hlstd{=}\hlkwd{Green}\hlstd{(),} \hlkwc{B}\hlstd{=}\hlkwd{Blue}\hlstd{())))}
\end{alltt}
\begin{verbatim}
##        R        G        B 
## 79.61176 49.30478 37.57760
\end{verbatim}
\end{kframe}
\end{knitrout}

\end{small}

%%%%
\section{Task: use simple predefined wavebands}\label{sec:uwavebands:use}

Please, consult the packages' documentation for a list of predefined functions for creating wavebands also called \code{waveband} \emph{constructors}. Here we will present just a few examples of their use. We usually associate wavebands with colours, however, in many cases there are different definitions in use. For this reason, the functions provided accept an argument that can be used to select the definition to use. In general, the default, is to use the ISO standard whenever it is applicable. The case of the various definitions in use for the \UVB waveband are described on page \pageref{pag:UVB:stds}

We can use a predefined function to create a new \code{waveband} object, which as any other R object can be assigned to a variable:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{uvb} \hlkwb{<-} \hlkwd{UVB}\hlstd{()}
\hlstd{uvb}
\end{alltt}
\begin{verbatim}
## UVB.ISO 
## low (nm) 280 
## high (nm) 315 
## weighted none
\end{verbatim}
\end{kframe}
\end{knitrout}

As seen above, there is a specialized \code{print} method for \code{wavebands}. \code{waveband} methods returning wavelength values in nm are \code{min}, \code{max}, \code{range}, \code{midpoint}, and \code{spread}. Method \code{labels} returns the name and label stored in the waveband, and method \code{color} returns a color definition calculated from the range of wavelengths.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{red} \hlkwb{<-} \hlkwd{Red}\hlstd{()}
\hlstd{red}
\end{alltt}
\begin{verbatim}
## Red.ISO 
## low (nm) 610 
## high (nm) 760 
## weighted none
\end{verbatim}
\begin{alltt}
\hlkwd{min}\hlstd{(red)}
\end{alltt}
\begin{verbatim}
## [1] 610
\end{verbatim}
\begin{alltt}
\hlkwd{max}\hlstd{(red)}
\end{alltt}
\begin{verbatim}
## [1] 760
\end{verbatim}
\begin{alltt}
\hlkwd{range}\hlstd{(red)}
\end{alltt}
\begin{verbatim}
## [1] 610 760
\end{verbatim}
\begin{alltt}
\hlkwd{midpoint}\hlstd{(red)}
\end{alltt}
\begin{verbatim}
## [1] 685
\end{verbatim}
\begin{alltt}
\hlkwd{spread}\hlstd{(red)}
\end{alltt}
\begin{verbatim}
## [1] 150
\end{verbatim}
\begin{alltt}
\hlkwd{labels}\hlstd{(red)}
\end{alltt}
\begin{verbatim}
## $label
## [1] "Red"
## 
## $name
## [1] "Red.ISO"
\end{verbatim}
\begin{alltt}
\hlkwd{color}\hlstd{(red)}
\end{alltt}
\begin{verbatim}
## $CMF
##   Red.CMF 
## "#900000" 
## 
## $CC
##    Red.CC 
## "#FF0000"
\end{verbatim}
\end{kframe}
\end{knitrout}

The argument \code{standard} can be used to choose a given alternative definition\footnote{When available, the definition in the ISO standard is the default.}:\label{pag:UVB:stds}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{UVB}\hlstd{()}
\end{alltt}
\begin{verbatim}
## UVB.ISO 
## low (nm) 280 
## high (nm) 315 
## weighted none
\end{verbatim}
\begin{alltt}
\hlkwd{UVB}\hlstd{(}\hlstr{"ISO"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## UVB.ISO 
## low (nm) 280 
## high (nm) 315 
## weighted none
\end{verbatim}
\begin{alltt}
\hlkwd{UVB}\hlstd{(}\hlstr{"CIE"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## UVB.CIE 
## low (nm) 280 
## high (nm) 315 
## weighted none
\end{verbatim}
\begin{alltt}
\hlkwd{UVB}\hlstd{(}\hlstr{"medical"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## UVB.medical 
## low (nm) 290 
## high (nm) 320 
## weighted none
\end{verbatim}
\begin{alltt}
\hlkwd{UVB}\hlstd{(}\hlstr{"none"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## UVB.none 
## low (nm) 280 
## high (nm) 320 
## weighted none
\end{verbatim}
\end{kframe}
\end{knitrout}

Here we demonstrate the importance of complying with standards, and how much photon irradiance can depend on the definition used in the calculation.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{q_irrad}\hlstd{(sun.spct,} \hlkwd{UVB}\hlstd{(}\hlstr{"ISO"}\hlstd{))} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
##  UVB.ISO 
## 1.526862 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\begin{alltt}
\hlkwd{q_irrad}\hlstd{(sun.spct,} \hlkwd{UVB}\hlstd{(}\hlstr{"none"}\hlstd{))} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
## UVB.none 
##  3.28209 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\begin{alltt}
\hlkwd{q_irrad}\hlstd{(sun.spct,} \hlkwd{UVB}\hlstd{(}\hlstr{"ISO"}\hlstd{))} \hlopt{/} \hlkwd{q_irrad}\hlstd{(sun.spct,} \hlkwd{UVB}\hlstd{(}\hlstr{"none"}\hlstd{))}
\end{alltt}
\begin{verbatim}
##   UVB.ISO 
## 0.4652103 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

%%%%
\section{Task: define simple wavebands}\label{sec:uwavebands}

Here we briefly introduce \code{waveband} and \code{new\_waveband}, and only in chapter \ref{chap:wtirrad} we describe their use in full detail, including the use of spectral weighting functions (SWFs). The examples in the present section only describe \code{waveband}s that define a wavelength range.

A \code{waveband} can be created based on any R object for which function \code{range} is defined, and returns numbers interpretable as wavelengths expressed in nanometres:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{waveband}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{400}\hlstd{,}\hlnum{700}\hlstd{))}
\end{alltt}
\begin{verbatim}
## range.400.700 
## low (nm) 400 
## high (nm) 700 
## weighted none
\end{verbatim}
\begin{alltt}
\hlkwd{waveband}\hlstd{(}\hlnum{400}\hlopt{:}\hlnum{700}\hlstd{)}
\end{alltt}
\begin{verbatim}
## range.400.700 
## low (nm) 400 
## high (nm) 700 
## weighted none
\end{verbatim}
\begin{alltt}
\hlkwd{waveband}\hlstd{(sun.spct)}
\end{alltt}
\begin{verbatim}
## Total 
## low (nm) 293 
## high (nm) 800 
## weighted none
\end{verbatim}
\begin{alltt}
\hlstd{wb_total} \hlkwb{<-} \hlkwd{waveband}\hlstd{(sun.spct,} \hlkwc{wb.name}\hlstd{=}\hlstr{"total"}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{q_irrad}\hlstd{(sun.spct, wb_total)} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
##    total 
## 1253.975 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

A \code{waveband} can also be created based on extreme wavelengths expressed in nm.
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{wb1} \hlkwb{<-} \hlkwd{new_waveband}\hlstd{(}\hlnum{500}\hlstd{,}\hlnum{600}\hlstd{)}
\hlstd{wb1}
\end{alltt}
\begin{verbatim}
## range.500.600 
## low (nm) 500 
## high (nm) 600 
## weighted none
\end{verbatim}
\begin{alltt}
\hlkwd{q_irrad}\hlstd{(sun.spct, wb1)} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
## range.500.600 
##      314.0618 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\begin{alltt}
\hlstd{wb2} \hlkwb{<-} \hlkwd{new_waveband}\hlstd{(}\hlnum{500}\hlstd{,}\hlnum{600}\hlstd{,} \hlkwc{wb.name}\hlstd{=}\hlstr{"my.colour"}\hlstd{)}
\hlstd{wb2}
\end{alltt}
\begin{verbatim}
## my.colour 
## low (nm) 500 
## high (nm) 600 
## weighted none
\end{verbatim}
\begin{alltt}
\hlkwd{q_irrad}\hlstd{(sun.spct, wb2)} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
## my.colour 
##  314.0618 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

%%%%
\section{Task: define lists of simple wavebands}\label{sec:uwaveband:lists}

Lists of wavebands can be created by grouping \code{waveband} objects using the R-defined constructor \code{list},

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{UV.list} \hlkwb{<-} \hlkwd{list}\hlstd{(}\hlkwd{UVC}\hlstd{(),} \hlkwd{UVB}\hlstd{(),} \hlkwd{UVA}\hlstd{())}
\hlstd{UV.list}
\end{alltt}
\begin{verbatim}
## [[1]]
## UVC.ISO 
## low (nm) 100 
## high (nm) 280 
## weighted none 
## 
## [[2]]
## UVB.ISO 
## low (nm) 280 
## high (nm) 315 
## weighted none 
## 
## [[3]]
## UVA.ISO 
## low (nm) 315 
## high (nm) 400 
## weighted none
\end{verbatim}
\end{kframe}
\end{knitrout}
in which case wavebands can be non-contiguous and/or overlapping.

In addition function \code{split\_bands} can be used to create a list of contiguous wavebands by supplying a numeric vector of wavelength boundaries in nanometres,

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{split_bands}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{400}\hlstd{,}\hlnum{500}\hlstd{,}\hlnum{600}\hlstd{))}
\end{alltt}
\begin{verbatim}
## $wb1
## range.400.500 
## low (nm) 400 
## high (nm) 500 
## weighted none 
## 
## $wb2
## range.500.600 
## low (nm) 500 
## high (nm) 600 
## weighted none
\end{verbatim}
\end{kframe}
\end{knitrout}

It is also possible to also provide the limits of the region to be covered by the list of wavebands and the number of (equally spaced) wavebands desired:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{split_bands}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{400}\hlstd{,}\hlnum{600}\hlstd{),} \hlkwc{length.out}\hlstd{=}\hlnum{2}\hlstd{)}
\end{alltt}
\begin{verbatim}
## $wb1
## range.400.500 
## low (nm) 400 
## high (nm) 500 
## weighted none 
## 
## $wb2
## range.500.600 
## low (nm) 500 
## high (nm) 600 
## weighted none
\end{verbatim}
\end{kframe}
\end{knitrout}

in all cases code{range} is used to find the list boundaries, so we can also split the region defined by an exisating \code{waveband} object into smaller wavebands,
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{split_bands}\hlstd{(}\hlkwd{PAR}\hlstd{(),} \hlkwc{length.out}\hlstd{=}\hlnum{3}\hlstd{)}
\end{alltt}
\begin{verbatim}
## $wb1
## range.400.500 
## low (nm) 400 
## high (nm) 500 
## weighted none 
## 
## $wb2
## range.500.600 
## low (nm) 500 
## high (nm) 600 
## weighted none 
## 
## $wb3
## range.600.700 
## low (nm) 600 
## high (nm) 700 
## weighted none
\end{verbatim}
\end{kframe}
\end{knitrout}

or split a whole spectrum\footnote(This is not restricted to \code{source.spct} objects as all other classes of \code{\_\_\_.spct} objects also have \code{range} methods defined.) into equally sized regions,

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{split_bands}\hlstd{(sun.spct,} \hlkwc{length.out}\hlstd{=}\hlnum{3}\hlstd{)}
\end{alltt}
\begin{verbatim}
## $wb1
## range.293.462 
## low (nm) 293 
## high (nm) 462 
## weighted none 
## 
## $wb2
## range.462.631 
## low (nm) 462 
## high (nm) 631 
## weighted none 
## 
## $wb3
## range.631.800 
## low (nm) 631 
## high (nm) 800 
## weighted none
\end{verbatim}
\end{kframe}
\end{knitrout}

Package \PBWB also predefines some useful contrustors of lists of wavebands, currently \code{VIS\_bands}, \code{UV\_bands} and \code{Plant\_bands}.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{UV_bands}\hlstd{()}
\end{alltt}
\begin{verbatim}
## [[1]]
## UVC.ISO 
## low (nm) 100 
## high (nm) 280 
## weighted none 
## 
## [[2]]
## UVB.ISO 
## low (nm) 280 
## high (nm) 315 
## weighted none 
## 
## [[3]]
## UVA.ISO 
## low (nm) 315 
## high (nm) 400 
## weighted none
\end{verbatim}
\end{kframe}
\end{knitrout}

%%%%
\section{Task: photon ratios}\label{sec:photon:ratio}

In photobiology sometimes we are interested in calculation the photon ratio between two wavebands. It makes more sense to calculate such ratios if both numerator and denominator wavebands have the same `width' or if the numerator waveband is fully nested in the denominator waveband. However, frequently used ratios like the \UVB to \PAR photon ratio do not comply with this. For this reason, our functions do not enforce any such restrictions.

For example a ratio frequently used in plant photobiology is the red to far-red photon ratio (R:FR photon ratio or $\zeta$). If we follow the wavelength ranges in the definition given by \cite{Morgan1981a}, using photon irradiance\footnote{In the original text photon fluence rate is used but it not clear whether photon irradiance was meant instead.}:

\begin{equation}
\zeta = \frac{\pfd[655 \mathrm{nm} < \lambda < 665  \mathrm{nm}]}{\pfd[725 \mathrm{nm} < \lambda < 735 \mathrm{nm}]}
\end{equation}

To calculate this for our example sunlight spectrum we can use the following code:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{q_ratio}\hlstd{(sun.spct,} \hlkwd{Red}\hlstd{(}\hlstr{"Smith"}\hlstd{),} \hlkwd{Far_red}\hlstd{(}\hlstr{"Smith"}\hlstd{))}
\end{alltt}
\begin{verbatim}
## Red.Smith:FarRed.Smith(q:q) 
##                    1.251099
\end{verbatim}
\end{kframe}
\end{knitrout}

Function \code{q\_ratio} also accepts lists of wavebands, for both denominator and numerator arguments, and recycling takes place when needed.
Calculation of the contribution of different colors to visible light, using ISO-standard definitions.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{q_ratio}\hlstd{(sun.spct,} \hlkwd{UVB}\hlstd{(),} \hlkwd{list}\hlstd{(}\hlkwd{UV}\hlstd{(),} \hlkwd{VIS}\hlstd{()))}
\end{alltt}
\begin{verbatim}
##  UVB.ISO:UV.ISO(q:q) UVB.ISO:VIS.ISO(q:q) 
##          0.017862550          0.001404725
\end{verbatim}
\end{kframe}
\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{q_ratio}\hlstd{(sun.spct,}
         \hlkwd{list}\hlstd{(}\hlkwd{Red}\hlstd{(),} \hlkwd{Green}\hlstd{(),} \hlkwd{Blue}\hlstd{()),} \hlkwd{VIS}\hlstd{())}
\end{alltt}
\begin{verbatim}
##   Red.ISO:VIS.ISO(q:q) Green.ISO:VIS.ISO(q:q) 
##              0.4159998              0.2025454 
##  Blue.ISO:VIS.ISO(q:q) 
##              0.1370567
\end{verbatim}
\end{kframe}
\end{knitrout}

or using a predefined list of wavebands:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{q_ratio}\hlstd{(sun.spct,} \hlkwd{VIS_bands}\hlstd{(),} \hlkwd{VIS}\hlstd{())}
\end{alltt}
\begin{verbatim}
## Purple.ISO:VIS.ISO(q:q)   Blue.ISO:VIS.ISO(q:q) 
##              0.15004110              0.13705675 
##  Green.ISO:VIS.ISO(q:q) Yellow.ISO:VIS.ISO(q:q) 
##              0.20254538              0.06110784 
## Orange.ISO:VIS.ISO(q:q)    Red.ISO:VIS.ISO(q:q) 
##              0.05533039              0.41599981
\end{verbatim}
\end{kframe}
\end{knitrout}

\begin{small}
Using spectral data stored in numeric vectors:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{photon_ratio}\hlstd{(w.length, s.e.irrad,}  \hlkwd{Red}\hlstd{(}\hlstr{"Smith"}\hlstd{),} \hlkwd{Far_red}\hlstd{(}\hlstr{"Smith"}\hlstd{)))}
\end{alltt}
\begin{verbatim}
## [1] 1.251099
\end{verbatim}
\end{kframe}
\end{knitrout}

or using the predefined convenience function \code{R\_FR\_ratio}:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{R_FR_ratio}\hlstd{(w.length, s.e.irrad))}
\end{alltt}
\begin{verbatim}
## [1] 1.251099
\end{verbatim}
\end{kframe}
\end{knitrout}

\end{small}

%%%%
\section{Task: energy ratios}\label{sec:energy:ratio}

An energy ratio, equivalent to $\zeta$ can be calculated as follows:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{e_ratio}\hlstd{(sun.spct,} \hlkwd{Red}\hlstd{(}\hlstr{"Smith"}\hlstd{),} \hlkwd{Far_red}\hlstd{(}\hlstr{"Smith"}\hlstd{))}
\end{alltt}
\begin{verbatim}
## Red.Smith:FarRed.Smith(e:e) 
##                    1.384353
\end{verbatim}
\end{kframe}
\end{knitrout}

other examples in section \ref{sec:photon:ratio} above, can be easily edited to use \code{e\_ratio} instead of \code{q\_ratio}.


\begin{small}

Using spectral data stored in vectors:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{energy_ratio}\hlstd{(w.length, s.e.irrad,}
                  \hlkwd{Red}\hlstd{(}\hlstr{"Smith"}\hlstd{),} \hlkwd{Far_red}\hlstd{(}\hlstr{"Smith"}\hlstd{)))}
\end{alltt}
\begin{verbatim}
## [1] 1.384353
\end{verbatim}
\end{kframe}
\end{knitrout}

For this infrequently used ratio, no pre-defined function is provided.
\end{small}

%%%%
\section{Task: calculate average number of photons per unit energy}\label{sec:photons:energy}

When comparing photo-chemical and photo-biological responses under different light sources it is of interest to calculate the photons per energy in \moljoule. In this case only one waveband definition is used to calculate the quotient:

\begin{equation}
\bar{q'} = \frac{\pfd[\lambda_1 < \lambda < \lambda_2]}{\irr[\lambda_1 < \lambda < \lambda_2]}
\end{equation}

From this equation it follows that the value of the ratio will depend on the shape of the emission spectrum of the radiation source.
For example, for PAR the R code is:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{qe_ratio}\hlstd{(sun.spct,} \hlkwd{PAR}\hlstd{())}
\end{alltt}
\begin{verbatim}
##     q:e(PAR) 
## 4.543762e-06
\end{verbatim}
\end{kframe}
\end{knitrout}

for obtaining the same quotient in \umoljoule we just need to multiply by $1 \times 10^6$,

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{qe_ratio}\hlstd{(sun.spct,} \hlkwd{PAR}\hlstd{())} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
## q:e(PAR) 
## 4.543762
\end{verbatim}
\end{kframe}
\end{knitrout}

The seldom needed inverse ratio in \joulemol can be calculated with function \code{eq\_ratio}.

Both functions accept lists of wavebands, so several ratios can be calculated with a single function call:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{qe_ratio}\hlstd{(sun.spct,} \hlkwd{VIS_bands}\hlstd{())}
\end{alltt}
\begin{verbatim}
## q:e(Purple.ISO)   q:e(Blue.ISO)  q:e(Green.ISO) 
##    3.429575e-06    3.964423e-06    4.465210e-06 
## q:e(Yellow.ISO) q:e(Orange.ISO)    q:e(Red.ISO) 
##    4.847365e-06    5.016828e-06    5.679688e-06
\end{verbatim}
\end{kframe}
\end{knitrout}

\begin{small}
The same ratios can be calculated for data stored in numeric vectors using function \code{photons\_energy\_ratio}:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{photons_energy_ratio}\hlstd{(w.length, s.e.irrad,} \hlkwd{PAR}\hlstd{()))}
\end{alltt}
\begin{verbatim}
## [1] 4.543762e-06
\end{verbatim}
\end{kframe}
\end{knitrout}

For obtaining the same quotient in \umoljoule from spectral data in \wattnm we just need to multiply by $1 \times 10^6$:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{photons_energy_ratio}\hlstd{(w.length, s.e.irrad,} \hlkwd{PAR}\hlstd{()))} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
## [1] 4.543762
\end{verbatim}
\end{kframe}
\end{knitrout}

\end{small}

%%%%
\section[Task: split energy irradiance into regions]{Task: calculate the contribution of different regions of a spectrum to energy irradiance}\label{sec:split:energy}

\sloppy
It can be of interest to split the total (energy) irradiance into adjacent regions delimited by arbitrary wavelengths. We can use the function \code{split\_energy\_irradiance} to obtain to energy of each of the regions delimited by the values in nm supplied in a numeric vector:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{split_energy_irradiance}\hlstd{(w.length, s.e.irrad,}
                             \hlkwd{c}\hlstd{(}\hlnum{400}\hlstd{,} \hlnum{500}\hlstd{,} \hlnum{600}\hlstd{,} \hlnum{700}\hlstd{)))}
\end{alltt}
\begin{verbatim}
## range.400.500 range.500.600 range.600.700 
##      69.63243      68.53291      58.53508
\end{verbatim}
\end{kframe}
\end{knitrout}

Here we demonstrate that the sum of the four `split' irradiances add to the total for the range of wavelengths covered:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{sum}\hlstd{(}\hlkwd{split_energy_irradiance}\hlstd{(w.length, s.e.irrad,}
                                 \hlkwd{c}\hlstd{(}\hlnum{400}\hlstd{,} \hlnum{500}\hlstd{,} \hlnum{600}\hlstd{,} \hlnum{700}\hlstd{))))}
\end{alltt}
\begin{verbatim}
## [1] 196.7004
\end{verbatim}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{energy_irradiance}\hlstd{(w.length, s.e.irrad,} \hlkwd{PAR}\hlstd{()))}
\end{alltt}
\begin{verbatim}
##      PAR 
## 196.7004
\end{verbatim}
\end{kframe}
\end{knitrout}

It also possible to obtain the `split' as a vector of fractions adding up to one,

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{split_energy_irradiance}\hlstd{(w.length, s.e.irrad,}
                             \hlkwd{c}\hlstd{(}\hlnum{400}\hlstd{,} \hlnum{500}\hlstd{,} \hlnum{600}\hlstd{,} \hlnum{700}\hlstd{),}
                             \hlkwc{scale}\hlstd{=}\hlstr{"relative"}\hlstd{))}
\end{alltt}
\begin{verbatim}
## range.400.500 range.500.600 range.600.700 
##     0.3540024     0.3484126     0.2975849
\end{verbatim}
\end{kframe}
\end{knitrout}

or as percentages:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{split_energy_irradiance}\hlstd{(w.length, s.e.irrad,}
                             \hlkwd{c}\hlstd{(}\hlnum{400}\hlstd{,} \hlnum{500}\hlstd{,} \hlnum{600}\hlstd{,} \hlnum{700}\hlstd{),}
                             \hlkwc{scale}\hlstd{=}\hlstr{"percent"}\hlstd{))}
\end{alltt}
\begin{verbatim}
## range.400.500 range.500.600 range.600.700 
##      35.40024      34.84126      29.75849
\end{verbatim}
\end{kframe}
\end{knitrout}

If the `limits' cover only a region of the spectral data, relative and percent values will be calculated with that region as a reference.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{split_energy_irradiance}\hlstd{(w.length, s.e.irrad,}
                             \hlkwd{c}\hlstd{(}\hlnum{400}\hlstd{,}\hlnum{500}\hlstd{,}\hlnum{600}\hlstd{,}\hlnum{700}\hlstd{),}
                             \hlkwc{scale}\hlstd{=}\hlstr{"percent"}\hlstd{))}
\end{alltt}
\begin{verbatim}
## range.400.500 range.500.600 range.600.700 
##      35.40024      34.84126      29.75849
\end{verbatim}
\end{kframe}
\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{split_energy_irradiance}\hlstd{(w.length, s.e.irrad,}
                             \hlkwd{c}\hlstd{(}\hlnum{400}\hlstd{,}\hlnum{500}\hlstd{,}\hlnum{600}\hlstd{),}
                             \hlkwc{scale}\hlstd{=}\hlstr{"percent"}\hlstd{))}
\end{alltt}
\begin{verbatim}
## range.400.500 range.500.600 
##       50.3979       49.6021
\end{verbatim}
\end{kframe}
\end{knitrout}

A vector of two wavelengths is valid input, although not very useful for percentages:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{split_energy_irradiance}\hlstd{(w.length, s.e.irrad,}
                             \hlkwd{c}\hlstd{(}\hlnum{400}\hlstd{,} \hlnum{700}\hlstd{),}
                             \hlkwc{scale}\hlstd{=}\hlstr{"percent"}\hlstd{))}
\end{alltt}
\begin{verbatim}
## range.400.700 
##           100
\end{verbatim}
\end{kframe}
\end{knitrout}

In contrast, for \code{scale="absolute"}, the default, it can be used as a quick way of calculating an irradiance for a range of wavelengths without having to define a \code{waveband}:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{split_energy_irradiance}\hlstd{(w.length, s.e.irrad,}
                             \hlkwd{c}\hlstd{(}\hlnum{400}\hlstd{,} \hlnum{700}\hlstd{)))}
\end{alltt}
\begin{verbatim}
## range.400.700 
##      196.7004
\end{verbatim}
\end{kframe}
\end{knitrout}

%%%%
\section[Task: split photon irradiance into regions]{Task: calculate the contribution of different regions of a spectrum to photon irradiance}\label{sec:split:photons}

The function \code{split\_photon\_irradiance} takes the same arguments as the equivalent function for photon irradiance, consequently only one code example is provided here (see section \ref{sec:split:energy} for more details):

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{split_photon_irradiance}\hlstd{(w.length, s.e.irrad,}
                             \hlkwd{c}\hlstd{(}\hlnum{400}\hlstd{,} \hlnum{500}\hlstd{,} \hlnum{600}\hlstd{,} \hlnum{700}\hlstd{),}
                             \hlkwc{scale}\hlstd{=}\hlstr{"percent"}\hlstd{))}
\end{alltt}
\begin{verbatim}
## range.400.500 range.500.600 range.600.700 
##      29.40969      35.13940      35.45092
\end{verbatim}
\end{kframe}
\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiologyWavebands))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiology))}
\end{alltt}
\end{kframe}
\end{knitrout}




\chapter{Weighted and effective irradiance}\label{chap:wt:irrad}

\begin{abstract}
  In this chapter we explain how to calculate weighted energy and photon irradiances from spectral irradiance.
\end{abstract}

\section{Packages used in this chapter}

For executing the examples listed in this chapter you need first to load the following packages from the library:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{library}\hlstd{(photobiology)}
\hlkwd{library}\hlstd{(photobiologyWavebands)}
\end{alltt}
\end{kframe}
\end{knitrout}

%%%%
\section{Introduction}\label{sec:wt:intro}

Weighted irradiance is usually reported in weighted energy units, but it is possible to also use weighted photon based units. In practice the R code to use is exactly the same as for unweighted irradiances, as all the information needed is stored in the \code{waveband} object. An additional factor comes into play and it is the \emph{normalization wavelength}, which is accepted as an argument by the predefined waveband creation functions that use a biological spectral weighting function (BSWF). The focus of this chapter is on the differences between calculations for weighted irradiances compared to those for unweighted irradiances described in chapter \ref{chap:uw:irrad}. In particular it is important that you read sections \ref{sec:uw:e2e}, \ref{sec:uw:e2q}, \ref{sec:uw:q2e}, and \ref{sec:uw:mult:wb} before reading the present chapter.

%%%%
\section{Task: choosing the normalization wavelength}\label{sec:wt:intro}

Function \code{GEN.G()} is predefined in package \PBWB as a convenience function for Green's formulation of Caldwell's generalized plant action spectrum (GPAS) \cite{Green198x}:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{energy_irradiance}\hlstd{(w.length, s.e.irrad,} \hlkwd{GEN.G}\hlstd{()))}
\end{alltt}
\begin{verbatim}
## GEN.G.300 
## 0.1033597
\end{verbatim}
\end{kframe}
\end{knitrout}

The code above uses the default normalization wavelength of 300 nm. Any arbitrary wavelength (nm), within the range of the waveband can be provided as an argument.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{range}\hlstd{(}\hlkwd{GEN.G}\hlstd{())}
\end{alltt}
\begin{verbatim}
## [1] 250.0 313.3
\end{verbatim}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{energy_irradiance}\hlstd{(w.length, s.e.irrad,} \hlkwd{GEN.G}\hlstd{(}\hlnum{280}\hlstd{)))}
\end{alltt}
\begin{verbatim}
##  GEN.G.280 
## 0.02402434
\end{verbatim}
\end{kframe}
\end{knitrout}


%%%%
\section{Task: use weighted wavebands}\label{sec:wt:intro}

Please, consult the packages' documentation for a list of predefined functions for creating weighted wavebands. Here we will present just a few examples of their use. We usually think of weighted irradiances as being defined by the weighting function, however, in many cases different normalizations are in use, and the result of any calculation depends very strongly on the wavelength used for normalization. For this reason, the functions provided accept an argument that can be used to select the normalization wavelength. In general, the default, is to use the most frequently used normalization.

In a few cases different mathematical formulations are available for the same spectrum, and the differences among them can be quite large. In such cases separate functions are provided for each of them (e.g. \code{GEN.N} and \code{GEN.T} for Green's and Thimijan's formulations of Caldwell's GPAS).

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{GEN.G}\hlstd{()}
\end{alltt}
\begin{verbatim}
## GEN.G.300 
## low (nm) 250 
## high (nm) 313 
## weighted SWF 
## normalized at 300 nm
\end{verbatim}
\begin{alltt}
\hlkwd{GEN.G}\hlstd{(}\hlnum{300}\hlstd{)}
\end{alltt}
\begin{verbatim}
## GEN.G.300 
## low (nm) 250 
## high (nm) 313 
## weighted SWF 
## normalized at 300 nm
\end{verbatim}
\begin{alltt}
\hlkwd{GEN.G}\hlstd{(}\hlnum{280}\hlstd{)}
\end{alltt}
\begin{verbatim}
## GEN.G.280 
## low (nm) 250 
## high (nm) 313 
## weighted SWF 
## normalized at 280 nm
\end{verbatim}
\end{kframe}
\end{knitrout}

We can use one of the predefined functions to create a new \code{waveband} object, which as any other R object can be assigned to a variable:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{cie} \hlkwb{<-} \hlkwd{CIE}\hlstd{()}
\hlstd{cie}
\end{alltt}
\begin{verbatim}
## CIE98.298 
## low (nm) 250 
## high (nm) 400 
## weighted SWF 
## normalized at 298 nm
\end{verbatim}
\end{kframe}
\end{knitrout}

As seen above, there is a specialized \code{print} function for \code{wavebands}. Functions available are \code{min}, \code{max}, \code{range}, \code{midpoint}, \code{labels}, and \code{color}.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{min}\hlstd{(cie)}
\end{alltt}
\begin{verbatim}
## [1] 250
\end{verbatim}
\begin{alltt}
\hlkwd{max}\hlstd{(cie)}
\end{alltt}
\begin{verbatim}
## [1] 400
\end{verbatim}
\begin{alltt}
\hlkwd{range}\hlstd{(cie)}
\end{alltt}
\begin{verbatim}
## [1] 250 400
\end{verbatim}
\begin{alltt}
\hlkwd{midpoint}\hlstd{(cie)}
\end{alltt}
\begin{verbatim}
## [1] 325
\end{verbatim}
\begin{alltt}
\hlkwd{normalization}\hlstd{(cie)}
\end{alltt}
\begin{verbatim}
## [1] 298
\end{verbatim}
\begin{alltt}
\hlkwd{labels}\hlstd{(cie)}
\end{alltt}
\begin{verbatim}
## $label
## [1] "CIE98"
## 
## $name
## [1] "CIE98.298"
\end{verbatim}
\begin{alltt}
\hlkwd{color}\hlstd{(cie)}
\end{alltt}
\begin{verbatim}
## $CMF
## CIE98.CMF 
## "#02000F" 
## 
## $CC
##  CIE98.CC 
## "#1A00DD"
\end{verbatim}
\end{kframe}
\end{knitrout}


%%%%
%\section{Task: define wavebands}\label{sec:wt:wavebands}
%
%In section \ref{sec:uw:wavebands} we briefly introduced \code{new\_waveband}, and here we describe its use in full detail, including the use of spectral weighting functions (SWFs).
%
%Defining a new weighted \code{waveband}. We start with a simple `toy' example:
%
%<<tidy=FALSE>>=
%toy.wb <- new_waveband(400, 700, "SWF",
%                       SWF.e.fun=function(wl){(wl - 400)^2},
%                       norm=550, SWF.norm=550,
%                       wb.name="TOY")
%toy.wb
%with(sun.data,
%     energy_irradiance(w.length, s.e.irrad, toy.wb))
%with(sun.data,
%     photon_irradiance(w.length, s.e.irrad, toy.wb))
%@


%%%%
\section{Introduction}\label{sec:wt:intro}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiologyWavebands))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiology))}
\end{alltt}
\end{kframe}
\end{knitrout}







\chapter{Transmission and reflection}

\begin{abstract}
In this chapter we explain how to do calculations related to the description of absortion and reflection of UV and VIS radiation.
\end{abstract}

\section{Packages used in this chapter}

For executing the examples listed in this chapter you need first to load the following packages from the library:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{library}\hlstd{(photobiology)}
\hlkwd{library}\hlstd{(photobiologyWavebands)}
\hlkwd{library}\hlstd{(photobiologyFilters)}
\hlkwd{library}\hlstd{(photobiologyLEDs)}
\end{alltt}
\end{kframe}
\end{knitrout}

%%%%
\section{Introduction}\label{sec:}

\section{Task: absorbance and transmittance}

Transmittance is defined as:
\begin{equation}
\tau(\lambda) = \frac{I}{I_0} = \frac{\sirr}{\sirr[0]} = \frac{\spfd}{\spfd[0]}
\end{equation}

Given this simple relation $\tau(\lambda)$ can be calculated as a division between two "source.spct" objects. This gives the correct answer, but as an object of class "source.scpt".

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{tau} \hlkwb{<-} \hlstd{spc_above} \hlopt{/} \hlstd{spc_below}
\end{alltt}
\end{kframe}
\end{knitrout}

Absorptance is just $1 - \tau(\lambda)$, but should be distinguished from absorbance ($A(\lambda)$) which is measured on a logarithmic scale:

\begin{equation}
A(\lambda) = -{\log}_{10} \frac{I}{I_0}
\end{equation}

In chemistry 10 is always used as the base of the logarithm, but in other contexts sometimes $\mathrm{e}$ is used as base.

Given the simple equation, $A(\lambda)$ can be also easily calculated using the operators for spectra. This gives the correct answer, but in an object of class "source.scpt".

The conversion between $\tau(\lambda)$ and $A(\lambda)$ is:

\begin{equation}
A(\lambda) = -{\log}_{10} \tau(\lambda)
\end{equation}

which in S language is:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{my_T2A} \hlkwb{<-} \hlkwa{function}\hlstd{(}\hlkwc{x}\hlstd{) \{}\hlopt{-}\hlkwd{log10}\hlstd{(x)\}}
\end{alltt}
\end{kframe}
\end{knitrout}

The conversion between  $A(\lambda)$ and $\tau(\lambda)$ is:

\begin{equation}
\tau(\lambda) = 10^{-A(\lambda)}
\end{equation}

which in S language is:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{my_A2T} \hlkwb{<-} \hlkwa{function}\hlstd{(}\hlkwc{x}\hlstd{) \{}\hlnum{10}\hlopt{^-}\hlstd{x\}}
\end{alltt}
\end{kframe}
\end{knitrout}

Instead of these functions, the package defines generic functions and specialized functions, that can be used on vectors and on \code{filter.spc} objects. Then functions defined above could be directly applied to vectors but doing this on a column in a \code{filter.spc} is more cumbersome. As the spectra objects are data.tables, one can add a new column, say with transmittances to a copy of the filter data as follows.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{my_gg400.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(gg400.spct)}
\hlstd{my_gg400.spct[ , A} \hlkwb{:=} \hlkwd{T2A}\hlstd{(Tfr)]}
\end{alltt}
\begin{verbatim}
##      w.length   Tfr A
##   1:      200 1e-05 5
##   2:      210 1e-05 5
##   3:      220 1e-05 5
##   4:      230 1e-05 5
##   5:      240 1e-05 5
##  ---                 
## 176:     4950 1e-05 5
## 177:     5000 1e-05 5
## 178:     5050 1e-05 5
## 179:     5100 1e-05 5
## 180:     5150 1e-05 5
\end{verbatim}
\begin{alltt}
\hlstd{my_gg400.spct}
\end{alltt}
\begin{verbatim}
##      w.length   Tfr A
##   1:      200 1e-05 5
##   2:      210 1e-05 5
##   3:      220 1e-05 5
##   4:      230 1e-05 5
##   5:      240 1e-05 5
##  ---                 
## 176:     4950 1e-05 5
## 177:     5000 1e-05 5
## 178:     5050 1e-05 5
## 179:     5100 1e-05 5
## 180:     5150 1e-05 5
\end{verbatim}
\end{kframe}
\end{knitrout}

%%%%
\section{Task: spectral absorbance from spectral transmittance}

Using \code{filter.spct} objects, the calculations become very simple.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{my_gg400.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(gg400.spct)}
\hlkwd{T2A}\hlstd{(my_gg400.spct)}
\hlstd{a.gg400.spct} \hlkwb{<-} \hlkwd{T2A}\hlstd{(my_gg400.spct,} \hlkwc{action}\hlstd{=}\hlstr{"replace"}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}

%%%%
\section{Task: spectral transmittance from spectral absorbance}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{A2T}\hlstd{(a.gg400.spct)}
\hlkwd{A2T}\hlstd{(a.gg400.spct,} \hlkwc{action}\hlstd{=}\hlstr{"replace"}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}

%%%%
\section{Task: reflected or transmitted spectrum from spectral reflectance and spectral irradiance}

When we multiply a \code{source.spct} by a \code{filter.spct} or by a \code{reflector.spct} we obtain as a result a new \code{source.spct}.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{class}\hlstd{(sun.spct)}
\end{alltt}
\begin{verbatim}
## [1] "source.spct"  "generic.spct" "data.table"  
## [4] "data.frame"
\end{verbatim}
\begin{alltt}
\hlkwd{class}\hlstd{(gg400.spct)}
\end{alltt}
\begin{verbatim}
## [1] "filter.spct"  "generic.spct" "data.table"  
## [4] "data.frame"
\end{verbatim}
\end{kframe}
\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{my_sun.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(sun.spct)}
\hlstd{my_gg400.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(gg400.spct)}
\hlstd{filtered_sun.spct} \hlkwb{<-} \hlstd{sun.spct} \hlopt{*} \hlstd{gg400.spct}
\hlkwd{class}\hlstd{(filtered_sun.spct)}
\end{alltt}
\begin{verbatim}
## [1] "source.spct"  "generic.spct" "data.table"  
## [4] "data.frame"
\end{verbatim}
\begin{alltt}
\hlkwd{head}\hlstd{(filtered_sun.spct)}
\end{alltt}
\begin{verbatim}
##    w.length    s.e.irrad
## 1:      293 2.609665e-11
## 2:      294 6.142401e-11
## 3:      295 2.176175e-10
## 4:      296 6.780119e-10
## 5:      297 1.533491e-09
## 6:      298 3.669677e-09
\end{verbatim}
\end{kframe}
\end{knitrout}

The result of the calculation can be directly used as an argument, for example, when calulating irradiance.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{q_irrad_spct}\hlstd{(sun.spct,} \hlkwd{UV}\hlstd{())} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
##  UV.ISO 
## 85.4784 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\begin{alltt}
\hlkwd{q_irrad_spct}\hlstd{(my_sun.spct,} \hlkwd{UV}\hlstd{())} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
##  UV.ISO 
## 85.4784 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\begin{alltt}
\hlkwd{q_irrad_spct}\hlstd{(filtered_sun.spct,} \hlkwd{UV}\hlstd{())} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
##   UV.ISO 
## 3.153016 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\begin{alltt}
\hlkwd{q_irrad_spct}\hlstd{(sun.spct} \hlopt{*} \hlstd{gg400.spct,} \hlkwd{UV}\hlstd{())} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
##   UV.ISO 
## 3.153016 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\begin{alltt}
\hlkwd{q_irrad_spct}\hlstd{(my_sun.spct} \hlopt{*} \hlstd{my_gg400.spct,} \hlkwd{UV}\hlstd{())} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
##   UV.ISO 
## 3.153016 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{q_irrad_spct}\hlstd{(my_sun.spct} \hlopt{*} \hlstd{my_gg400.spct)} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
## range.293.800 
##      1135.601 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\begin{alltt}
\hlkwd{q_irrad_spct}\hlstd{(my_sun.spct} \hlopt{*} \hlstd{my_gg400.spct,}
             \hlkwd{new_waveband}\hlstd{(}\hlkwd{min}\hlstd{(sun.spct),} \hlkwd{max}\hlstd{(sun.spct)))} \hlopt{*} \hlnum{1e6}
\end{alltt}
\begin{verbatim}
## range.293.800 
##      1134.281 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

Remember, thet if we want to predict the output of a light source composed of different lamps or LEDs we can add the individual spectral irradiance, but using data measured from the target positions of each individaul light source. If we want then to add the effect of a filter we must multiply by the filter transmittance.

\begin{framed}
In the current version of package \code{photobiology} the operator is ``chosen'' based on the first operand. For this reason, when including a numeric operand, it should always be the second operand of binary operators for spectra.
\end{framed}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlcom{# not working}
\hlstd{my_luminaire} \hlkwb{<-}
  \hlstd{(}\hlnum{0.5} \hlopt{*} \hlstd{Norlux_B.spct} \hlopt{+} \hlstd{Norlux_R.spct)} \hlopt{*}  \hlstd{PLX0A000_XT.spct}
\hlstd{my_luminaire}
\end{alltt}
\begin{verbatim}
## NULL
\end{verbatim}
\begin{alltt}
\hlcom{# works fine}
\hlstd{my_luminaire} \hlkwb{<-}
  \hlstd{(Norlux_B.spct} \hlopt{*} \hlnum{0.5} \hlopt{+} \hlstd{Norlux_R.spct)} \hlopt{*}  \hlstd{PLX0A000_XT.spct}
\hlstd{my_luminaire}
\end{alltt}
\begin{verbatim}
##       w.length s.e.irrad
##    1:   200.00         0
##    2:   200.47         0
##    3:   200.95         0
##    4:   201.00         0
##    5:   201.42         0
##   ---                   
## 2355:   936.05         0
## 2356:   936.48         0
## 2357:   936.91         0
## 2358:   937.00         0
## 2359:   937.34         0
\end{verbatim}
\begin{alltt}
\hlkwd{q_ratio_spct}\hlstd{(my_luminaire,}
             \hlkwd{list}\hlstd{(}\hlkwd{Red}\hlstd{(),} \hlkwd{Blue}\hlstd{(),} \hlkwd{Green}\hlstd{()),} \hlkwd{PAR}\hlstd{())}
\end{alltt}
\begin{verbatim}
##   Red.ISO:PAR(q:q)  Blue.ISO:PAR(q:q) 
##        0.816195602        0.146121825 
## Green.ISO:PAR(q:q) 
##        0.003908976
\end{verbatim}
\begin{alltt}
\hlkwd{q_irrad_spct}\hlstd{(my_luminaire,}
             \hlkwd{list}\hlstd{(}\hlkwd{PAR}\hlstd{(),} \hlkwd{Red}\hlstd{(),} \hlkwd{Blue}\hlstd{(),} \hlkwd{Green}\hlstd{()))} \hlopt{*}  \hlnum{1e6}
\end{alltt}
\begin{verbatim}
##          PAR      Red.ISO     Blue.ISO 
## 1.591314e-02 1.298824e-02 2.325257e-03 
##    Green.ISO 
## 6.220409e-05 
## attr(,"time.unit")
## [1] "second"
\end{verbatim}
\end{kframe}
\end{knitrout}

%%%%
\section{Task: total spectral transmittance from internal spectral transmittance and spectral reflectance}\label{sec:}

%%%%
\section{Task: combined spectral transmittance of two or more filters}\label{sec:}

\subsection{Ignoring reflectance}


\subsection{Considering reflectance}

%%%%
\section{Task: light scattering media (natural waters, plant and animal tissues)}\label{sec:}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiologyFilters))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiologyLEDs))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiologyWavebands))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiology))}
\end{alltt}
\end{kframe}
\end{knitrout}





\chapter{Colour}

\begin{abstract}
  In this chapter we explain how to use colours according to visual sensitivity. For example calculating red-green-blue (RGB) values for humans.
\end{abstract}

\section{Packages used in this chapter}

For executing the examples listed in this chapter you need first to load the following packages from the library:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{library}\hlstd{(photobiology)}
\end{alltt}
\end{kframe}
\end{knitrout}

\section{Introduction}

The calculation of equivalent colours and colour spaces is based on the number of photoreceptors and their spectral sensitivities. For humans it is normally accepted that there are three photoreceptors in the eyes, with maximum sensitivities in the red, green, and blue regions of the spectrum.

When calculating colours we can take either only the colour or both colour and apparent luminance. In our functions, in the first case one needs to provide as input `chromaticity coordinates' (CC) and in the second case `colour matching functions' (CMF). The suite includes data for humans, but the current implementation of the functions should be able to handle also calculations for other organisms with tri-chromic vision.

The functions allow calculation of simulated colour of light sources as R colour definitions. Three different functions are available, one for monochromatic light taking as argument wavelength values, and one for polychromatic light taking as argument spectral energy irradiances and the corresponding wave length values. The third function can be used to calculate a representative RGB colour for a band of the spectrum represented as a range of wavelengths, based on the assumption of a flat energy irradiance across this range.

By default CIE coordinates for \textit{typical} human vision are used, but the functions
have a parameter that can be used for supplying a different chromaticity definition. The range of wavelengths used in the calculations is that in the chromaticity data.

One use of these functions is to generate realistic colour for `key' on plots of spectral data. Other uses are also possible, like simulating how different, different objects would look to a certain organism.

\begin{framed}
This package is very `young' so may be to some extent buggy, and/or have rough edges.
We plan to add at least visual data for honey bees.
\end{framed}

%%%%
\section{Task: calculating an RGB colour from a single wavelength}\label{sec:color:wl}

Function \code{w\_length2rgb} must be used in this case. If a vector of wavelengths is supplied as argument, then a vector of \code{color}s, of the same length, is returned. Here are some examples of calculation of R color definitions for monochromatic light:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{w_length2rgb}\hlstd{(}\hlnum{550}\hlstd{)} \hlcom{# green}
\end{alltt}
\begin{verbatim}
## wl.550.nm 
## "#00FF00"
\end{verbatim}
\begin{alltt}
\hlkwd{w_length2rgb}\hlstd{(}\hlnum{630}\hlstd{)} \hlcom{# red}
\end{alltt}
\begin{verbatim}
## wl.630.nm 
## "#FF0000"
\end{verbatim}
\begin{alltt}
\hlkwd{w_length2rgb}\hlstd{(}\hlnum{380}\hlstd{)} \hlcom{# UVA}
\end{alltt}
\begin{verbatim}
## wl.380.nm 
## "#000000"
\end{verbatim}
\begin{alltt}
\hlkwd{w_length2rgb}\hlstd{(}\hlnum{750}\hlstd{)} \hlcom{# far red}
\end{alltt}
\begin{verbatim}
## wl.750.nm 
## "#000000"
\end{verbatim}
\begin{alltt}
\hlkwd{w_length2rgb}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{550}\hlstd{,} \hlnum{630}\hlstd{,} \hlnum{380}\hlstd{,} \hlnum{750}\hlstd{))} \hlcom{# vectorized}
\end{alltt}
\begin{verbatim}
## wl.550.nm wl.630.nm wl.380.nm wl.750.nm 
## "#00FF00" "#FF0000" "#000000" "#000000"
\end{verbatim}
\end{kframe}
\end{knitrout}

%%%%
\section{Task: calculating an RGB colour for a range of wavelengths}\label{sec:color:range}

Function \code{w\_length\_range2rgb} must be used in this case. This function expects as input a vector of two number, as returned by the function \code{range}. If a longer vector is supplied as argument, its range is used, with a warning. If a vector of lengths one is given as argument, then the same output as from function \code{w\_length2rgb} is returned. This function assumes a flat energy spectral irradiance curve within the range. Some examples:
Examples for wavelength ranges:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{w_length_range2rgb}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{400}\hlstd{,}\hlnum{700}\hlstd{))}
\end{alltt}
\begin{verbatim}
## 400-700 nm 
##  "#735B57"
\end{verbatim}
\begin{alltt}
\hlkwd{w_length_range2rgb}\hlstd{(}\hlnum{400}\hlopt{:}\hlnum{700}\hlstd{)}
\end{alltt}


{\ttfamily\noindent\itshape\color{messagecolor}{\#\# Using only extreme wavelength values.}}\begin{verbatim}
## 400-700 nm 
##  "#735B57"
\end{verbatim}
\begin{alltt}
\hlkwd{w_length_range2rgb}\hlstd{(sun.data}\hlopt{$}\hlstd{w.length)}
\end{alltt}


{\ttfamily\noindent\itshape\color{messagecolor}{\#\# Using only extreme wavelength values.}}\begin{verbatim}
## 293-800 nm 
##  "#554340"
\end{verbatim}
\begin{alltt}
\hlkwd{w_length_range2rgb}\hlstd{(}\hlnum{550}\hlstd{)}
\end{alltt}


{\ttfamily\noindent\itshape\color{messagecolor}{\#\# Calculating RGB values for monochromatic light.}}\begin{verbatim}
## wl.550.nm 
## "#00FF00"
\end{verbatim}
\end{kframe}
\end{knitrout}

%%%%
\section{Task: calculating an RGB colour for spectrum}\label{sec:color:spc}

Function \code{s\_e\_irrad2rgb} in contrast to those described above, when calculating the color takes into account the spectral irradiance.

Examples for spectra, in this case the solar spectrum:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{s_e_irrad2rgb}\hlstd{(w.length, s.e.irrad))}
\end{alltt}
\begin{verbatim}
## [1] "#544F4B"
\end{verbatim}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{s_e_irrad2rgb}\hlstd{(w.length, s.e.irrad,} \hlkwc{sens}\hlstd{=ciexyzCMF2.spct))}
\end{alltt}
\begin{verbatim}
## [1] "#544F4B"
\end{verbatim}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{s_e_irrad2rgb}\hlstd{(w.length, s.e.irrad,} \hlkwc{sens}\hlstd{=ciexyzCMF10.spct))}
\end{alltt}
\begin{verbatim}
## [1] "#59534F"
\end{verbatim}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{s_e_irrad2rgb}\hlstd{(w.length, s.e.irrad,} \hlkwc{sens}\hlstd{=ciexyzCC2.spct))}
\end{alltt}
\begin{verbatim}
## [1] "#B63C37"
\end{verbatim}
\begin{alltt}
\hlkwd{with}\hlstd{(sun.data,}
     \hlkwd{s_e_irrad2rgb}\hlstd{(w.length, s.e.irrad,} \hlkwc{sens}\hlstd{=ciexyzCC10.spct))}
\end{alltt}
\begin{verbatim}
## [1] "#BD3C33"
\end{verbatim}
\end{kframe}
\end{knitrout}

Except for the first example, we specificity the visual sensitivity data to use.

\section{A sample of colours}

Here we plot the RGB colours for the range covered by the CIE 2006 proposed standard calculated at each 1 nm step:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{wl} \hlkwb{<-} \hlkwd{c}\hlstd{(}\hlnum{390}\hlstd{,} \hlnum{829}\hlstd{)}

\hlstd{my.colors} \hlkwb{<-} \hlkwd{w_length2rgb}\hlstd{(wl[}\hlnum{1}\hlstd{]}\hlopt{:}\hlstd{wl[}\hlnum{2}\hlstd{])}

\hlstd{colCount} \hlkwb{<-} \hlnum{40} \hlcom{# number per row}
\hlstd{rowCount} \hlkwb{<-} \hlkwd{trunc}\hlstd{(}\hlkwd{length}\hlstd{(my.colors)} \hlopt{/} \hlstd{colCount)}

\hlkwd{plot}\hlstd{(} \hlkwd{c}\hlstd{(}\hlnum{1}\hlstd{,colCount),} \hlkwd{c}\hlstd{(}\hlnum{0}\hlstd{,rowCount),} \hlkwc{type}\hlstd{=}\hlstr{"n"}\hlstd{,}
      \hlkwc{ylab}\hlstd{=}\hlstr{""}\hlstd{,} \hlkwc{xlab}\hlstd{=}\hlstr{""}\hlstd{,}
      \hlkwc{axes}\hlstd{=}\hlnum{FALSE}\hlstd{,} \hlkwc{ylim}\hlstd{=}\hlkwd{c}\hlstd{(rowCount,}\hlnum{0}\hlstd{))}
\hlkwd{title}\hlstd{(}\hlkwd{paste}\hlstd{(}\hlstr{"RGB colours for"}\hlstd{,}
            \hlkwd{as.character}\hlstd{(wl[}\hlnum{1}\hlstd{]),} \hlstr{"to"}\hlstd{,}
            \hlkwd{as.character}\hlstd{(wl[}\hlnum{2}\hlstd{]),} \hlstr{"nm"}\hlstd{))}

\hlkwa{for} \hlstd{(j} \hlkwa{in} \hlnum{0}\hlopt{:}\hlstd{(rowCount}\hlopt{-}\hlnum{1}\hlstd{))}
\hlstd{\{}
  \hlstd{base} \hlkwb{<-} \hlstd{j}\hlopt{*}\hlstd{colCount}
  \hlstd{remaining} \hlkwb{<-} \hlkwd{length}\hlstd{(my.colors)} \hlopt{-} \hlstd{base}
  \hlstd{RowSize} \hlkwb{<-}
    \hlkwd{ifelse}\hlstd{(remaining} \hlopt{<} \hlstd{colCount, remaining, colCount)}
  \hlkwd{rect}\hlstd{((}\hlnum{1}\hlopt{:}\hlstd{RowSize)}\hlopt{-}\hlnum{0.5}\hlstd{, j}\hlopt{-}\hlnum{0.5}\hlstd{, (}\hlnum{1}\hlopt{:}\hlstd{RowSize)}\hlopt{+}\hlnum{0.5}\hlstd{, j}\hlopt{+}\hlnum{0.5}\hlstd{,}
       \hlkwc{border}\hlstd{=}\hlstr{"black"}\hlstd{,}
       \hlkwc{col}\hlstd{=my.colors[base} \hlopt{+} \hlstd{(}\hlnum{1}\hlopt{:}\hlstd{RowSize)])}
\hlstd{\}}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-unnamed-chunk-156-1} 

}



\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiology))}
\end{alltt}
\end{kframe}
\end{knitrout}


% !Rnw root = r4p.main.Rnw



\chapter{Plotting spectra and colours}



\begin{abstract}
  In this chapter we explain how to plot spectra and colours, using packages \code{ggplot2}, \code{ggtern}, and the functions in our package \code{photobiologygg}. Both \code{ggtern} for ternary plots and \code{photobiologygg} for annotating spectra build new functionality on top of the \code{ggplot2} package. We also use several functions and data from package \code{photobiology} in the examples.
\end{abstract}


\section{Packages used in this chapter}

For executing the examples listed in this chapter you need first to load the following packages from the library:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{library}\hlstd{(ggplot2)}
\hlkwd{library}\hlstd{(scales)}
\hlkwd{library}\hlstd{(ggtern)}
\end{alltt}


{\ttfamily\noindent\itshape\color{messagecolor}{\#\# \\\#\# Attaching package: 'ggtern'\\\#\# \\\#\# The following objects are masked from 'package:ggplot2':\\\#\# \\\#\#\ \ \ \  \%+\%, \%+replace\%, aes, calc\_element,\\\#\#\ \ \ \  geom\_density2d, geom\_segment,\\\#\#\ \ \ \  geom\_smooth, ggplot\_build,\\\#\#\ \ \ \  ggplot\_gtable, ggsave, opts,\\\#\#\ \ \ \  stat\_density2d, stat\_smooth, theme,\\\#\#\ \ \ \  theme\_bw, theme\_classic, theme\_get,\\\#\#\ \ \ \  theme\_gray, theme\_grey, theme\_minimal,\\\#\#\ \ \ \  theme\_set, theme\_update}}\begin{alltt}
\hlkwd{library}\hlstd{(gridExtra)}
\end{alltt}


{\ttfamily\noindent\itshape\color{messagecolor}{\#\# Loading required package: grid}}\begin{alltt}
\hlkwd{library}\hlstd{(photobiology)}
\hlkwd{library}\hlstd{(photobiologyFilters)}
\hlkwd{library}\hlstd{(photobiologyWavebands)}
\hlkwd{library}\hlstd{(photobiologygg)}
\end{alltt}
\end{kframe}
\end{knitrout}



%%%%
\section{Introduction to plotting spectra}\label{sec:plot:intro}

We show in this chapter examples of how spectral data can be plotted. All the examples
are done with package \code{ggplot2}, sometimes using in addition other packages.
\code{ggplot2} provides the most recent, but stable, type of plotting functionality in R, and is
what we use here for most examples. Both \code{base} graphic functions, part of
R itself and `trellis' graphics provided by package \code{lattice} are other popular
alternatives. The new package \code{ggvis} uses similar grammar as \code{ggplot2} but
drastically improves on functionality for interactive plots.
Several of the functions used in this chapter are extensions to
package \code{ggplot2}\footnote{\code{ggplot2} is feature-frozen, in other words the user interface
defined by the functions and their arguments will not change in future versions. Consequently
it is a good basis for adding application-specific functionality through separate
packages. \code{ggplot2} uses the \emph{grammar
of graphics} for describing the plots. This grammar, because it is consistent,
tends to be easier to understand, and makes it easier to design new functionality
that uses extensions based on the same `language grammar' as used by the original package.}

How to depict a spectrum in a figure has to be thought in relation to what aspect of the
information we want to highlight. A line plot of a spectrum with peaks and/or valleys labelled
highlights the shape of the spectrum, while a spectrum plotted with the area below the curve
filled highlights the total energy irradiance (or photon irradiance) for a given region
of the spectrum. Adding a bar with the colours corresponding to the different
wavelengths, facilitates the reading of the plot for people not familiar with the
interpretation on wavelengths expressed in nanometres. Labeling regions of the spectrum
with waveband names also facilitates the understanding of plotted spectral data.
A basic line plot of spectral data can be easily done with \code{ggplot2} or any of the
other plotting functions in R. In this chapter we focus on how to add to basic line and
dot plots all the `fancy decorations' that can so much facilitate their reading and
interpretation.

Towards the end of the chapter we give examples of plotting of RGB (red-green-blue) colours
for human vision on a ternary plot, and show how to do a ternary plot for GBU
(green-blue-ultraviolet) flower colours for honeybee vision using as reference the reflectance
of a background.

If you are not familiar with \code{ggplot2} and \code{ggtern} plotting, please read Appendix
\ref{chap:R:plotting} on page \pageref{chap:R:plotting} before continuing reading the
present chapter.

%%%%
\section{Task: simple plotting of spectra}\label{sec:simple:plot:spc}

Pakage \code{photobiologygg} defines specializations of the generic \code{plot} function of R. These functions are available for spectral objects. They return a \code{ggplot} object, to which additional layers can be added if desired. An example of it simplest use follows. As the spectral objects have spectral irradiance expressed in known energy or photon units, and an attribute indicating the time unit, the axis labels are produced automatically. The two plots that follow show spectral irradiance, and spectral daily exposure, respectively.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{plot}\hlstd{(sun.spct)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-sun-default-0-1} 

}



\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{plot}\hlstd{(sun.daily.spct)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-sun-default-1-1} 

}



\end{knitrout}

The parameter \code{unit} can be set to \code{"photon"} to obtain a plot depicting spectral photon irradiance. This works irrespective of whether the \code{source.spct} object contains the spectral data in photon or energy units.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{plot}\hlstd{(sun.spct,} \hlkwc{unit}\hlstd{=}\hlstr{"photon"}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-sun-default-2-1} 

}



\end{knitrout}

A list of wave bands, or a single wave band, to be used for annotation can be supplied through the \code{bands} parameter. A \code{NULL} waveband results in no waveband labels, while the next example shows how to obtain the total irradiance.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{plot}\hlstd{(sun.spct,} \hlkwc{bands}\hlstd{=}\hlkwd{PAR}\hlstd{(),} \hlkwc{unit}\hlstd{=}\hlstr{"photon"}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-sun-default-3-1} 

}



\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{plot}\hlstd{(sun.spct,} \hlkwc{bands}\hlstd{=}\hlkwa{NULL}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-sun-default-4-1} 

}



\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{plot}\hlstd{(sun.spct,} \hlkwc{bands}\hlstd{=}\hlkwd{waveband}\hlstd{(sun.spct))}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-sun-default-5-1} 

}



\end{knitrout}

Of course the arguments to these parameters can be supplied in different combinations, and combined with other functions as need. This last example shows how to plot using photon-based units, selecting only a specific region of the spectrum, annotated with the red and far-red photon irradiances, using Prof.\ Harry Smith's definitions for these two wavebands.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{plot}\hlstd{(}\hlkwd{trim_spct}\hlstd{(sun.spct,} \hlkwd{waveband}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{600}\hlstd{,}\hlnum{800}\hlstd{))),}
     \hlkwc{bands}\hlstd{=}\hlkwd{list}\hlstd{(}\hlkwd{Red}\hlstd{(}\hlstr{"Smith"}\hlstd{),} \hlkwd{Far_red}\hlstd{(}\hlstr{"Smith"}\hlstd{)),} \hlkwc{unit}\hlstd{=}\hlstr{"photon"}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-sun-default-6-1} 

}



\end{knitrout}

Two final examples show how to annotate a spectrum plot by equal sized wavebands.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{plot}\hlstd{(sun.spct,}
     \hlkwc{bands}\hlstd{=}\hlkwd{split_bands}\hlstd{(}\hlkwd{c}\hlstd{(}\hlnum{300}\hlstd{,}\hlnum{800}\hlstd{),} \hlkwc{length.out}\hlstd{=}\hlnum{5}\hlstd{),} \hlkwc{unit}\hlstd{=}\hlstr{"photon"}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-sun-default-7-1} 

}



\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{plot}\hlstd{(}\hlkwd{trim_spct}\hlstd{(sun.spct,} \hlkwd{PAR}\hlstd{()),}
     \hlkwc{bands}\hlstd{=}\hlkwd{split_bands}\hlstd{(}\hlkwd{PAR}\hlstd{(),} \hlkwc{length.out}\hlstd{=}\hlnum{6}\hlstd{),} \hlkwc{unit}\hlstd{=}\hlstr{"photon"}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-sun-default-8-1} 

}



\end{knitrout}

\begin{framed}
\noindent
As the current implementation uses annotations rather than a \code{ggplot} `statistic', waveband irradiance annotations ignore global aesthetics and facets. If used for simultaneous plotting of several spectra (stored in a single R object), then parameter \code{bands} should given \code{NULL} as argument.
\end{framed}

%%%%
\section[Task: plotting spectra with ggplot2]{Task: plotting spectra with \code{ggplot2}}\label{sec:plot:spc}

We create a simple line plot, assign it to a variable called \code{fig\_sun.e0} and then on the next line \code{print} it\footnote{we could have used \code{print(fig\_sun.e0)} explicitly, but this is needed only in scripts because printing takes places automatically when working at the R console.}. We obtain a plot with the axis labeled with the names of the variables, which is enough to check the data, but not good enough for publication.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.e0} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=sun.spct,} \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad))} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()}

\hlstd{fig_sun.e0}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-sun-linear-0-1} 

}



\end{knitrout}

Next we add \code{labs} to obtain nicer axis labels, instead of assigning the result to a variable for reuse, we print it on-the-fly. As we need superscripts for the $y$-label we have to use \code{expression} instead of a character string as we use for the $x$-label. The syntax of expressions is complex, so please look at \code{help(plotmath)} and appendix \ref{chap:R:plotting} for more details.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.e0}  \hlopt{+}
  \hlkwd{labs}\hlstd{(}
    \hlkwc{y} \hlstd{=} \hlkwd{expression}\hlstd{(Spectral}\hlopt{~~}\hlstd{energy}\hlopt{~~}\hlstd{irradiance}\hlopt{~~}\hlstd{(W}\hlopt{~}\hlstd{m}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{2}\hlstd{\}}\hlopt{~}\hlstd{nm}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{1}\hlstd{\})),}
    \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-sun-linear-1-1} 

}



\end{knitrout}

As we are going to re-use the same axis-labels in later plots, it is handy to save their definitions to variables. These definitions will be used in  many of this chapter's plots. We also add \code{atop} to two of the expressions to making shorter versions by setting the spectral irradiance units on a second line in the axis labels.


\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{ylab_watt} \hlkwb{<-}
  \hlkwd{expression}\hlstd{(Spectral}\hlopt{~~}\hlstd{energy}\hlopt{~~}\hlstd{irradiance}\hlopt{~~}\hlstd{(W}\hlopt{~}\hlstd{m}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{2}\hlstd{\}}\hlopt{~}\hlstd{nm}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{1}\hlstd{\}))}
\hlstd{ylab_watt_atop} \hlkwb{<-}
  \hlkwd{expression}\hlstd{(}\hlkwd{atop}\hlstd{(Spectral}\hlopt{~~}\hlstd{energy}\hlopt{~~}\hlstd{irradiance,}
                  \hlstd{(W}\hlopt{~}\hlstd{m}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{2}\hlstd{\}}\hlopt{~}\hlstd{nm}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{1}\hlstd{\})))}
\hlstd{ylab_umol} \hlkwb{<-}
  \hlkwd{expression}\hlstd{(Spectral}\hlopt{~~}\hlstd{photon}\hlopt{~~}\hlstd{irradiance}\hlopt{~~}\hlstd{(mu}\hlopt{*}\hlstd{mol}\hlopt{~}\hlstd{m}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{2}\hlstd{\}}\hlopt{~}\hlstd{s}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{1}\hlstd{\}}\hlopt{~}\hlstd{nm}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{1}\hlstd{\}))}
\hlstd{ylab_umol_atop} \hlkwb{<-}
  \hlkwd{expression}\hlstd{(}\hlkwd{atop}\hlstd{(Spectral}\hlopt{~~}\hlstd{photon}\hlopt{~~}\hlstd{irradiance,}
                  \hlstd{(mu}\hlopt{*}\hlstd{mol}\hlopt{~}\hlstd{m}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{2}\hlstd{\}}\hlopt{~}\hlstd{s}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{1}\hlstd{\}}\hlopt{~}\hlstd{nm}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{1}\hlstd{\})))}
\hlstd{xlab_nm} \hlkwb{<-} \hlstr{"Wavelength (nm)"}
\end{alltt}
\end{kframe}
\end{knitrout}


%%%%
\section{Task: using a log scale}\label{sec:plot:log}

Here without need to recreate the figure, we add a logarithmic scale for the $y$-axis and print on the fly the result, and two of the just saved axis-labels. In this case we override the automatic limits of the scale. We do not give further examples of this, but could be also used with later examples, just by adjusting the values used as scale limits.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.e0} \hlopt{+}
  \hlkwd{scale_y_log10}\hlstd{(}\hlkwc{limits}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{1e-3}\hlstd{,} \hlnum{1e0}\hlstd{))} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{x} \hlstd{= xlab_nm,} \hlkwc{y} \hlstd{= ylab_watt)}
\end{alltt}


{\ttfamily\noindent\color{warningcolor}{\#\# Warning: Removed 7 rows containing missing values (geom\_path).}}\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-sun-log-1} 

}



\end{knitrout}

The code above generates some harmless warnings, which are due some $y$ values not being valid input for \code{log10}, the function used for the re-scaling, or because they fall outside the scale limits.
%%%%

\section{Task: compare energy and photon spectral units}\label{sec:plot:phot:energy}

We use once more the axis-labels saved above, but this time use the two-line label for the $y$-axis. To make sure that the width of the plotting area of both plots is the same, we need to have tick labels of the same width and format in both plots. For this we define a formatting function \code{num\_one\_dec} and then use it in the scale definition.



\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{num_one_dec} \hlkwb{<-} \hlkwa{function}\hlstd{(}\hlkwc{x}\hlstd{,} \hlkwc{...}\hlstd{) \{}
  \hlkwd{format}\hlstd{(x,} \hlkwc{nsmall}\hlstd{=}\hlnum{1}\hlstd{,} \hlkwc{trim}\hlstd{=}\hlnum{FALSE}\hlstd{,} \hlkwc{width}\hlstd{=}\hlnum{4}\hlstd{, ...)}
  \hlstd{\}}

\hlstd{fig_sun.q} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=sun.spct,} \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.q.irrad} \hlopt{*} \hlnum{1e6}\hlstd{))} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{scale_y_continuous}\hlstd{(}\hlkwc{labels} \hlstd{= num_one_dec)} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{x} \hlstd{= xlab_nm)}

\hlstd{fig_sun.e1} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=sun.spct,} \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad))} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{scale_y_continuous}\hlstd{(}\hlkwc{labels} \hlstd{= num_one_dec)} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{x} \hlstd{= xlab_nm)}
\end{alltt}
\end{kframe}
\end{knitrout}

We can use function \code{grid.arrange} to make a single plot from two separate ggplots, and put them side by or on top of each other. We use different $y$-axis labels in the two cases to make better use of the available space.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{grid.arrange}\hlstd{(fig_sun.q}  \hlopt{+} \hlkwd{labs}\hlstd{(}\hlkwc{y} \hlstd{= ylab_umol_atop),}
             \hlstd{fig_sun.e1} \hlopt{+} \hlkwd{labs}\hlstd{(}\hlkwc{y} \hlstd{= ylab_watt_atop),}
             \hlkwc{nrow}\hlstd{=}\hlnum{2}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-par-multiple-1-1} 

}



\end{knitrout}



\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{grid.arrange}\hlstd{(fig_sun.q}  \hlopt{+} \hlkwd{labs}\hlstd{(}\hlkwc{y} \hlstd{= ylab_umol),}
             \hlstd{fig_sun.e1} \hlopt{+} \hlkwd{labs}\hlstd{(}\hlkwc{y} \hlstd{= ylab_watt),}
             \hlkwc{nrow}\hlstd{=}\hlnum{1}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-par-multiple-2-1} 

}



\end{knitrout}

\section{Task: finding peaks and valleys in spectra}\label{sec:get:pk:vly}

We first show the use of function \code{get\_peaks} that returns the wavelengths at which peaks are located. The parameter \code{span} determines the number of values used to find a local maximum (the higher the value used, the fewer maxima are detected), and the parameter \code{ignore\_threshold} the fraction of the total span along the irradiance that is taken into account (a value of 0.75, requests only peaks in the upper 25\% of the $y$-range to be returned; a value of -0.75 works similarly but for the lower half of the $y$-range)\footnote{In the current example setting \code{ignore\_threshold} equal to 0.75 given that the range of the spectral irradiance data goes from 0.00~\umolnm to 0.82~\umolnm, causes any peaks having a spectral irradiance of less than 0.62 \umolnm to be ignored.}.  It is good to mention that \code{head} returns the first six rows of its argument, and we use it here just to reduce the length of the output, if you run these examples yourself, you can remove \code{head} from the code. In the output, $x$ corresponds to wavelength, and $y$ to spectral irradiance, while \code{label} is a character string with the wavelength, possibly formatted.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{head}\hlstd{(}\hlkwd{with}\hlstd{(sun.spct,}
          \hlkwd{get_peaks}\hlstd{(w.length, s.e.irrad,} \hlkwc{span}\hlstd{=}\hlnum{31}\hlstd{)))}
\end{alltt}
\begin{verbatim}
##     x         y label
## 1 378 0.4969714   378
## 2 416 0.6761818   416
## 3 451 0.8204633   451
## 4 478 0.7869773   478
## 5 495 0.7899872   495
## 6 531 0.7603297   531
\end{verbatim}
\begin{alltt}
\hlkwd{head}\hlstd{(}\hlkwd{with}\hlstd{(sun.spct,}
          \hlkwd{get_peaks}\hlstd{(w.length, s.e.irrad,} \hlkwc{span}\hlstd{=}\hlnum{31}\hlstd{,}
                    \hlkwc{ignore_threshold}\hlstd{=}\hlnum{0.75}\hlstd{)))}
\end{alltt}
\begin{verbatim}
##     x         y label
## 1 416 0.6761818   416
## 2 451 0.8204633   451
## 3 478 0.7869773   478
## 4 495 0.7899872   495
## 5 531 0.7603297   531
## 6 582 0.6853736   582
\end{verbatim}
\end{kframe}
\end{knitrout}

The parameter span, indicates the size in number of observations (e.g.\ number of discrete wavelength values) included in the window used to find local maxima (peaks) or minima (valleys). By providing different values for this argument
we can `adjust' how \emph{fine} or \emph{coarse} is the structure described by the peaks returned by the function. The window is always defined using an odd number of observations, if an even number is provided as argument, it is increased by one, with a warning.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{head}\hlstd{(}\hlkwd{with}\hlstd{(sun.spct,}
          \hlkwd{get_peaks}\hlstd{(w.length, s.e.irrad,} \hlkwc{span}\hlstd{=}\hlnum{21}\hlstd{)))}
\end{alltt}
\begin{verbatim}
##     x         y label
## 1 354 0.3758625   354
## 2 366 0.4491898   366
## 3 378 0.4969714   378
## 4 416 0.6761818   416
## 5 436 0.7336607   436
## 6 451 0.8204633   451
\end{verbatim}
\begin{alltt}
\hlkwd{head}\hlstd{(}\hlkwd{with}\hlstd{(sun.spct,}
          \hlkwd{get_peaks}\hlstd{(w.length, s.e.irrad,} \hlkwc{span}\hlstd{=}\hlnum{51}\hlstd{)))}
\end{alltt}
\begin{verbatim}
##     x         y label
## 1 451 0.8204633   451
## 2 495 0.7899872   495
## 3 747 0.5025733   747
\end{verbatim}
\end{kframe}
\end{knitrout}

The equivalent function for finding valleys is \code{get\_valleys} taking the same parameters as \code{get\_peaks} but returning the wavelengths at which the valleys are located.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{head}\hlstd{(}\hlkwd{with}\hlstd{(sun.spct,}
          \hlkwd{get_valleys}\hlstd{(w.length, s.e.irrad,} \hlkwc{span}\hlstd{=}\hlnum{51}\hlstd{)))}
\end{alltt}
\begin{verbatim}
##     x         y label
## 1 358 0.2544907   358
## 2 393 0.2422023   393
## 3 431 0.4136900   431
## 4 487 0.6511654   487
## 5 517 0.6176652   517
## 6 589 0.5658760   589
\end{verbatim}
\begin{alltt}
\hlkwd{head}\hlstd{(}\hlkwd{with}\hlstd{(sun.spct,}
          \hlkwd{get_valleys}\hlstd{(w.length, s.e.irrad,} \hlkwc{span}\hlstd{=}\hlnum{51}\hlstd{,}
                      \hlkwc{ignore_threshold}\hlstd{=}\hlnum{0.5}\hlstd{)))}
\end{alltt}
\begin{verbatim}
##     x         y label
## 1 431 0.4136900   431
## 2 487 0.6511654   487
## 3 517 0.6176652   517
## 4 589 0.5658760   589
## 5 656 0.4982959   656
\end{verbatim}
\end{kframe}
\end{knitrout}

In the next section, we plot spectra and annotate them with peaks and valleys. If you find the meaning of the
parameters \code{span} and \code{ignore\_threshold} difficult to grasp from the explanation given above, please, study the code and plots in section \ref{sec:stat:pk:vly}.

%%%%
\section{Task: annotating peaks and valleys in spectra}\label{sec:stat:pk:vly}

Here we show an example of the use the new \code{ggplot} `statistics' \code{stat\_peaks}
from our package \code{photobiologygg}. It uses the same parameter names and take the
same arguments as the \code{get\_peaks} function described in section \ref{sec:get:pk:vly}.
We reuse once more \code{fig\_sun.e} saved in section \ref{sec:plot:spc}.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.e0} \hlopt{+} \hlkwd{stat_peaks}\hlstd{(}\hlkwc{span}\hlstd{=}\hlnum{31}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-peaks-2-1} 

}



\end{knitrout}

\sloppy
Now we play with \texttt{ggplot2} to show different ways of plotting the peaks and valleys.
It behaves as a \code{ggplot2} \code{stat\_xxxx} function accepting a \code{geom} argument
and all the aesthetics valid for the chosen geom. By default \code{geom\_text} is used.

We can change aesthetics, for example the colour:
\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.e0} \hlopt{+} \hlkwd{stat_peaks}\hlstd{(}\hlkwc{colour}\hlstd{=}\hlstr{"red"}\hlstd{,} \hlkwc{span}\hlstd{=}\hlnum{31}\hlstd{)} \hlopt{+}
            \hlkwd{stat_valleys}\hlstd{(}\hlkwc{colour}\hlstd{=}\hlstr{"blue"}\hlstd{,} \hlkwc{span}\hlstd{=}\hlnum{51}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-peaks-valleys-3-1} 

}



\end{knitrout}

We can also use a different geom, in this case \code{geom\_point}, however, be aware that the \code{geom} parameter takes as argument a character string giving the name of the geom, in this case \code{"point"}.
We change a few additional aesthetics of the points: we set \code{shape} to a character, and set its size to 6.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.e0} \hlopt{+}
  \hlkwd{stat_peaks}\hlstd{(}\hlkwc{colour}\hlstd{=}\hlstr{"red"}\hlstd{,} \hlkwc{geom}\hlstd{=}\hlstr{"point"}\hlstd{,}
             \hlkwc{shape}\hlstd{=}\hlstr{"|"}\hlstd{,} \hlkwc{size}\hlstd{=}\hlnum{6}\hlstd{,} \hlkwc{span}\hlstd{=}\hlnum{31}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-peaks-4-1} 

}



\end{knitrout}

We can add the same \code{stat} two or more times to a ggplot, in this example, each time with a different \code{geom}. First we add points to mark the peaks, and afterwards add labels showing the wavelengths at which they are located using geom \code{"text"}. For the \code{shape}, or type of symbol, we use one that supports `fill', and set the \code{fill} to \code{"white"} but keep the border of the symbol \code{"red"} by setting \code{colour}, we also change the \code{size}. With the labels we use \code{vjust} to `justify' the text moving the labels vertically, so that they do not overlap the line depicting the spectrum\footnote{The default position of labels is to have them centred on the coordinates of the peak or valley. Unless we rotate the label, \code{vjust} can be used to shift the label along the $y$-axis, however, justification is a property of the text, not the plot, so the vertical direction is referenced to the position of the text of the label. A value of 0.5 indicates centering, a negative value `up' and a positive value `down'. For example a value of -1 puts the $x, y$ coordinates of the peak or valley at the lower edge of the `bounding box' of the text. For \code{hjust} values of -1 and 1 right and left justify the label with respect to the $x, y$ coordinates supplied. Values other than -1, 0.5, and 1, are valid input, but are rather tricky to use for \code{hjust} as the displacement is computed relative to the width of the bounding box of the label, the displacement being different for the same numerical value depending on the length of the label text.}
In addition we expand the $y$-axis scale so that all labels fall within the plotting area.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.e0} \hlopt{+}
  \hlkwd{stat_peaks}\hlstd{(}\hlkwc{colour}\hlstd{=}\hlstr{"red"}\hlstd{,} \hlkwc{geom}\hlstd{=}\hlstr{"point"}\hlstd{,} \hlkwc{shape}\hlstd{=}\hlnum{23}\hlstd{,}
             \hlkwc{fill}\hlstd{=}\hlstr{"white"}\hlstd{,} \hlkwc{size}\hlstd{=}\hlnum{3}\hlstd{,} \hlkwc{span}\hlstd{=}\hlnum{31}\hlstd{)} \hlopt{+}
  \hlkwd{stat_peaks}\hlstd{(}\hlkwc{colour}\hlstd{=}\hlstr{"red"}\hlstd{,} \hlkwc{vjust}\hlstd{=}\hlopt{-}\hlnum{1}\hlstd{,} \hlkwc{span}\hlstd{=}\hlnum{31}\hlstd{)} \hlopt{+}
  \hlkwd{expand_limits}\hlstd{(}\hlkwc{y}\hlstd{=}\hlnum{0.9}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-peaks-5-1} 

}



\end{knitrout}

Finally an example with rotated labels, using different colours for peaks and valleys. Be aware that the `justification' direction, as discussed in the footnote, is referenced to the position of the text, and for this reason to move the rotated labels upwards we need to use \code{hjust} as the desired displacement is horizontal with respect to the orientation of the text of the label. As we put peak labels above the spectrum and valleys bellow it, we need to use \code{hjust} values of opposite sign, but the exact values used were simply adjusted by trial and error until the figure looked as desired.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.e0} \hlopt{+}
  \hlkwd{stat_peaks}\hlstd{(}\hlkwc{angle}\hlstd{=}\hlnum{90}\hlstd{,} \hlkwc{hjust}\hlstd{=}\hlopt{-}\hlnum{0.5}\hlstd{,} \hlkwc{colour}\hlstd{=}\hlstr{"red"}\hlstd{,} \hlkwc{span}\hlstd{=}\hlnum{31}\hlstd{)} \hlopt{+}
  \hlkwd{stat_valleys}\hlstd{(}\hlkwc{angle}\hlstd{=}\hlnum{90}\hlstd{,} \hlkwc{hjust}\hlstd{=}\hlnum{1}\hlstd{,} \hlkwc{color}\hlstd{=}\hlstr{"blue"}\hlstd{,} \hlkwc{span}\hlstd{=}\hlnum{51}\hlstd{)} \hlopt{+}
  \hlkwd{expand_limits}\hlstd{(}\hlkwc{y}\hlstd{=}\hlnum{1.0}\hlstd{)}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-peaks-valleys-1} 

}



\end{knitrout}

See section \ref{?} in chapter \ref{chap:sources} for an example these stats together with facets.

%%%%
\section{Task: annotating wavebands}\label{sec:plot:ann:wband}

The function \code{annotate\_waveband} can be used to highlight a waveband in a plot of spectral data. Its first argument should be a \code{waveband} object, and the second argument a \code{geom} as a character string. The positions on the x-axis are calculated automatically by default, but they can be overridden by explicit arguments. The vertical positions have no default, except for \code{ymin} which is equal to zero by default. The colour has a default value calculated from waveband definition, in addition x is by default set to the midpoint of the waveband along the wavelength limits. The default value of the labels is the `name' of the waveband as returned by \code{labels.waveband}.

Here is an example for \PAR using defaults, and with arguments supplied only for parameters with no defaults. The example does the annotation using two different `geoms', \code{"rect"} for marking the region, and \code{"text"} for the labels.



\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{figvl} \hlkwb{<-} \hlstd{fig_sun.e0} \hlopt{+} \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{PAR}\hlstd{(),} \hlstr{"rect"}\hlstd{,} \hlkwc{ymax}\hlstd{=}\hlnum{0.82}\hlstd{)} \hlopt{+}
                     \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{PAR}\hlstd{(),} \hlstr{"text"}\hlstd{,} \hlkwc{y}\hlstd{=}\hlnum{0.86}\hlstd{)}

\hlstd{figvl} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-par-annotate-0-1} 

}



\end{knitrout}

This example annotates a narrow waveband.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{figvl} \hlkwb{<-} \hlstd{fig_sun.e0} \hlopt{+} \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{Yellow}\hlstd{(),} \hlstr{"rect"}\hlstd{,} \hlkwc{ymax}\hlstd{=}\hlnum{0.82}\hlstd{)} \hlopt{+}
                     \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{Yellow}\hlstd{(),} \hlstr{"text"}\hlstd{,} \hlkwc{y}\hlstd{=}\hlnum{0.86}\hlstd{)}

\hlstd{figvl} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-yellow-annotate-1} 

}



\end{knitrout}

Now an example that is more complex, and demonstrates the flexibility of plots produced with \code{ggplot2}. We add annotations for eight different wavebands, some of them overlapping. For each one we use two `geoms' and some labels are rotated and justified. We can also see in this example that the annotations look nicer on a white background, which can be obtained with \code{theme\_bw}. A much simpler, but less flexible approach for adding annotations for several wavebands is described on page \pageref{chunk:plot:ann:tag}.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{figv2} \hlkwb{<-} \hlstd{fig_sun.e0} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{UVC}\hlstd{(),} \hlstr{"rect"}\hlstd{,}
                    \hlkwc{ymax}\hlstd{=}\hlnum{0.82}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{UVC}\hlstd{(),} \hlstr{"text"}\hlstd{,}
                    \hlkwc{y}\hlstd{=}\hlnum{0.86}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{UVB}\hlstd{(),} \hlstr{"rect"}\hlstd{,}
                    \hlkwc{ymax}\hlstd{=}\hlnum{0.82}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{UVB}\hlstd{(),} \hlstr{"text"}\hlstd{,}
                    \hlkwc{y}\hlstd{=}\hlnum{0.80}\hlstd{,} \hlkwc{angle}\hlstd{=}\hlnum{90}\hlstd{,} \hlkwc{hjust}\hlstd{=}\hlnum{1}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{UVA}\hlstd{(),} \hlstr{"rect"}\hlstd{,}
                    \hlkwc{ymax}\hlstd{=}\hlnum{0.82}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{UVA}\hlstd{(),} \hlstr{"text"}\hlstd{,}
                    \hlkwc{y}\hlstd{=}\hlnum{0.86}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{Blue}\hlstd{(}\hlstr{"Sellaro"}\hlstd{),} \hlstr{"rect"}\hlstd{,}
                    \hlkwc{ymax}\hlstd{=}\hlnum{0.82}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{Blue}\hlstd{(}\hlstr{"Sellaro"}\hlstd{),} \hlstr{"text"}\hlstd{,}
                    \hlkwc{y}\hlstd{=}\hlnum{0.5}\hlstd{,} \hlkwc{angle}\hlstd{=}\hlnum{90}\hlstd{,} \hlkwc{hjust}\hlstd{=}\hlnum{1}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{Green}\hlstd{(}\hlstr{"Sellaro"}\hlstd{),} \hlstr{"rect"}\hlstd{,}
                    \hlkwc{ymax}\hlstd{=}\hlnum{0.82}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{Green}\hlstd{(}\hlstr{"Sellaro"}\hlstd{),} \hlstr{"text"}\hlstd{,}
                    \hlkwc{y}\hlstd{=}\hlnum{0.50}\hlstd{,} \hlkwc{angle}\hlstd{=}\hlnum{90}\hlstd{,} \hlkwc{hjust}\hlstd{=}\hlnum{1}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{Red}\hlstd{(),} \hlstr{"rect"}\hlstd{,}
                    \hlkwc{ymax}\hlstd{=}\hlnum{0.82}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{Red}\hlstd{(),} \hlstr{"text"}\hlstd{,}
                    \hlkwc{y}\hlstd{=}\hlnum{0.86}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{Red}\hlstd{(}\hlstr{"Smith"}\hlstd{),} \hlstr{"rect"}\hlstd{,}
                    \hlkwc{ymax}\hlstd{=}\hlnum{0.82}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{Red}\hlstd{(}\hlstr{"Smith"}\hlstd{),} \hlstr{"text"}\hlstd{,}
                    \hlkwc{y}\hlstd{=}\hlnum{0.80}\hlstd{,} \hlkwc{angle}\hlstd{=}\hlnum{90}\hlstd{,} \hlkwc{hjust}\hlstd{=}\hlnum{1}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{Far_red}\hlstd{(}\hlstr{"Smith"}\hlstd{),} \hlstr{"rect"}\hlstd{,}
                    \hlkwc{ymax}\hlstd{=}\hlnum{0.82}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{Far_red}\hlstd{(}\hlstr{"Smith"}\hlstd{),} \hlstr{"text"}\hlstd{,}
                    \hlkwc{y}\hlstd{=}\hlnum{0.80}\hlstd{,} \hlkwc{angle}\hlstd{=}\hlnum{90}\hlstd{,} \hlkwc{hjust}\hlstd{=}\hlnum{1}\hlstd{)}

\hlstd{figv2} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-many-annotate-1} 

}



\end{knitrout}

A simple example using \code{geom\_vline}:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{figvl3} \hlkwb{<-} \hlstd{fig_sun.q} \hlopt{+}
  \hlkwd{geom_vline}\hlstd{(}\hlkwc{xintercept}\hlstd{=}\hlkwd{range}\hlstd{(}\hlkwd{PAR}\hlstd{()))}

\hlstd{figvl3}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-par-vline-3-1} 

}



\end{knitrout}

And one where we change some of the aesthetics, and add a label:

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{figvl4} \hlkwb{<-} \hlstd{fig_sun.q} \hlopt{+}
  \hlkwd{geom_vline}\hlstd{(}\hlkwc{xintercept}\hlstd{=}\hlkwd{range}\hlstd{(}\hlkwd{PAR}\hlstd{()),} \hlkwc{linetype}\hlstd{=}\hlstr{"dashed"}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{PAR}\hlstd{(),} \hlstr{"text"}\hlstd{,} \hlkwc{y}\hlstd{=}\hlnum{1.4}\hlstd{,} \hlkwc{size}\hlstd{=}\hlnum{10}\hlstd{,} \hlkwc{colour}\hlstd{=}\hlstr{"black"}\hlstd{)}

\hlstd{figvl4}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-par-vline-4-1} 

}



\end{knitrout}

Now including calculated values in the label, first with a simple example with only PAR.
Because of using expressions to obtain superscripts we need to add \code{parse=TRUE} to the call.
In addition as we are expressing the integral in photon based units, we also change the
type of units used for plotting the spectral irradiance (multiplying by $1 \cdot 10^6$ to
because of the unit multiplier used).

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun} \hlkwb{<-} \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=sun.spct,}
                  \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.q.irrad} \hlopt{*} \hlnum{1e6}\hlstd{))} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{y} \hlstd{= ylab_umol,}
       \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)}

\hlstd{par} \hlkwb{<-} \hlkwd{q_irrad}\hlstd{(sun.spct,} \hlkwd{PAR}\hlstd{())} \hlopt{*} \hlnum{1e6}

\hlstd{fig_sun2} \hlkwb{<-} \hlstd{fig_sun} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{PAR}\hlstd{(),} \hlstr{"rect"}\hlstd{,} \hlkwc{ymax}\hlstd{=}\hlnum{3.5}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{PAR}\hlstd{(),} \hlstr{"text"}\hlstd{,}
                    \hlkwc{label}\hlstd{=}\hlkwd{paste}\hlstd{(}\hlstr{"PAR:~"}\hlstd{,} \hlkwd{signif}\hlstd{(par,}\hlkwc{digits}\hlstd{=}\hlnum{2}\hlstd{),}
                                \hlstr{"*~mu*mol~m^\{-2\}~s^\{-1\}"}\hlstd{,} \hlkwc{sep}\hlstd{=}\hlstr{""}\hlstd{),}
                    \hlkwc{y}\hlstd{=}\hlnum{3.75}\hlstd{,} \hlkwc{colour}\hlstd{=}\hlstr{"black"}\hlstd{,} \hlkwc{parse}\hlstd{=}\hlnum{TRUE}\hlstd{)}

\hlstd{fig_sun2} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-par-annotate-1-1} 

}



\end{knitrout}

A variation of the previous figure shows how to use smaller rectangles for annotation, which yields plots where the spectrum itself is easier to see than when the rectangle overlaps the spectrum. We achieve this by supplying as argument both \code{ymax} and \code{ymin}, and slightly reducing the size of the text with \code{size = 4}.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun} \hlkwb{<-} \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=sun.spct,}
                  \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.q.irrad} \hlopt{*} \hlnum{1e6}\hlstd{))} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{y} \hlstd{= ylab_umol,}
       \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)}

\hlstd{par} \hlkwb{<-} \hlkwd{q_irrad}\hlstd{(sun.spct,} \hlkwd{PAR}\hlstd{())} \hlopt{*} \hlnum{1e6}

\hlstd{fig_sun2} \hlkwb{<-} \hlstd{fig_sun} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{PAR}\hlstd{(),} \hlstr{"rect"}\hlstd{,} \hlkwc{ymax}\hlstd{=}\hlnum{3.95}\hlstd{,} \hlkwc{ymin}\hlstd{=}\hlnum{3.55}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{PAR}\hlstd{(),} \hlstr{"text"}\hlstd{,} \hlkwc{size}\hlstd{=}\hlnum{4}\hlstd{,}
                    \hlkwc{label}\hlstd{=}\hlkwd{paste}\hlstd{(}\hlstr{"PAR:~"}\hlstd{,} \hlkwd{signif}\hlstd{(par,}\hlkwc{digits}\hlstd{=}\hlnum{2}\hlstd{),}
                                \hlstr{"*~mu*mol~m^\{-2\}~s^\{-1\}"}\hlstd{,} \hlkwc{sep}\hlstd{=}\hlstr{""}\hlstd{),}
                    \hlkwc{y}\hlstd{=}\hlnum{3.75}\hlstd{,} \hlkwc{colour}\hlstd{=}\hlstr{"black"}\hlstd{,} \hlkwc{parse}\hlstd{=}\hlnum{TRUE}\hlstd{)}

\hlstd{fig_sun2} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-par-annotate-2-1} 

}



\end{knitrout}


This type of annotations can be also easily done for effective exposures or doses, but in this example as we position the annotations manually, we can use ggplot2's `normal' \code{annotate} function. We use \code{xlim} to restrict the plotted region of the spectrum to the range of wavelengths of interest.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_dsun} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=sun.daily.spct} \hlopt{*} \hlstd{polythene.new.spct,}
         \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad} \hlopt{*} \hlnum{1e-3}\hlstd{))} \hlopt{+} \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{geom_line}\hlstd{(}\hlkwc{data}\hlstd{=sun.daily.spct} \hlopt{*} \hlstd{polyester.new.spct,}
            \hlkwc{colour}\hlstd{=}\hlstr{"red"}\hlstd{)} \hlopt{+}
  \hlkwd{geom_line}\hlstd{(}\hlkwc{data}\hlstd{=sun.daily.spct} \hlopt{*} \hlstd{PC.spct,}
            \hlkwc{colour}\hlstd{=}\hlstr{"blue"}\hlstd{)} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{y} \hlstd{=}
   \hlkwd{expression}\hlstd{(Spectral}\hlopt{~~}\hlstd{energy}\hlopt{~~}\hlstd{exposure}\hlopt{~~}\hlstd{(kJ}\hlopt{~}\hlstd{m}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{2}\hlstd{\}}\hlopt{~}\hlstd{d}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{1}\hlstd{\}}\hlopt{~}\hlstd{nm}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{1}\hlstd{\})),}
       \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)} \hlopt{+} \hlkwd{xlim}\hlstd{(}\hlnum{290}\hlstd{,} \hlnum{425}\hlstd{)} \hlopt{+} \hlkwd{ylim}\hlstd{(}\hlnum{0}\hlstd{,} \hlnum{25}\hlstd{)}

\hlstd{cie.pe} \hlkwb{<-}
  \hlkwd{e_irrad}\hlstd{(sun.daily.spct} \hlopt{*} \hlstd{polythene.new.spct,} \hlkwd{CIE}\hlstd{())} \hlopt{*} \hlnum{1e-3}
\hlstd{cie.ps} \hlkwb{<-}
  \hlkwd{e_irrad}\hlstd{(sun.daily.spct} \hlopt{*} \hlstd{polyester.new.spct,} \hlkwd{CIE}\hlstd{())} \hlopt{*} \hlnum{1e-3}
\hlstd{cie.pc} \hlkwb{<-}
  \hlkwd{e_irrad}\hlstd{(sun.daily.spct} \hlopt{*} \hlstd{PC.spct,} \hlkwd{CIE}\hlstd{())} \hlopt{*} \hlnum{1e-3}
\hlstd{y.pos} \hlkwb{<-} \hlnum{22.5}

\hlstd{fig_dsun2} \hlkwb{<-} \hlstd{fig_dsun} \hlopt{+}
  \hlkwd{annotate}\hlstd{(}\hlstr{"text"}\hlstd{,}
           \hlkwc{label}\hlstd{=}\hlkwd{paste}\hlstd{(}\hlstr{"Polythene~~filter~~CIE:~"}\hlstd{,}
                       \hlkwd{signif}\hlstd{(cie.pe,} \hlkwc{digits}\hlstd{=}\hlnum{3}\hlstd{),}
                       \hlstr{"*~kJ~m^\{-2\}~d^\{-1\}"}\hlstd{,} \hlkwc{sep}\hlstd{=}\hlstr{""}\hlstd{),}
           \hlkwc{y}\hlstd{=y.pos}\hlopt{+}\hlnum{2}\hlstd{,} \hlkwc{x}\hlstd{=}\hlnum{300}\hlstd{,} \hlkwc{hjust}\hlstd{=}\hlnum{0}\hlstd{,} \hlkwc{colour}\hlstd{=}\hlstr{"black"}\hlstd{,}
           \hlkwc{parse}\hlstd{=}\hlnum{TRUE}\hlstd{)} \hlopt{+}
  \hlkwd{annotate}\hlstd{(}\hlstr{"text"}\hlstd{,} \hlkwc{label}\hlstd{=}\hlkwd{paste}\hlstd{(}\hlstr{"Polyester~~filter~~CIE:~"}\hlstd{,}
                               \hlkwd{signif}\hlstd{(cie.ps,} \hlkwc{digits}\hlstd{=}\hlnum{3}\hlstd{),}
                               \hlstr{"*~kJ~m^\{-2\}~d^\{-1\}"}\hlstd{,} \hlkwc{sep}\hlstd{=}\hlstr{""}\hlstd{),}
           \hlkwc{y}\hlstd{=y.pos,} \hlkwc{x}\hlstd{=}\hlnum{300}\hlstd{,}  \hlkwc{hjust}\hlstd{=}\hlnum{0}\hlstd{,}  \hlkwc{colour}\hlstd{=}\hlstr{"red"}\hlstd{,}
           \hlkwc{parse}\hlstd{=}\hlnum{TRUE}\hlstd{)} \hlopt{+}
  \hlkwd{annotate}\hlstd{(}\hlstr{"text"}\hlstd{,} \hlkwc{label}\hlstd{=}\hlkwd{paste}\hlstd{(}\hlstr{"Polycarbonate~~filter~~CIE:~"}\hlstd{,}
                               \hlkwd{signif}\hlstd{(cie.pc,} \hlkwc{digits}\hlstd{=}\hlnum{3}\hlstd{),}
                               \hlstr{"*~kJ~m^\{-2\}~d^\{-1\}"}\hlstd{,} \hlkwc{sep}\hlstd{=}\hlstr{""}\hlstd{),}
           \hlkwc{y}\hlstd{=y.pos}\hlopt{-}\hlnum{2}\hlstd{,} \hlkwc{x}\hlstd{=}\hlnum{300}\hlstd{,} \hlkwc{hjust}\hlstd{=}\hlnum{0}\hlstd{,}  \hlkwc{colour}\hlstd{=}\hlstr{"blue"}\hlstd{,}
           \hlkwc{parse}\hlstd{=}\hlnum{TRUE}\hlstd{)}

\hlstd{fig_dsun2} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-cie-filter-sun-1} 

}



\end{knitrout}

% \section{Task: automating plotting}
%
% <<>>=
% fig_sun.z <-
%   ggplot(data=sun.spct, aes(x=w.length, y=s.e.irrad)) +
%   geom_line()  +
%   labs(
%     y = expression(Spectral~~energy~~irradiance~~(W~m^{-2}~nm^{-1})),
%     x = "Wavelength (nm)")
% fig_sun.z
% @

\section{Task: using colour as data in plots}

The examples in this section use a single spectrum, \code{sun.spct}, but all functions used are methods for \code{generiic.spct} objects, so are equally applicable to the plotting of other spectra like transmittance, reflectance or response ones.

When we want to colour-label individual spectral values, for example, by plotting the individual data points with the colour corresponding to their wavelengths, or fill the area below a plotted spectral curve with colours, we need to first \code{tag} the spectral data set using a waveband definition or a list of waveband definitions. If we just want to add a guide or labels to the plot, we can create new data instead of tagging the spectral data to be plotted. In section \ref{sec:plot:tag} we show code based on tagging spectral data, and in section \ref{sec:plot:guide} the case of using different data for plotting the guide or key is described.

\subsection{Scale definitions}\label{sec:plot:scales}

First we define some new scales for use for plotting with \code{ggplot} when plotting wavelength derived colours. In the future something equivalent may be included in package \code{photobiologygg} as predefined scales. We define two very similar scales, one for colour, and one for fill aesthetics.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{scale_colour_tgspct} \hlkwb{<-}
  \hlkwa{function}\hlstd{(}\hlkwc{...}\hlstd{,}
           \hlkwc{tg.spct}\hlstd{,}
           \hlkwc{labels} \hlstd{=} \hlkwa{NULL}\hlstd{,}
           \hlkwc{guide} \hlstd{=} \hlkwa{NULL}\hlstd{,}
           \hlkwc{na.value}\hlstd{=}\hlnum{NA}\hlstd{) \{}
    \hlstd{spct.tags} \hlkwb{<-} \hlkwd{attr}\hlstd{(tg.spct,} \hlstr{"spct.tags"}\hlstd{,} \hlkwc{exact}\hlstd{=}\hlnum{TRUE}\hlstd{)}
    \hlkwa{if} \hlstd{(}\hlkwd{is.null}\hlstd{(guide))\{}
      \hlkwa{if} \hlstd{(spct.tags}\hlopt{$}\hlstd{wb.num} \hlopt{>} \hlnum{12}\hlstd{) \{}
        \hlstd{guide} \hlkwb{=} \hlstr{"none"}
      \hlstd{\}} \hlkwa{else} \hlstd{\{}
        \hlstd{guide} \hlkwb{=} \hlkwd{guide_legend}\hlstd{(}\hlkwc{title}\hlstd{=}\hlkwa{NULL}\hlstd{)}
      \hlstd{\}}
    \hlstd{\}}
    \hlstd{values} \hlkwb{<-} \hlkwd{as.character}\hlstd{(spct.tags}\hlopt{$}\hlstd{wb.colors)}
    \hlkwa{if} \hlstd{(}\hlkwd{is.null}\hlstd{(labels)) \{}
      \hlstd{labels} \hlkwb{<-} \hlstd{spct.tags}\hlopt{$}\hlstd{wb.names}
    \hlstd{\}}
    \hlstd{ggplot2}\hlopt{:::}\hlkwd{manual_scale}\hlstd{(}\hlstr{"colour"}\hlstd{,}
                           \hlkwc{values} \hlstd{= values,}
                           \hlkwc{labels} \hlstd{= labels,}
                           \hlkwc{guide} \hlstd{= guide,}
                           \hlkwc{na.value} \hlstd{= na.value,}
                           \hlstd{...)}
\hlstd{\}}
\end{alltt}
\end{kframe}
\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{scale_fill_tgspct} \hlkwb{<-}
  \hlkwa{function}\hlstd{(}\hlkwc{...}\hlstd{,}
           \hlkwc{tg.spct}\hlstd{,}
           \hlkwc{labels} \hlstd{=} \hlkwa{NULL}\hlstd{,}
           \hlkwc{guide} \hlstd{=} \hlkwa{NULL}\hlstd{,}
           \hlkwc{na.value}\hlstd{=}\hlnum{NA}\hlstd{) \{}
    \hlstd{spct.tags} \hlkwb{<-} \hlkwd{attr}\hlstd{(tg.spct,} \hlstr{"spct.tags"}\hlstd{,} \hlkwc{exact}\hlstd{=}\hlnum{TRUE}\hlstd{)}
    \hlkwa{if} \hlstd{(}\hlkwd{is.null}\hlstd{(guide))\{}
      \hlkwa{if} \hlstd{(spct.tags}\hlopt{$}\hlstd{wb.num} \hlopt{>} \hlnum{12}\hlstd{) \{}
        \hlstd{guide} \hlkwb{=} \hlstr{"none"}
      \hlstd{\}} \hlkwa{else} \hlstd{\{}
        \hlstd{guide} \hlkwb{=} \hlkwd{guide_legend}\hlstd{(}\hlkwc{title}\hlstd{=}\hlkwa{NULL}\hlstd{)}
      \hlstd{\}}
    \hlstd{\}}
    \hlstd{values} \hlkwb{<-} \hlkwd{as.character}\hlstd{(spct.tags}\hlopt{$}\hlstd{wb.colors)}
    \hlkwa{if} \hlstd{(}\hlkwd{is.null}\hlstd{(labels)) \{}
      \hlstd{labels} \hlkwb{<-} \hlstd{spct.tags}\hlopt{$}\hlstd{wb.names}
    \hlstd{\}}

    \hlstd{ggplot2}\hlopt{:::}\hlkwd{manual_scale}\hlstd{(}\hlstr{"fill"}\hlstd{,}
                           \hlkwc{values} \hlstd{= values,}
                           \hlkwc{labels} \hlstd{= labels,}
                           \hlkwc{guide} \hlstd{= guide,}
                           \hlkwc{na.value} \hlstd{= na.value,}
                           \hlstd{...)}
\hlstd{\}}
\end{alltt}
\end{kframe}
\end{knitrout}

\subsection{Plots using colour for the spectral data}\label{sec:plot:tag}

We start by describing how to tag a spectrum, and then show how to use tagged spectra for plotting data. Tagging consist in adding wavelength-derived colour data and waveband-related data to a spectral object. We start with a very simple example.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{cp.sun.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(sun.spct)}
\hlkwd{tag}\hlstd{(cp.sun.spct)}
\end{alltt}
\end{kframe}
\end{knitrout}

As no waveband information was supplied as input, only wavelength-dependent colour information is added to the spectrum plus a factor \code{wb.f} with only \code{NA} level.

If we instead provide a waveband as input then both wavelength-dependent colour and waveband information are added to the spectral data object.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{uvb.sun.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(sun.spct)}
\hlkwd{tag}\hlstd{(uvb.sun.spct,} \hlkwd{UVB}\hlstd{())}
\hlkwd{levels}\hlstd{(uvb.sun.spct[[}\hlstr{"wb.f"}\hlstd{]])}
\end{alltt}
\begin{verbatim}
## [1] "UVB"
\end{verbatim}
\end{kframe}
\end{knitrout}

The output contains the same variables (columns) but now the factor \code{wb.f} has a level based on the name of the waveband, and a value of \code{NA} outside it.

We can alter the name used for the \code{wb.f} factor levels by using a named list as argument.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{tag}\hlstd{(uvb.sun.spct,} \hlkwd{list}\hlstd{(}\hlstr{'ultraviolet-B'} \hlstd{=} \hlkwd{UVB}\hlstd{()))}
\hlkwd{levels}\hlstd{(uvb.sun.spct[[}\hlstr{"wb.f"}\hlstd{]])}
\end{alltt}
\begin{verbatim}
## [1] "ultraviolet-B"
\end{verbatim}
\end{kframe}
\end{knitrout}

This example also shows, that re-tagging a spectrum replaces the old tagging data with the new one.

If we use a list of wavebands then the tagging is based on all of them, but be aware that the wavelength ranges of the wavebands overlap, the result is undefined.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{plant.sun.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(sun.spct)}
\hlkwd{tag}\hlstd{(plant.sun.spct,} \hlkwd{Plant_bands}\hlstd{())}
\hlkwd{levels}\hlstd{(plant.sun.spct[[}\hlstr{"wb.f"}\hlstd{]])}
\end{alltt}
\begin{verbatim}
## [1] "UVB"   "UVA"   "Blue"  "Green" "R"    
## [6] "FR"
\end{verbatim}
\end{kframe}
\end{knitrout}

Tagging also adds some additional data as an attribute to the spectrum. This data can be retrieved with the base R function \code{attr}.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{attr}\hlstd{(cp.sun.spct,} \hlstr{"spct.tag"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## $time.unit
## [1] "second"
## 
## $wb.key.name
## [1] "Bands"
## 
## $wl.color
## [1] TRUE
## 
## $wb.color
## [1] TRUE
## 
## $wb.num
## [1] 0
## 
## $wb.colors
## [1] NA
## 
## $wb.names
## [1] NA
## 
## $wb.list
## NULL
\end{verbatim}
\begin{alltt}
\hlkwd{attr}\hlstd{(uvb.sun.spct,} \hlstr{"spct.tag"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## $time.unit
## [1] "second"
## 
## $wb.key.name
## [1] "Bands"
## 
## $wl.color
## [1] TRUE
## 
## $wb.color
## [1] TRUE
## 
## $wb.num
## [1] 1
## 
## $wb.colors
## $wb.colors[[1]]
## [1] "#000000"
## 
## 
## $wb.names
## [1] "ultraviolet-B"
## 
## $wb.list
## $wb.list$`ultraviolet-B`
## UVB.ISO 
## low (nm) 280 
## high (nm) 315 
## weighted none
\end{verbatim}
\end{kframe}
\end{knitrout}

We now tag a spectrum for use in our first plot example.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{par.sun.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(sun.spct)}
\hlkwd{tag}\hlstd{(par.sun.spct,} \hlkwd{PAR}\hlstd{())}
\end{alltt}
\end{kframe}
\end{knitrout}

Here we simply use the \code{wb.f} factor that was added as part of the tagging, with the default colour scale of \code{ggplot2}, which results in a palette unrelated to the real colour of the different wavelengths.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.t00} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=par.sun.spct,}
         \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad))} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{geom_point}\hlstd{(}\hlkwd{aes}\hlstd{(}\hlkwc{color}\hlstd{=wb.f))} \hlopt{+}
  \hlkwd{labs}\hlstd{(}
    \hlkwc{y} \hlstd{= ylab_watt,}
    \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)}

\hlstd{fig_sun.t00}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-tag-par-2-1} 

}



\end{knitrout}

We can also use other geoms like \code{geom\_area} in the next chunk, together with, as an example, a grey fill scale from \code{ggplot2}.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.t01} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=par.sun.spct,}
         \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad))} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{geom_area}\hlstd{(}\hlkwc{color}\hlstd{=}\hlnum{NA}\hlstd{,} \hlkwd{aes}\hlstd{(}\hlkwc{fill}\hlstd{=wb.f))} \hlopt{+}
  \hlkwd{scale_fill_grey}\hlstd{(}\hlkwc{na.value}\hlstd{=}\hlnum{NA}\hlstd{)} \hlopt{+}
  \hlkwd{labs}\hlstd{(}
    \hlkwc{y} \hlstd{= ylab_watt,}
    \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)}

\hlstd{fig_sun.t01}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-tag-par-3-1} 

}



\end{knitrout}

The default fill looks too dark and bold, so we change the transparency of the fill by setting \code{fill = 0.3}. The grid in the background becomes slightly visible also in the filled region, facilitating `reading' of the plot and avoiding a to stark contrast between regions, which tends to be disturbing. In later plots we frequently use \code{alpha} to improve how plots look, but we exemplify the effect of changing this aesthetic only here.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.t01} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=par.sun.spct,}
         \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad))} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{geom_area}\hlstd{(}\hlkwc{color}\hlstd{=}\hlnum{NA}\hlstd{,} \hlkwc{alpha}\hlstd{=}\hlnum{0.3}\hlstd{,} \hlkwd{aes}\hlstd{(}\hlkwc{fill}\hlstd{=wb.f))} \hlopt{+}
  \hlkwd{scale_fill_grey}\hlstd{(}\hlkwc{na.value}\hlstd{=}\hlnum{NA}\hlstd{)} \hlopt{+}
  \hlkwd{labs}\hlstd{(}
    \hlkwc{y} \hlstd{= ylab_watt,}
    \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)}

\hlstd{fig_sun.t01}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-tag-par-4-1} 

}



\end{knitrout}

As part of the tagging colour information was also added to the spectral data object\footnote{We may want to increase the number of `observations' in the spectrum by interpolation if there are too few observations for a smooth colour gradient.}. We tag each observation in the solar spectrum with human vision colours as defined by ISO.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{tg.sun.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(sun.spct)}
\hlkwd{tag}\hlstd{(tg.sun.spct,} \hlkwd{VIS_bands}\hlstd{())}
\end{alltt}
\end{kframe}
\end{knitrout}

See section \ref{sec:plot:scales} on page \pageref{sec:plot:scales} for the definition of the colour and fill scales used for tagged spectra. These definitions are needed for most of the plots in the remaining of the present and next sections. These scales retrieve information about the wavebands both from the data itself and from the attribute described above.

Here we plot using colours by waveband---using the colour definitions by ISO---, with symbols filled with colours. The colour data outside the wavebands is set to \code{NA} so those points are not filled.  One can play with the \code{size} of points until ones get the result wanted. The default `shape' used by \code{ggplot2} do not accept a \code{fill} aesthetic, while shape `21' gives circles that can be `filled'.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.t02} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=tg.sun.spct,}
         \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad))} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{scale_fill_tgspct}\hlstd{(}\hlkwc{tg.spct}\hlstd{=tg.sun.spct)} \hlopt{+}
  \hlkwd{geom_point}\hlstd{(}\hlkwd{aes}\hlstd{(}\hlkwc{fill}\hlstd{=wb.f),} \hlkwc{shape}\hlstd{=}\hlnum{21}\hlstd{)}  \hlopt{+}
  \hlkwd{labs}\hlstd{(}
    \hlkwc{y} \hlstd{= ylab_watt,}
    \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)}

\hlstd{fig_sun.t02}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-tag-vis-2-1} 

}



\end{knitrout}

Using \code{geom\_area} we can fill the area under the curve according to the colour of different wavebands, we set the fill only for this geom, so that the \code{NA}s do not affect other plotting. To get a single black curve for the spectrum we use \code{geom\_line}. This approach works as long as wavebands do not share the same value for the color, which means that it is not suitable either when more than one band is outside the visible range, or when using many narrow wavebands.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.t03} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(tg.sun.spct,}
         \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad))} \hlopt{+}
  \hlkwd{scale_fill_tgspct}\hlstd{(}\hlkwc{tg.spct}\hlstd{=tg.sun.spct)} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{geom_area}\hlstd{(}\hlkwd{aes}\hlstd{(}\hlkwc{fill}\hlstd{=wb.f),} \hlkwc{alpha}\hlstd{=}\hlnum{0.75}\hlstd{)} \hlopt{+}
  \hlkwd{labs}\hlstd{(}
    \hlkwc{y} \hlstd{= ylab_watt,}
    \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)}

\hlstd{fig_sun.t03} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-tag-vis-3-1} 

}



\end{knitrout}

In the next example we tag the solar spectrum with colours using the definitions of plant sensory `colours'.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{pl.sun.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(sun.spct)}
\hlkwd{tag}\hlstd{(pl.sun.spct,} \hlkwd{Plant_bands}\hlstd{())}
\end{alltt}
\end{kframe}
\end{knitrout}

Here we plot the wavebands corresponding to plant sensory `colours', using the spectrum we tagged in the previous code chunk.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.pl0} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(pl.sun.spct,}
         \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad))} \hlopt{+}
  \hlkwd{scale_fill_tgspct}\hlstd{(}\hlkwc{tg.spct}\hlstd{=pl.sun.spct)} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{geom_area}\hlstd{(}\hlkwd{aes}\hlstd{(}\hlkwc{fill}\hlstd{=wb.f),} \hlkwc{alpha}\hlstd{=}\hlnum{0.75}\hlstd{)} \hlopt{+}
  \hlkwd{labs}\hlstd{(}
    \hlkwc{y} \hlstd{= ylab_watt,}
    \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)}

\hlstd{fig_sun.pl0} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-tag-plants-2-1} 

}



\end{knitrout}

We can also use the factor \code{wb.f} which has value \code{NA} outside the wavebands, changing the colour used for \code{NA} to \code{NA} which renders it invisible. We can change the labels used for the wavebands in two different way, when plotting by supplying a labels argument to the scale used, or when tagging the spectrum. The second approach is simpler when producing several different plots from the same spectral object, or when wanting to have consistent labels and names used also in derived results such as irradiance.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.pl1} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(pl.sun.spct,}
         \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad))} \hlopt{+}
  \hlkwd{geom_area}\hlstd{(}\hlkwd{aes}\hlstd{(}\hlkwc{fill}\hlstd{=wb.f))} \hlopt{+}
  \hlkwd{scale_fill_grey}\hlstd{(}\hlkwc{na.value}\hlstd{=}\hlnum{NA}\hlstd{,} \hlkwc{name}\hlstd{=}\hlstr{""}\hlstd{,}
                  \hlkwc{labels}\hlstd{=}\hlkwd{c}\hlstd{(}\hlstr{"UVB"}\hlstd{,} \hlstr{"UVA"}\hlstd{,} \hlstr{"Blue"}\hlstd{,}
                           \hlstr{"Green"}\hlstd{,} \hlstr{"Red"}\hlstd{,} \hlstr{"Far red"}\hlstd{))} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{labs}\hlstd{(}
    \hlkwc{y} \hlstd{= ylab_watt,}
    \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)}

\hlstd{fig_sun.pl1} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-tag-plants-3-1} 

}



\end{knitrout}

When using a factor we can play with the scale definitions and represent the wavebands in any way we may want. For example we can use \code{split\_bands} to split a waveband or spectrum into many adjacent narrow bands and get an almost continuous gradient, but we need to get around the problem of repeated colours by using the factor and redefining the scale.

When an spectrum has very few observations we can `fake' a longer spectrum by interpolation as a way of getting a more even fill. The example below is not run, in later examples we just use the example spectral data as is.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{interpolate_spct}\hlstd{(sun.spct,} \hlkwc{length.out}\hlstd{=}\hlnum{800}\hlstd{)}
\end{alltt}
\end{kframe}
\end{knitrout}

We tag the VIS region of the spectrum with 150 narrow wavebands. As `hinges' are inserted, there is no gap, and usually there is no need to increase the length of the spectrum by interpolation. If needed one could try something
like. However, the longer spectrum should not be used for statistical calculations, not even plotting using \code{geom\_smooth}.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{splt.sun.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(sun.spct)}
\hlkwd{tag}\hlstd{(splt.sun.spct,} \hlkwd{split_bands}\hlstd{(}\hlkwd{VIS}\hlstd{(),} \hlkwc{length.out}\hlstd{=}\hlnum{150}\hlstd{))}
\end{alltt}
\end{kframe}
\end{knitrout}

In the code above, we made a copy of \code{sun.spct} because being part of the package, it is write protected, and \code{tag} works by modifying its argument.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.splt0} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(splt.sun.spct,}
         \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad))} \hlopt{+}
  \hlkwd{scale_fill_tgspct}\hlstd{(}\hlkwc{tg.spct}\hlstd{=splt.sun.spct)} \hlopt{+}
  \hlkwd{geom_area}\hlstd{(}\hlkwd{aes}\hlstd{(}\hlkwc{fill}\hlstd{=wb.f),} \hlkwc{alpha}\hlstd{=}\hlnum{0.75}\hlstd{)} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{labs}\hlstd{(}
    \hlkwc{y} \hlstd{= ylab_watt,}
    \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)}

\hlstd{fig_sun.splt0} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-split-VIS-2-1} 

}



\end{knitrout}

In this other example we tag the whole spectrum, dividing it into 200 wavebands.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{splt1.sun.spct} \hlkwb{<-} \hlkwd{copy}\hlstd{(sun.spct)}
\hlcom{# splt1.sun.spct <- interpolate_spct(splt1.sun.spct, length.out=1000)}
\hlkwd{tag}\hlstd{(splt1.sun.spct,} \hlkwd{split_bands}\hlstd{(sun.spct,} \hlkwc{length.out}\hlstd{=}\hlnum{200}\hlstd{))}
\end{alltt}
\end{kframe}
\end{knitrout}

We use \code{geom\_area} and \code{fill}, and colour the area under the curve. This does not work with \code{geom\_line} because there would not be anything to fill, here we use \code{geom\_area} instead.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.splt1} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(splt1.sun.spct,}
         \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad))} \hlopt{+}
  \hlkwd{scale_fill_tgspct}\hlstd{(}\hlkwc{tg.spct}\hlstd{=splt1.sun.spct)} \hlopt{+}
  \hlkwd{geom_area}\hlstd{(}\hlkwd{aes}\hlstd{(}\hlkwc{fill}\hlstd{=wb.f),} \hlkwc{alpha}\hlstd{=}\hlnum{0.75}\hlstd{)} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{labs}\hlstd{(}
    \hlkwc{y} \hlstd{= ylab_watt,}
    \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)}

\hlstd{fig_sun.splt1} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-split-all-2-1} 

}



\end{knitrout}

The next example uses \code{geom\_point} and \code{colour} to color the data points according the waveband they are included in.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.tg1} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(tg.sun.spct,}
         \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad))} \hlopt{+}
  \hlkwd{scale_colour_tgspct}\hlstd{(}\hlkwc{tg.spct}\hlstd{=tg.sun.spct)} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{geom_point}\hlstd{(}\hlkwd{aes}\hlstd{(}\hlkwc{colour}\hlstd{=wb.f))} \hlopt{+}
  \hlkwd{labs}\hlstd{(}
    \hlkwc{y} \hlstd{= ylab_watt,}
    \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)}

\hlstd{fig_sun.tg1} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-split-all-4-1} 

}



\end{knitrout}

When plotting points, rather than an area we may, instead of using colours from wavebands, want to plot the colour calculated for each individual wavelength value, which \code{tag} adds to the spectrum, whether a waveband definition is supplied or not. In
this case we need to use \code{scale\_color\_identity}.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.tg2} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=tg.sun.spct,}
         \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad))} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{scale_color_identity}\hlstd{()} \hlopt{+}
  \hlkwd{geom_point}\hlstd{(}\hlkwd{aes}\hlstd{(}\hlkwc{color}\hlstd{=wl.color))}  \hlopt{+}
  \hlkwd{labs}\hlstd{(}
    \hlkwc{y} \hlstd{= ylab_watt,}
    \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)}

\hlstd{fig_sun.tg2}  \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-split-all-5-1} 

}



\end{knitrout}

Other possibilities are for example, using one of the symbols that can be filled, and then for example for symbols with a black border and a colour matching its wavelength as a fill aesthetic. It is also possible to use \code{alpha} with points.

\subsection{Plots using waveband definitions}\label{sec:plot:guide}

In the previous section we showed how tagging spectral data can be used to add colour information that can be used when plotting. In contrast, in the present section we create new `fake' spectral data starting from waveband definitions that then we plot as `annotations'. We show different types of annotations based on plotting with different geoms. We show the use of \code{geom\_rect}, \code{geom\_text}, \code{geom\_vline}, and \code{geom\_segment}, that we consider the most useful geometries in this context.

We use three different functions from package \code{photobiology} to generate the data to be plotted from lists of waveband definitions. We use mainly pre-defined wavebands, but user defined wavebands can be used as well. We start by showing the output of these functions, starting with \code{wb2spct} the simplest one.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{wb2spct}\hlstd{(}\hlkwd{PAR}\hlstd{())}
\hlkwd{wb2spct}\hlstd{(}\hlkwd{Plant_bands}\hlstd{())}
\end{alltt}
\end{kframe}
\end{knitrout}

Function \code{wb2tagged\_spct} returns the same `spectrum', but tagged with the same wavebands as used to create the spectral data, and you will also notice that a `hinge' has been added, which is redundant in the case of a single waveband, but needed in the case of wavebands sharing a limit.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{wb2tagged_spct}\hlstd{(}\hlkwd{PAR}\hlstd{())}
\hlkwd{wb2tagged_spct}\hlstd{(}\hlkwd{Plant_bands}\hlstd{())}
\end{alltt}
\end{kframe}
\end{knitrout}

The third function, \code{wb2rect\_spct} is what we use in most examples. It generates data that make it easier to plot rectangles with \code{geom\_rect} as we will see in later examples.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{PAR}\hlstd{())}
\hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{Plant_bands}\hlstd{())}
\end{alltt}
\end{kframe}
\end{knitrout}

In this case instead of two rows per waveband, we obtain only one row per waveband, with a \code{w.length} value corresponding to its midpoint but with two additional columns giving the low and high wavelength limits.

As we saw earlier for tagged spectra, additional data is stored in an attribute.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{attr}\hlstd{(}\hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{PAR}\hlstd{()),} \hlstr{"spct.tags"}\hlstd{)}
\end{alltt}
\begin{verbatim}
## $time.unit
## [1] "none"
## 
## $wb.key.name
## [1] "Bands"
## 
## $wl.color
## [1] TRUE
## 
## $wb.color
## [1] TRUE
## 
## $wb.num
## [1] 1
## 
## $wb.colors
## $wb.colors[[1]]
##   PAR.CMF 
## "#735B57" 
## 
## 
## $wb.names
## [1] "PAR"
## 
## $wb.list
## $wb.list[[1]]
## PAR 
## low (nm) 400 
## high (nm) 700 
## weighted none
\end{verbatim}
\end{kframe}
\end{knitrout}

The first plot examples show how to add a colour bar as key. We create new data for use in what is closer to the concept of annotation that to plotting. In most of the examples below we use waveband definitions to create tagged spectral data for use in plotting the guide using \code{geom\_rect}. We present three cases: an almost continuous colour reference guide, a reference guide for colours perceived by plants and one for ISO colour definitions. We also add labels to the bar with \code{geom\_text} and show some examples of how to change the color of the line enclosing the rectangles and of text labels. Finally we show how to use \code{fill} and \code{alpha} to adjust how the guides look. Later on we show some examples using other geoms and also examples combining the use of tagged spectra as described in the previous section with the `annotations' described here.

First we create a simple line plot of the solar spectrum, that we will use as a basis for most of the examples below.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_sun.z0} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=sun.spct,}
         \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad))} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{labs}\hlstd{(}
    \hlkwc{y} \hlstd{= ylab_watt,}
    \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)}

\hlstd{fig_sun.z0}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-plain-1} 

}



\end{knitrout}


We now add to the plot created above a nearly continuous colour bar for the whole spectrum. To obtain an almost continuous colour scale we use a list of 200 wavebands. We need to specify \code{color = NA} to prevent the line enclosing each of the 200 rectangles from being plotted. We position the bar at the top because we think that it looks best, but by changing the values supplied to \code{ymax} and \code{ymin} move the bar vertically and also change its width.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{wl.guide.spct} \hlkwb{<-}
  \hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{split_bands}\hlstd{(sun.spct,}
                           \hlkwc{length.out}\hlstd{=}\hlnum{200}\hlstd{))}

\hlstd{fig_sun.z2} \hlkwb{<-} \hlstd{fig_sun.z0} \hlopt{+}
  \hlkwd{geom_rect}\hlstd{(}\hlkwc{data}\hlstd{=wl.guide.spct,}
            \hlkwd{aes}\hlstd{(}\hlkwc{xmin} \hlstd{= wl.low,} \hlkwc{xmax} \hlstd{= wl.high,}
                \hlkwc{ymin} \hlstd{= y} \hlopt{+} \hlnum{0.85}\hlstd{,} \hlkwc{ymax} \hlstd{= y} \hlopt{+} \hlnum{0.9}\hlstd{,}
                \hlkwc{y} \hlstd{=} \hlnum{0}\hlstd{,} \hlkwc{fill}\hlstd{=wb.f),}
            \hlkwc{color} \hlstd{=} \hlnum{NA}\hlstd{)} \hlopt{+}
  \hlkwd{scale_fill_tgspct}\hlstd{(}\hlkwc{tg.spct}\hlstd{=wl.guide.spct)}

\hlstd{fig_sun.z2}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-wl-all-guide-1} 

}



\end{knitrout}

This second example differs very little from the previous one, but by using a waveband definition instead of a spectrum as argument to \code{split\_bands}, we restrict the region covered by the colour fill to that of the waveband. In fax a vector of length two, or any object for which a \code{range} method is available can be used as input to this function.


\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{wl.guide.spct} \hlkwb{<-} \hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{split_bands}\hlstd{(}\hlkwd{VIS}\hlstd{(),} \hlkwc{length.out}\hlstd{=}\hlnum{200}\hlstd{))}

\hlstd{fig_sun.z1} \hlkwb{<-} \hlstd{fig_sun.z0} \hlopt{+}
  \hlkwd{geom_rect}\hlstd{(}\hlkwc{data}\hlstd{=wl.guide.spct,}
            \hlkwd{aes}\hlstd{(}\hlkwc{xmin} \hlstd{= wl.low,} \hlkwc{xmax} \hlstd{= wl.high,}
                \hlkwc{ymin} \hlstd{= y} \hlopt{+} \hlnum{0.85}\hlstd{,} \hlkwc{ymax} \hlstd{= y} \hlopt{+} \hlnum{0.9}\hlstd{,}
                \hlkwc{y} \hlstd{=} \hlnum{0}\hlstd{,} \hlkwc{fill}\hlstd{=wb.f),}
            \hlkwc{color} \hlstd{=} \hlnum{NA}\hlstd{)} \hlopt{+}
  \hlkwd{scale_fill_tgspct}\hlstd{(}\hlkwc{tg.spct}\hlstd{=wl.guide.spct)}

\hlstd{fig_sun.z1}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-wl-vis-guide-1} 

}



\end{knitrout}

In the examples above we have used a list of 200 waveband definitions created with \code{split\_bands}. If we instead use a shorter list of definitions, we get a plot where the wavebands are clearly distinguished. By default if the list of wavebands is short, a key or `guide' is also added to the plot.

To demonstrate this we replace in the previous example, the previous tagged spectrum with one based on ISO colours. We need to do this replacement in the calls to both \code{geom\_rect} and \code{scale\_fill\_tgspct}.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{iso.guide.spct} \hlkwb{<-} \hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{VIS_bands}\hlstd{())}

\hlstd{fig_sun.z3} \hlkwb{<-} \hlstd{fig_sun.z0} \hlopt{+}
  \hlkwd{geom_rect}\hlstd{(}\hlkwc{data}\hlstd{=iso.guide.spct,}
            \hlkwd{aes}\hlstd{(}\hlkwc{xmin} \hlstd{= wl.low,} \hlkwc{xmax} \hlstd{= wl.high,}
                \hlkwc{ymin} \hlstd{= y} \hlopt{+} \hlnum{0.85}\hlstd{,} \hlkwc{ymax} \hlstd{= y} \hlopt{+} \hlnum{0.9}\hlstd{,}
                \hlkwc{y} \hlstd{=} \hlnum{0}\hlstd{,} \hlkwc{fill}\hlstd{=wb.f),}
            \hlkwc{color} \hlstd{=} \hlnum{NA}\hlstd{)} \hlopt{+}
  \hlkwd{scale_fill_tgspct}\hlstd{(}\hlkwc{tg.spct}\hlstd{=iso.guide.spct)}

\hlstd{fig_sun.z3}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-iso-guide-1} 

}



\end{knitrout}

We use as an example plant's sensory colours, to show the case when the wavebands in the list are not contiguous.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{plant.guide.spct} \hlkwb{<-} \hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{Plant_bands}\hlstd{())}

\hlstd{fig_sun.z4} \hlkwb{<-} \hlstd{fig_sun.z0} \hlopt{+}
  \hlkwd{geom_rect}\hlstd{(}\hlkwc{data}\hlstd{=plant.guide.spct,}
            \hlkwd{aes}\hlstd{(}\hlkwc{xmin} \hlstd{= wl.low,} \hlkwc{xmax} \hlstd{= wl.high,}
                \hlkwc{ymin} \hlstd{= y} \hlopt{+} \hlnum{0.85}\hlstd{,} \hlkwc{ymax} \hlstd{= y} \hlopt{+} \hlnum{0.9}\hlstd{,}
                \hlkwc{y} \hlstd{=} \hlnum{0}\hlstd{,} \hlkwc{fill}\hlstd{=wb.f),}
            \hlkwc{color} \hlstd{=} \hlstr{"white"}\hlstd{)} \hlopt{+}
  \hlkwd{scale_fill_tgspct}\hlstd{(}\hlkwc{tg.spct}\hlstd{=plant.guide.spct)}

\hlstd{fig_sun.z4}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-plant-guide-1-1} 

}



\end{knitrout}

We add text labels on top of the guide, and make the rectangle borders and text white to make the separation between the different `invisible' wavebands clear. As we are adding labels, the `guide' or key becomes redundant and we remove it by adding \code{guide="none"} to the fill scale.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{plant.guide.spct} \hlkwb{<-} \hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{Plant_bands}\hlstd{())}

\hlstd{fig_sun.z5} \hlkwb{<-} \hlstd{fig_sun.z0} \hlopt{+}
  \hlkwd{geom_rect}\hlstd{(}\hlkwc{data}\hlstd{=plant.guide.spct,}
            \hlkwd{aes}\hlstd{(}\hlkwc{xmin} \hlstd{= wl.low,} \hlkwc{xmax} \hlstd{= wl.high,}
                \hlkwc{ymin} \hlstd{= y} \hlopt{+} \hlnum{0.85}\hlstd{,} \hlkwc{ymax} \hlstd{= y} \hlopt{+} \hlnum{0.9}\hlstd{,}
                \hlkwc{y} \hlstd{=} \hlnum{0}\hlstd{,} \hlkwc{fill}\hlstd{=wb.f),}
            \hlkwc{color} \hlstd{=} \hlstr{"white"}\hlstd{)} \hlopt{+}
  \hlkwd{geom_text}\hlstd{(}\hlkwc{data}\hlstd{=plant.guide.spct,}
            \hlkwd{aes}\hlstd{(}\hlkwc{y} \hlstd{= y} \hlopt{+} \hlnum{0.875}\hlstd{,} \hlkwc{label} \hlstd{=} \hlkwd{as.character}\hlstd{(wb.f)),}
            \hlkwc{color} \hlstd{=} \hlstr{"white"}\hlstd{,} \hlkwc{size}\hlstd{=}\hlnum{4}\hlstd{)} \hlopt{+}
  \hlkwd{scale_fill_tgspct}\hlstd{(}\hlkwc{tg.spct}\hlstd{=plant.guide.spct,} \hlkwc{guide}\hlstd{=}\hlstr{"none"}\hlstd{)}

\hlstd{fig_sun.z5}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-plant-guide-2-1} 

}



\end{knitrout}

Here we add \code{alpha} or transparency to make the colours paler, and use black text and lines.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{plant.guide.spct} \hlkwb{<-} \hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{Plant_bands}\hlstd{())}

\hlstd{fig_sun.z6} \hlkwb{<-} \hlstd{fig_sun.z0} \hlopt{+}
  \hlkwd{geom_rect}\hlstd{(}\hlkwc{data}\hlstd{=plant.guide.spct,}
       \hlkwd{aes}\hlstd{(}\hlkwc{xmin} \hlstd{= wl.low,} \hlkwc{xmax} \hlstd{= wl.high,}
           \hlkwc{ymin} \hlstd{= y} \hlopt{+} \hlnum{0.85}\hlstd{,} \hlkwc{ymax} \hlstd{= y} \hlopt{+} \hlnum{0.9}\hlstd{,}
           \hlkwc{y} \hlstd{=} \hlnum{0}\hlstd{,} \hlkwc{fill}\hlstd{=wb.f),}
       \hlkwc{color} \hlstd{=} \hlstr{"black"}\hlstd{,} \hlkwc{alpha}\hlstd{=}\hlnum{0.4}\hlstd{)} \hlopt{+}
  \hlkwd{geom_text}\hlstd{(}\hlkwc{data}\hlstd{=plant.guide.spct,}
       \hlkwd{aes}\hlstd{(}\hlkwc{y} \hlstd{= y} \hlopt{+} \hlnum{0.875}\hlstd{,} \hlkwc{label} \hlstd{=} \hlkwd{as.character}\hlstd{(wb.f)),}
       \hlkwc{color} \hlstd{=} \hlstr{"black"}\hlstd{,} \hlkwc{size}\hlstd{=}\hlnum{4}\hlstd{)} \hlopt{+}
  \hlkwd{scale_fill_tgspct}\hlstd{(}\hlkwc{tg.spct}\hlstd{=plant.guide.spct,} \hlkwc{guide}\hlstd{=}\hlstr{"none"}\hlstd{)}

\hlstd{fig_sun.z6} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-plant-guide-3-1} 

}



\end{knitrout}

We change the guide so that all rectangles are filled with the same shade of grey by moving \code{fill} out of \code{aes} and setting it to a constant.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{plant.guide.spct} \hlkwb{<-} \hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{Plant_bands}\hlstd{())}

\hlstd{fig_sun.z7} \hlkwb{<-} \hlstd{fig_sun.z0} \hlopt{+}
  \hlkwd{geom_rect}\hlstd{(}\hlkwc{data}\hlstd{=plant.guide.spct,}
            \hlkwd{aes}\hlstd{(}\hlkwc{xmin} \hlstd{= wl.low,} \hlkwc{xmax} \hlstd{= wl.high,}
                \hlkwc{ymin} \hlstd{= y} \hlopt{+} \hlnum{0.85}\hlstd{,} \hlkwc{ymax} \hlstd{= y} \hlopt{+} \hlnum{0.9}\hlstd{,}
                \hlkwc{y} \hlstd{=} \hlnum{0}\hlstd{),}
            \hlkwc{color} \hlstd{=} \hlstr{"black"}\hlstd{,} \hlkwc{fill}\hlstd{=}\hlstr{"grey90"}\hlstd{)} \hlopt{+}
  \hlkwd{geom_text}\hlstd{(}\hlkwc{data}\hlstd{=plant.guide.spct,}
            \hlkwd{aes}\hlstd{(}\hlkwc{y} \hlstd{= y} \hlopt{+} \hlnum{0.875}\hlstd{,} \hlkwc{label} \hlstd{=} \hlkwd{as.character}\hlstd{(wb.f)),}
            \hlkwc{color} \hlstd{=} \hlstr{"black"}\hlstd{,} \hlkwc{size}\hlstd{=}\hlnum{4}\hlstd{)}

\hlstd{fig_sun.z7} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-plant-guide-4-1} 

}



\end{knitrout}

We can obtain annotations similar to those in \ref{sec:plot:ann:wban} in page \pageref{sec:plot:ann:wban} created with \code{annotate\_waveband} using geoms.\label{chunk:plot:ann:tag}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{plant.guide.spct} \hlkwb{<-} \hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{Plant_bands}\hlstd{())}

\hlstd{fig_sun.z8} \hlkwb{<-} \hlstd{fig_sun.z0} \hlopt{+}
  \hlkwd{geom_rect}\hlstd{(}\hlkwc{data}\hlstd{=plant.guide.spct,}
       \hlkwd{aes}\hlstd{(}\hlkwc{xmin} \hlstd{= wl.low,} \hlkwc{xmax} \hlstd{= wl.high,}
           \hlkwc{ymin} \hlstd{= y,} \hlkwc{ymax} \hlstd{= y} \hlopt{+} \hlnum{0.85}\hlstd{,}
           \hlkwc{y} \hlstd{=} \hlnum{0}\hlstd{,} \hlkwc{fill}\hlstd{=wb.f),}
       \hlkwc{color} \hlstd{=} \hlstr{"white"}\hlstd{,} \hlkwc{alpha}\hlstd{=}\hlnum{0.5}\hlstd{)} \hlopt{+}
  \hlkwd{geom_text}\hlstd{(}\hlkwc{data}\hlstd{=plant.guide.spct,}
       \hlkwd{aes}\hlstd{(}\hlkwc{y} \hlstd{= y} \hlopt{+} \hlnum{0.88}\hlstd{,} \hlkwc{label} \hlstd{=} \hlkwd{as.character}\hlstd{(wb.f)),}
       \hlkwc{color} \hlstd{=} \hlstr{"black"}\hlstd{)} \hlopt{+}
  \hlkwd{scale_fill_tgspct}\hlstd{(}\hlkwc{tg.spct}\hlstd{=plant.guide.spct,} \hlkwc{guide}\hlstd{=}\hlstr{"none"}\hlstd{)}

\hlstd{fig_sun.z8} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-plant-guide-5-1} 

}



\end{knitrout}

The example above can be improved by changing the order in which the geoms are added. In the plot above we can see that the rectangles are plotted on top of the line for the spectral irradiance. By changing the order we obtain a better plot.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{plant.guide.spct} \hlkwb{<-} \hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{Plant_bands}\hlstd{())}

\hlstd{fig_sun.z8a} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=sun.spct,}
         \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad))} \hlopt{+}
  \hlkwd{geom_rect}\hlstd{(}\hlkwc{data}\hlstd{=plant.guide.spct,}
       \hlkwd{aes}\hlstd{(}\hlkwc{xmin} \hlstd{= wl.low,} \hlkwc{xmax} \hlstd{= wl.high,}
           \hlkwc{ymin} \hlstd{= y,} \hlkwc{ymax} \hlstd{= y} \hlopt{+} \hlnum{0.85}\hlstd{,}
           \hlkwc{y} \hlstd{=} \hlnum{0}\hlstd{,} \hlkwc{fill}\hlstd{=wb.f),}
       \hlkwc{color} \hlstd{=} \hlstr{"white"}\hlstd{,} \hlkwc{alpha}\hlstd{=}\hlnum{0.5}\hlstd{)} \hlopt{+}
  \hlkwd{geom_text}\hlstd{(}\hlkwc{data}\hlstd{=plant.guide.spct,}
       \hlkwd{aes}\hlstd{(}\hlkwc{y} \hlstd{= y} \hlopt{+} \hlnum{0.88}\hlstd{,} \hlkwc{label} \hlstd{=} \hlkwd{as.character}\hlstd{(wb.f)),}
       \hlkwc{color} \hlstd{=} \hlstr{"black"}\hlstd{)} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{scale_fill_tgspct}\hlstd{(}\hlkwc{tg.spct}\hlstd{=plant.guide.spct,} \hlkwc{guide}\hlstd{=}\hlstr{"none"}\hlstd{)} \hlopt{+}
  \hlkwd{labs}\hlstd{(}
    \hlkwc{y} \hlstd{= ylab_watt,}
    \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)}

\hlstd{fig_sun.z8a} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-plant-guide-5a-1} 

}



\end{knitrout}

In the examples above we used predefined lists of wavebands, but one can, of course, use any list of waveband definitions, for example explicitly created with \code{list} and \code{new\_waveband}, or \code{list} and any combination of user-defined and predefined wavebands. Even single waveband definitions are allowed.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{par.guide.spct} \hlkwb{<-} \hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{PAR}\hlstd{())}

\hlstd{fig_sun.z9} \hlkwb{<-} \hlstd{fig_sun.z0} \hlopt{+}
  \hlkwd{geom_rect}\hlstd{(}\hlkwc{data}\hlstd{=par.guide.spct,}
            \hlkwd{aes}\hlstd{(}\hlkwc{xmin} \hlstd{= wl.low,} \hlkwc{xmax} \hlstd{= wl.high,}
                \hlkwc{ymin} \hlstd{= y} \hlopt{-} \hlnum{0.1}\hlstd{,} \hlkwc{ymax} \hlstd{= y,}
                \hlkwc{y} \hlstd{=} \hlnum{0}\hlstd{),}
            \hlkwc{color} \hlstd{=} \hlstr{"black"}\hlstd{,} \hlkwc{fill}\hlstd{=}\hlstr{"grey90"}\hlstd{)} \hlopt{+}
  \hlkwd{geom_text}\hlstd{(}\hlkwc{data}\hlstd{=par.guide.spct,}
            \hlkwd{aes}\hlstd{(}\hlkwc{y} \hlstd{= y} \hlopt{-} \hlnum{0.05}\hlstd{,} \hlkwc{label} \hlstd{=} \hlkwd{as.character}\hlstd{(wb.f)),}
            \hlkwc{color} \hlstd{=} \hlstr{"black"}\hlstd{)}

\hlstd{fig_sun.z9} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-par-guide-1-1} 

}



\end{knitrout}

We can also use \code{geom\_segment} to draw lines, including arrows. In this example we also set a different font \code{family} and label text. We can replace the label text which is by default obtained from the waveband definition by assigning a name to the waveband as member of the list. We use single quotes so that the long name containing space characters is accepted by \code{list}.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{par.guide1.spct} \hlkwb{<-}
  \hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{list}\hlstd{(}\hlstr{'Photosynthetically active radiation'} \hlstd{=} \hlkwd{PAR}\hlstd{()))}

\hlstd{fig_sun.z10} \hlkwb{<-} \hlstd{fig_sun.z0} \hlopt{+}
  \hlkwd{geom_segment}\hlstd{(}\hlkwc{data}\hlstd{=par.guide1.spct,}
       \hlkwd{aes}\hlstd{(}\hlkwc{x} \hlstd{= wl.low,} \hlkwc{xend} \hlstd{= wl.high,}
           \hlkwc{y} \hlstd{= y,} \hlkwc{yend} \hlstd{= y),}
       \hlkwc{size} \hlstd{=} \hlnum{1.5}\hlstd{,} \hlkwc{color} \hlstd{=} \hlstr{"black"}\hlstd{)} \hlopt{+}
  \hlkwd{geom_text}\hlstd{(}\hlkwc{data}\hlstd{=par.guide1.spct,}
       \hlkwd{aes}\hlstd{(}\hlkwc{y} \hlstd{= y} \hlopt{+} \hlnum{0.05}\hlstd{,} \hlkwc{label} \hlstd{=} \hlkwd{as.character}\hlstd{(wb.f)),}
       \hlkwc{color} \hlstd{=} \hlstr{"black"}\hlstd{,} \hlkwc{family}\hlstd{=}\hlstr{"serif"}\hlstd{)}

\hlstd{fig_sun.z10} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-par-guide-2-1} 

}



\end{knitrout}

In this section we have used until now function \code{wb2rect\_spct} to create `spectral' annotation data from waveband definitions. Two other functions are available, that are needed or easier to use in some cases. One such case is when we have a list of wavebands and we would like to mark their boundaries with vertical lines. How to do this with \code{annotate} and \code{range} was show earlier in this chapter, but this can become tedious when we have several wavebands. Here we show an alternative approach.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{plant.boundaries.spct} \hlkwb{<-} \hlkwd{wb2spct}\hlstd{(}\hlkwd{Plant_bands}\hlstd{())}
\hlstd{plant.guide.spct} \hlkwb{<-} \hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{Plant_bands}\hlstd{())}

\hlstd{fig_sun.z11} \hlkwb{<-} \hlstd{fig_sun.z0} \hlopt{+}
  \hlkwd{geom_vline}\hlstd{(}\hlkwc{data}\hlstd{=plant.boundaries.spct,}
             \hlkwd{aes}\hlstd{(}\hlkwc{xintercept} \hlstd{= w.length),}
             \hlkwc{linetype} \hlstd{=} \hlstr{"dotted"}\hlstd{)} \hlopt{+}
  \hlkwd{geom_text}\hlstd{(}\hlkwc{data}\hlstd{=plant.guide.spct,}
       \hlkwd{aes}\hlstd{(}\hlkwc{y} \hlstd{= y} \hlopt{+} \hlnum{0.88}\hlstd{,} \hlkwc{label} \hlstd{=} \hlkwd{as.character}\hlstd{(wb.f)),}
       \hlkwc{color} \hlstd{=} \hlstr{"black"}\hlstd{)}

\hlstd{fig_sun.z11} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-plant-guide-6-1} 

}



\end{knitrout}

Function \code{wb2tagged\_spct} returns the same data as \code{wb2spct} but `tagged'. As shown in the next code chunk, tagging allows us to use waveband-dependent colours to the vertical lines.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{plant.boundaries.spct} \hlkwb{<-} \hlkwd{wb2tagged_spct}\hlstd{(}\hlkwd{Plant_bands}\hlstd{())}
\hlstd{plant.guide.spct} \hlkwb{<-} \hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{Plant_bands}\hlstd{())}

\hlstd{fig_sun.z12} \hlkwb{<-} \hlstd{fig_sun.z0} \hlopt{+}
  \hlkwd{geom_vline}\hlstd{(}\hlkwc{data}\hlstd{=plant.boundaries.spct,}
             \hlkwd{aes}\hlstd{(}\hlkwc{xintercept} \hlstd{= w.length,} \hlkwc{color}\hlstd{=wb.f),}
             \hlkwc{size}\hlstd{=}\hlnum{1}\hlstd{,} \hlkwc{linetype}\hlstd{=}\hlstr{"dashed"}\hlstd{)} \hlopt{+}
  \hlkwd{geom_text}\hlstd{(}\hlkwc{data}\hlstd{=plant.guide.spct,}
       \hlkwd{aes}\hlstd{(}\hlkwc{y} \hlstd{= y} \hlopt{+} \hlnum{0.88}\hlstd{,} \hlkwc{label} \hlstd{=} \hlkwd{as.character}\hlstd{(wb.f),} \hlkwc{colour}\hlstd{=wb.f),}
       \hlkwc{size}\hlstd{=}\hlnum{4}\hlstd{)} \hlopt{+}
  \hlkwd{scale_colour_tgspct}\hlstd{(}\hlkwc{tg.spct}\hlstd{=plant.guide.spct,} \hlkwc{guide}\hlstd{=}\hlstr{"none"}\hlstd{)}

\hlstd{fig_sun.z12} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-plant-guide-7-1} 

}



\end{knitrout}

Of course it is possible to combine tagged data spectra and tagged spectra created from wavebands. The tagging is consistent, so, as demonstrated in the next figure, the same aesthetic `link' works for both spectra. In this case the fill scale and the setting of fill to \code{wb.f} work accross different `data' and yield a consistent look. This figure also shows that when assigning a constant to an aesthetic, it is possible to use a vector, which in the present example, saves us some work compared to adding a column to the data and using an identity scale. Contrary to earleir examples where we have added layers to a previously saved plot, here we show the whole code needed to build the figure.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{my.sun.spct} \hlkwb{<-} \hlstd{sun.daily.spct}
\hlkwd{tag}\hlstd{(my.sun.spct,} \hlkwd{list}\hlstd{(}\hlkwd{UVB}\hlstd{(),} \hlkwd{UVA}\hlstd{()))}
\hlstd{annotation.spct} \hlkwb{<-} \hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{list}\hlstd{(}\hlkwd{UVB}\hlstd{(),} \hlkwd{UVA}\hlstd{()))}
\hlstd{fig_sun.uv1} \hlkwb{<-} \hlkwd{ggplot}\hlstd{(my.sun.spct,}
                      \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,}
                          \hlkwc{y}\hlstd{=s.e.irrad} \hlopt{*} \hlnum{1e-3}\hlstd{,}
                          \hlkwc{fill}\hlstd{=wb.f))} \hlopt{+}
  \hlkwd{scale_fill_grey}\hlstd{(}\hlkwc{na.value}\hlstd{=}\hlnum{NA}\hlstd{,} \hlkwc{guide}\hlstd{=}\hlstr{"none"}\hlstd{)} \hlopt{+}
  \hlkwd{geom_area}\hlstd{()} \hlopt{+} \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{x} \hlstd{=} \hlstr{"Wvelength (nm)"}\hlstd{,}
       \hlkwc{y} \hlstd{=}  \hlkwd{expression}\hlstd{(}\hlkwd{atop}\hlstd{(Spectral}\hlopt{~~}\hlstd{daily}\hlopt{~~}\hlstd{exposure,}
                       \hlstd{(kJ}\hlopt{~~}\hlstd{m}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{2}\hlstd{\}}\hlopt{~}\hlstd{d}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{1}\hlstd{\}}\hlopt{~}\hlstd{nm}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{1}\hlstd{\}))),}
       \hlkwc{fill} \hlstd{=} \hlstr{""}\hlstd{,}
       \hlkwc{title} \hlstd{=}
   \hlstr{"Unweighted solar radiation (daily accumulated spectrum)"}\hlstd{)} \hlopt{+}
  \hlkwd{geom_rect}\hlstd{(}\hlkwc{data}\hlstd{=annotation.spct,}
            \hlkwd{aes}\hlstd{(}\hlkwc{xmin}\hlstd{=wl.low,} \hlkwc{xmax}\hlstd{=wl.high,} \hlkwc{ymin}\hlstd{=}\hlnum{30}\hlstd{,} \hlkwc{ymax}\hlstd{=}\hlnum{32}\hlstd{))} \hlopt{+}
  \hlkwd{geom_text}\hlstd{(}\hlkwc{data}\hlstd{=annotation.spct,}
            \hlkwd{aes}\hlstd{(}\hlkwc{label}\hlstd{=}\hlkwd{as.character}\hlstd{(wb.f),} \hlkwc{y}\hlstd{=}\hlnum{31}\hlstd{),}
            \hlkwc{color}\hlstd{=}\hlkwd{c}\hlstd{(}\hlstr{"white"}\hlstd{,}\hlstr{"black"}\hlstd{),} \hlkwc{size}\hlstd{=}\hlnum{4}\hlstd{)} \hlopt{+}
  \hlkwd{theme_bw}\hlstd{()}

\hlstd{fig_sun.uv1}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-unnamed-chunk-166-1} 

}



\end{knitrout}

Possible variations are almost endless, so we invite the reader to continue exploring how the functions from package \code{photobiology} can be used together with \code{ggplot}, to obtain beautiful plots of spectra. As an example here we show new versions of two plots from the previous section, one using a filled area to label the PAR region, and another one using symbols with colours according to their wavelength, to which we add a guide for PAR.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{par} \hlkwb{<-} \hlkwd{q_irrad_spct}\hlstd{(sun.spct,} \hlkwd{PAR}\hlstd{())} \hlopt{*} \hlnum{1e6}

\hlstd{fig_sun.tgrect1} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=par.sun.spct,}
         \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.q.irrad} \hlopt{*} \hlnum{1e6}\hlstd{))} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{geom_area}\hlstd{(}\hlkwc{color}\hlstd{=}\hlnum{NA}\hlstd{,} \hlkwc{alpha}\hlstd{=}\hlnum{0.3}\hlstd{,} \hlkwd{aes}\hlstd{(}\hlkwc{fill}\hlstd{=wb.f))}  \hlopt{+}
  \hlkwd{scale_fill_grey}\hlstd{(}\hlkwc{na.value}\hlstd{=}\hlnum{NA}\hlstd{,} \hlkwc{guide}\hlstd{=}\hlstr{"none"}\hlstd{)} \hlopt{+}
  \hlkwd{labs}\hlstd{(}
    \hlkwc{y} \hlstd{= ylab_umol,}
    \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)} \hlopt{+}
  \hlkwd{annotate_waveband}\hlstd{(}\hlkwd{PAR}\hlstd{(),} \hlstr{"text"}\hlstd{,}
                    \hlkwc{label}\hlstd{=}\hlkwd{paste}\hlstd{(}\hlstr{"PAR:~"}\hlstd{,} \hlkwd{signif}\hlstd{(par,}\hlkwc{digits}\hlstd{=}\hlnum{2}\hlstd{),}
                                \hlstr{" * ~mu * mol~m^\{-2\}~s^\{-1\}"}\hlstd{,} \hlkwc{sep}\hlstd{=}\hlstr{""}\hlstd{),}
                    \hlkwc{y}\hlstd{=}\hlnum{1.5}\hlstd{,} \hlkwc{colour}\hlstd{=}\hlstr{"black"}\hlstd{,} \hlkwc{size}\hlstd{=}\hlnum{5}\hlstd{,} \hlkwc{parse}\hlstd{=}\hlnum{TRUE}\hlstd{)}

\hlstd{fig_sun.tgrect1}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-par-tag-annotate-1} 

}



\end{knitrout}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{par.guide.spct} \hlkwb{<-}
  \hlkwd{wb2rect_spct}\hlstd{(}\hlkwd{list}\hlstd{(}\hlstr{'Photosynthetically active radiation'} \hlstd{=} \hlkwd{PAR}\hlstd{()))}

\hlstd{fig_sun.tgrect2} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=tg.sun.spct,}
         \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad))} \hlopt{+}
  \hlkwd{geom_line}\hlstd{()} \hlopt{+}
  \hlkwd{scale_color_identity}\hlstd{()} \hlopt{+}
  \hlkwd{geom_point}\hlstd{(}\hlkwd{aes}\hlstd{(}\hlkwc{color}\hlstd{=wl.color))}  \hlopt{+}
  \hlkwd{labs}\hlstd{(}
    \hlkwc{y} \hlstd{= ylab_watt,}
    \hlkwc{x} \hlstd{=} \hlstr{"Wavelength (nm)"}\hlstd{)} \hlopt{+}
  \hlkwd{geom_segment}\hlstd{(}\hlkwc{data}\hlstd{=par.guide.spct,}
       \hlkwd{aes}\hlstd{(}\hlkwc{x} \hlstd{= wl.low,} \hlkwc{xend} \hlstd{= wl.high,} \hlkwc{y} \hlstd{= y,} \hlkwc{yend} \hlstd{= y),}
       \hlkwc{size} \hlstd{=} \hlnum{1.5}\hlstd{,} \hlkwc{color} \hlstd{=} \hlstr{"black"}\hlstd{)} \hlopt{+}
  \hlkwd{geom_text}\hlstd{(}\hlkwc{data}\hlstd{=par.guide.spct,}
       \hlkwd{aes}\hlstd{(}\hlkwc{y} \hlstd{= y} \hlopt{+} \hlnum{0.05}\hlstd{,} \hlkwc{label} \hlstd{=} \hlkwd{as.character}\hlstd{(wb.f)),}
       \hlkwc{color} \hlstd{=} \hlstr{"black"}\hlstd{,} \hlkwc{family}\hlstd{=}\hlstr{"serif"}\hlstd{)}

\hlstd{fig_sun.tgrect2} \hlopt{+} \hlkwd{theme_bw}\hlstd{()}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-par-tag-segment-1} 

}



\end{knitrout}

\section{Task: plotting effective spectral irradiance}

This task is here simply to show that there is nothing special about plotting spectra based on calculations, and that one can combine different functions to get the job done. We also show how to `row bind' spectra for plotting, in this case to make it easy to use facets.



\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{sun.eff.cie.nf.spct} \hlkwb{<-} \hlstd{sun.spct} \hlopt{*} \hlkwd{CIE}\hlstd{()}
\hlstd{sun.eff.cie.pe.spct} \hlkwb{<-} \hlstd{sun.spct} \hlopt{*} \hlstd{polyester.new.spct} \hlopt{*} \hlkwd{CIE}\hlstd{()}
\hlstd{sun.eff.cie.226.spct} \hlkwb{<-} \hlstd{sun.spct} \hlopt{*} \hlstd{uv.226.new.spct} \hlopt{*} \hlkwd{CIE}\hlstd{()}
\hlkwd{tag}\hlstd{(sun.eff.cie.nf.spct,} \hlkwd{UV_bands}\hlstd{())}
\hlkwd{tag}\hlstd{(sun.eff.cie.pe.spct,} \hlkwd{UV_bands}\hlstd{())}
\hlkwd{tag}\hlstd{(sun.eff.cie.226.spct,} \hlkwd{UV_bands}\hlstd{())}
\hlstd{sun.eff.cie.nf.spct[ , filter} \hlkwb{:=} \hlstr{'no filter'}\hlstd{]}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad wl.color wb.f
##   1:      293 2.609665e-06  #000000  UVB
##   2:      294 6.142401e-06  #000000  UVB
##   3:      295 2.176175e-05  #000000  UVB
##   4:      296 6.780119e-05  #000000  UVB
##   5:      297 1.533491e-04  #000000  UVB
##  ---                                    
## 507:      796 0.000000e+00  #000000   NA
## 508:      797 0.000000e+00  #000000   NA
## 509:      798 0.000000e+00  #000000   NA
## 510:      799 0.000000e+00  #000000   NA
## 511:      800 0.000000e+00  #000000   NA
##         filter
##   1: no filter
##   2: no filter
##   3: no filter
##   4: no filter
##   5: no filter
##  ---          
## 507: no filter
## 508: no filter
## 509: no filter
## 510: no filter
## 511: no filter
\end{verbatim}
\begin{alltt}
\hlstd{sun.eff.cie.pe.spct[ , filter} \hlkwb{:=} \hlstr{'polyester'}\hlstd{]}
\end{alltt}
\begin{verbatim}
##      w.length    s.e.irrad wl.color wb.f
##   1:      293 7.828995e-09  #000000  UVB
##   2:      294 1.842720e-08  #000000  UVB
##   3:      295 6.528525e-08  #000000  UVB
##   4:      296 2.034036e-07  #000000  UVB
##   5:      297 4.600472e-07  #000000  UVB
##  ---                                    
## 507:      796 0.000000e+00  #000000   NA
## 508:      797 0.000000e+00  #000000   NA
## 509:      798 0.000000e+00  #000000   NA
## 510:      799 0.000000e+00  #000000   NA
## 511:      800 0.000000e+00  #000000   NA
##         filter
##   1: polyester
##   2: polyester
##   3: polyester
##   4: polyester
##   5: polyester
##  ---          
## 507: polyester
## 508: polyester
## 509: polyester
## 510: polyester
## 511: polyester
\end{verbatim}
\begin{alltt}
\hlstd{sun.eff.cie.226.spct[ , filter} \hlkwb{:=} \hlstr{'Rosco #226'}\hlstd{]}
\end{alltt}
\begin{verbatim}
##      w.length s.e.irrad wl.color wb.f     filter
##   1:      293         0  #000000  UVB Rosco #226
##   2:      294         0  #000000  UVB Rosco #226
##   3:      295         0  #000000  UVB Rosco #226
##   4:      296         0  #000000  UVB Rosco #226
##   5:      297         0  #000000  UVB Rosco #226
##  ---                                            
## 507:      796         0  #000000   NA Rosco #226
## 508:      797         0  #000000   NA Rosco #226
## 509:      798         0  #000000   NA Rosco #226
## 510:      799         0  #000000   NA Rosco #226
## 511:      800         0  #000000   NA Rosco #226
\end{verbatim}
\begin{alltt}
\hlstd{sun.eff.cie.spct} \hlkwb{<-} \hlkwd{rbindspct}\hlstd{(}\hlkwd{list}\hlstd{(sun.eff.cie.nf.spct,}
                                   \hlstd{sun.eff.cie.pe.spct,}
                                   \hlstd{sun.eff.cie.226.spct))}
\hlstd{sun.eff.cie.spct[ , filter} \hlkwb{:=} \hlkwd{factor}\hlstd{(filter)]}
\end{alltt}
\begin{verbatim}
##       w.length    s.e.irrad wl.color wb.f
##    1:      293 2.609665e-06  #000000  UVB
##    2:      293 7.828995e-09  #000000  UVB
##    3:      293 0.000000e+00  #000000  UVB
##    4:      294 6.142401e-06  #000000  UVB
##    5:      294 1.842720e-08  #000000  UVB
##   ---                                    
## 1529:      799 0.000000e+00  #000000   NA
## 1530:      799 0.000000e+00  #000000   NA
## 1531:      800 0.000000e+00  #000000   NA
## 1532:      800 0.000000e+00  #000000   NA
## 1533:      800 0.000000e+00  #000000   NA
##           filter
##    1:  no filter
##    2:  polyester
##    3: Rosco #226
##    4:  no filter
##    5:  polyester
##   ---           
## 1529:  polyester
## 1530: Rosco #226
## 1531:  no filter
## 1532:  polyester
## 1533: Rosco #226
\end{verbatim}
\begin{alltt}
\hlstd{fig_sun.cie0} \hlkwb{<-}
  \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=sun.eff.cie.spct,} \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=w.length,} \hlkwc{y}\hlstd{=s.e.irrad,} \hlkwc{fill}\hlstd{=wb.f))} \hlopt{+}
  \hlkwd{scale_fill_grey}\hlstd{()} \hlopt{+}
  \hlkwd{geom_area}\hlstd{()} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{x} \hlstd{= xlab_nm,}
       \hlkwc{y} \hlstd{=} \hlkwd{expression}\hlstd{(Effective}\hlopt{~~}\hlstd{spectral}\hlopt{~~}\hlstd{energy}\hlopt{~~}\hlstd{irradiance}\hlopt{~~}\hlstd{(W}\hlopt{~}\hlstd{m}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{2}\hlstd{\}}\hlopt{~}\hlstd{nm}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{1}\hlstd{\})),}
       \hlkwc{title} \hlstd{=} \hlstr{"CIE 1998 erythemal BSWF"}\hlstd{)} \hlopt{+}
  \hlkwd{facet_grid}\hlstd{(filter}\hlopt{~}\hlstd{.)} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{fill}\hlstd{=}\hlstr{""}\hlstd{)} \hlopt{+}
  \hlkwd{xlim}\hlstd{(}\hlnum{NA}\hlstd{,} \hlnum{400}\hlstd{)} \hlopt{+}
  \hlkwd{theme_bw}\hlstd{()} \hlopt{+}
  \hlkwd{theme}\hlstd{(}\hlkwc{legend.position}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{0.90}\hlstd{,} \hlnum{0.9}\hlstd{))}

\hlstd{fig_sun.cie0}
\end{alltt}


{\ttfamily\noindent\color{warningcolor}{\#\# Warning: Removed 401 rows containing missing values (position\_stack).}}

{\ttfamily\noindent\color{warningcolor}{\#\# Warning: Removed 401 rows containing missing values (position\_stack).}}

{\ttfamily\noindent\color{warningcolor}{\#\# Warning: Removed 401 rows containing missing values (position\_stack).}}\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-eff-cie-1-1} 

}



\end{knitrout}

There is one warning issued for each panel, as the use of \code{xlim} discards 400 observations for wavelengths longer than 400~\Unit(nm). One should be aware that these are estimated values and in practice stray light reduces the eficiency of the filters for blocking radiation, and the amount of stray light depends on many factors including the relative positions of plants, filter and sun.

A couple of details need to be remembered: the tagging has to be done before row-binding the spectra, as \code{tag} works only on spectra that have unique values for wavelengths and discards `repeated' rows if they are present. We use \code{theme(legend.position=c(0.90, 0.9))} to change where the legend or guide is positioned. In this case, we move the legend to a place within the plotting region. As we are using also \code{theme\_bw()} which resets the legend position to the default, the order in which they are added is significant.

\section{Task: making a bar plot of effective irradiance}



In this task we aim at creating bar plots depicting the contributions of the UVB and UVA bands to the total erythemal effective irradiance in sunlight filtered with different plastic films. First we calculate the effective energy irradiance using the waveband definition for erythemal BSWF (CIE98) separately for the estimated solar spectral irradiance under each filter type.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{cie.nf.irrad} \hlkwb{<-} \hlkwd{e_irrad}\hlstd{(sun.spct} \hlopt{*} \hlkwd{CIE}\hlstd{(),}
                        \hlkwd{list}\hlstd{(}\hlkwd{UVB}\hlstd{(),} \hlkwd{UVA}\hlstd{()))}
\hlstd{cie.pe.irrad} \hlkwb{<-} \hlkwd{e_irrad}\hlstd{(sun.spct} \hlopt{*} \hlstd{polyester.new.spct} \hlopt{*} \hlkwd{CIE}\hlstd{(),}
                        \hlkwd{list}\hlstd{(}\hlkwd{UVB}\hlstd{(),} \hlkwd{UVA}\hlstd{()))}
\hlstd{cie.226.irrad} \hlkwb{<-} \hlkwd{e_irrad}\hlstd{(sun.spct} \hlopt{*} \hlstd{uv.226.new.spct} \hlopt{*} \hlkwd{CIE}\hlstd{(),}
                         \hlkwd{list}\hlstd{(}\hlkwd{UVB}\hlstd{(),} \hlkwd{UVA}\hlstd{()))}
\end{alltt}
\end{kframe}
\end{knitrout}

We assemble a data table by concatenating the irradiance and adding factors for filter type and wave bands. When
defining the factors, we use \code{levels} to make sure that the levels are ordered as we would like to plot them.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{cie.dt} \hlkwb{<-} \hlkwd{data.table}\hlstd{(}
  \hlkwc{cie.irrad} \hlstd{=} \hlkwd{c}\hlstd{(cie.nf.irrad, cie.pe.irrad, cie.226.irrad),}
  \hlkwc{filter} \hlstd{=} \hlkwd{factor}\hlstd{(}\hlkwd{rep}\hlstd{(}\hlkwd{c}\hlstd{(}\hlstr{'none'}\hlstd{,} \hlstr{'polyester'}\hlstd{,} \hlstr{'Rosco #226'}\hlstd{),} \hlkwd{c}\hlstd{(}\hlnum{2}\hlstd{,}\hlnum{2}\hlstd{,}\hlnum{2}\hlstd{)),}
                  \hlkwc{levels}\hlstd{=}\hlkwd{c}\hlstd{(}\hlstr{'none'}\hlstd{,} \hlstr{'polyester'}\hlstd{,} \hlstr{'Rosco #226'}\hlstd{)),}
  \hlkwc{w.band} \hlstd{=} \hlkwd{factor}\hlstd{(}\hlkwd{rep}\hlstd{(}\hlkwd{c}\hlstd{(}\hlstr{'UVB'}\hlstd{,} \hlstr{'UVA'}\hlstd{),} \hlnum{3}\hlstd{),}
                  \hlkwc{levels}\hlstd{=}\hlkwd{c}\hlstd{(}\hlstr{'UVB'}\hlstd{,} \hlstr{'UVA'}\hlstd{)) )}
\end{alltt}
\end{kframe}
\end{knitrout}

Now we plot stacked bars using \code{geom\_bar}, however as the default \code{stat} of this geom is not suitable for our data, we specify \code{stat="identity"} to have the data plotted as is. We set a specific palette for fill, and add a black border to the bars by means of \code{color="black"}, we remove the grid lines corresponding to the $x$-axis, and also position the legend within the plotting region.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_cie_bars0} \hlkwb{<-} \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=cie.dt,}
                        \hlkwd{aes}\hlstd{(}\hlkwc{y} \hlstd{= cie.irrad} \hlopt{*} \hlnum{1e3}\hlstd{,}
                            \hlkwc{x} \hlstd{= filter,}
                            \hlkwc{fill} \hlstd{= w.band))} \hlopt{+}
  \hlkwd{scale_fill_brewer}\hlstd{(}\hlkwc{palette}\hlstd{=}\hlstr{"PRGn"}\hlstd{)} \hlopt{+}
  \hlkwd{geom_bar}\hlstd{(}\hlkwc{stat}\hlstd{=}\hlstr{"identity"}\hlstd{,} \hlkwc{colour}\hlstd{=}\hlstr{"black"}\hlstd{)} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{x} \hlstd{=} \hlstr{"Filter type"}\hlstd{,}
       \hlkwc{y} \hlstd{=} \hlkwd{expression}\hlstd{(Effective}\hlopt{~~}\hlstd{irradiance}\hlopt{~~~}\hlstd{(mW}\hlopt{~}\hlstd{m}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{2}\hlstd{\})),}
       \hlkwc{title} \hlstd{=} \hlstr{"CIE 1998 erythemal BSWF"}\hlstd{,}
       \hlkwc{fill} \hlstd{=} \hlstr{""}\hlstd{)} \hlopt{+}
  \hlkwd{theme_bw}\hlstd{(}\hlnum{13}\hlstd{)} \hlopt{+}
  \hlkwd{theme}\hlstd{(}\hlkwc{legend.position}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{0.85}\hlstd{,} \hlnum{0.85}\hlstd{))} \hlopt{+}
  \hlkwd{theme}\hlstd{(}\hlkwc{panel.grid.minor.x}\hlstd{=}\hlkwd{element_blank}\hlstd{(),}
        \hlkwc{panel.grid.major.x}\hlstd{=}\hlkwd{element_blank}\hlstd{())}

\hlstd{fig_cie_bars0}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.47\textwidth]{figure/pos-plot-bar-cie-2-1} 

}



\end{knitrout}

The figure above is good for showing the relative contribution of UVB and UVA radiation to the total effect, and the size of the total effect. On the other hand if we would like to show how much the effective irradiance in the UVB and UVA decreases under each of the filters is better to avoid stacking of the bars, plotting them side by side using \code{position=position\_dodge()}. In addition we swap the aesthetics to which the two factors are linked.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_cie_bars1} \hlkwb{<-} \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=cie.dt,}
                        \hlkwd{aes}\hlstd{(}\hlkwc{y} \hlstd{= cie.irrad} \hlopt{*} \hlnum{1e3}\hlstd{,}
                            \hlkwc{x} \hlstd{= w.band,}
                            \hlkwc{fill}\hlstd{=filter))} \hlopt{+}
  \hlkwd{geom_bar}\hlstd{(}\hlkwc{stat}\hlstd{=}\hlstr{"identity"}\hlstd{,}
           \hlkwc{position}\hlstd{=}\hlkwd{position_dodge}\hlstd{(),}
           \hlkwc{color}\hlstd{=}\hlstr{"black"}\hlstd{)} \hlopt{+}
  \hlkwd{scale_fill_brewer}\hlstd{()} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{x} \hlstd{=} \hlstr{"Wavelength band"}\hlstd{,}
       \hlkwc{y} \hlstd{=} \hlkwd{expression}\hlstd{(Effective}\hlopt{~~}\hlstd{irradiance}\hlopt{~~~}\hlstd{(mW}\hlopt{~}\hlstd{m}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{2}\hlstd{\})),}
       \hlkwc{title} \hlstd{=} \hlstr{"CIE 1998 erythemal BSWF"}\hlstd{,}
       \hlkwc{fill} \hlstd{=} \hlstr{""}\hlstd{)} \hlopt{+}
  \hlkwd{theme_bw}\hlstd{()} \hlopt{+}
  \hlkwd{theme}\hlstd{(}\hlkwc{legend.position}\hlstd{=}\hlkwd{c}\hlstd{(}\hlnum{0.80}\hlstd{,} \hlnum{0.85}\hlstd{))} \hlopt{+}
  \hlkwd{theme}\hlstd{(}\hlkwc{panel.grid.minor.x}\hlstd{=}\hlkwd{element_blank}\hlstd{(),}
        \hlkwc{panel.grid.major.x}\hlstd{=}\hlkwd{element_blank}\hlstd{())}

\hlstd{fig_cie_bars1}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.47\textwidth]{figure/pos-plot-bar-cie-3-1} 

}



\end{knitrout}

\section{Task: plotting a spectrum using colour bars}



We show now the last example, related to the ones above, but creating a bar plot with more bars. First we calculate photon irradiance for different equally spaced bands within PAR using function \code{split\_bands}. The code is written so that by changing the first two lines you can adjust the output.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{wl.range} \hlkwb{<-} \hlkwd{range}\hlstd{(}\hlkwd{PAR}\hlstd{())}
\hlstd{num.bands} \hlkwb{<-} \hlnum{15}
\hlstd{many.bands} \hlkwb{<-} \hlkwd{split_bands}\hlstd{(wl.range,} \hlkwc{length.out}\hlstd{=num.bands)}
\hlstd{w.length} \hlkwb{<-} \hlkwd{numeric}\hlstd{(num.bands)}
\hlstd{wb.name} \hlkwb{<-} \hlstd{wb.color} \hlkwb{<-} \hlkwd{character}\hlstd{(num.bands)}

\hlkwa{for} \hlstd{(i} \hlkwa{in} \hlnum{1}\hlopt{:}\hlstd{num.bands) \{}
  \hlstd{w.length[i]} \hlkwb{<-} \hlkwd{midpoint}\hlstd{(many.bands[[i]])}
  \hlstd{wb.color[i]} \hlkwb{<-} \hlkwd{color}\hlstd{(many.bands[[i]],} \hlkwc{type}\hlstd{=}\hlstr{"CMF"}\hlstd{)}
  \hlstd{wb.name[i]} \hlkwb{<-} \hlkwd{labels}\hlstd{(many.bands[[i]])[[}\hlstr{"name"}\hlstd{]]}
\hlstd{\}}

\hlstd{q.irrad.bands.sun} \hlkwb{<-} \hlkwd{q_irrad}\hlstd{(sun.spct, many.bands)}
\hlstd{q.irrad.sun.dt} \hlkwb{<-} \hlkwd{data.table}\hlstd{(}\hlkwc{q.irrad} \hlstd{= q.irrad.bands.sun,}
                                   \hlkwc{w.length} \hlstd{= w.length,}
                                   \hlkwc{wb.color} \hlstd{= wb.color,}
                                   \hlkwc{wb.name} \hlstd{= wb.name)}
\end{alltt}
\end{kframe}
\end{knitrout}

Now we can plot the data as bars, filling each bar with the corresponding colour. In this case we plot the bars using a continuous variable, wavelength, for the $x$-axis.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{fig_qirrad_bar} \hlkwb{<-} \hlkwd{ggplot}\hlstd{(}\hlkwc{data}\hlstd{=q.irrad.sun.dt,}
                        \hlkwd{aes}\hlstd{(}\hlkwc{y} \hlstd{= q.irrad} \hlopt{*} \hlnum{1e6}\hlstd{,}
                            \hlkwc{x} \hlstd{= w.length,}
                            \hlkwc{fill}\hlstd{=}\hlkwd{as.character}\hlstd{(wb.color)))} \hlopt{+}
  \hlkwd{geom_bar}\hlstd{(}\hlkwc{stat}\hlstd{=}\hlstr{"identity"}\hlstd{,}
           \hlkwc{color}\hlstd{=}\hlstr{"black"}\hlstd{)} \hlopt{+}
  \hlkwd{scale_fill_identity}\hlstd{(}\hlkwc{guide}\hlstd{=}\hlstr{"none"}\hlstd{)} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{x} \hlstd{= xlab_nm,}
       \hlkwc{y} \hlstd{=} \hlkwd{expression}\hlstd{(Photon}\hlopt{~~}\hlstd{irradiance}\hlopt{~~}\hlstd{(mu}\hlopt{*}\hlstd{mol}\hlopt{~}\hlstd{m}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{2}\hlstd{\}}\hlopt{~}\hlstd{s}\hlopt{^}\hlstd{\{}\hlopt{-}\hlnum{1}\hlstd{\})),}
       \hlkwc{fill} \hlstd{=} \hlstr{""}\hlstd{)} \hlopt{+}
  \hlkwd{theme_bw}\hlstd{()}

\hlstd{fig_qirrad_bar}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-bar-qirrad-bands-1-1} 

}



\end{knitrout}

In the case of the example spectrum with equal wavelength steps, one could have directly summed the values, however, the approach shown here is valid for any type of spacing of the values along the wavelength axis, including variable one, like is the case for array spectrometers.
%%%%
\section{Task: plotting colours in Maxwell's triangle}\label{sec:max:tri}

\subsection{Human vision: RGB}
Given a color definition, we can convert it to RGB values by means of R's function \code{col2rgb}. We can obtain a color definition for monochromatic light from its wavelength with function \code{w\_length2rgb} (see section \ref{}), from a waveband with function \code{color} (see section \ref{}), for a wavelength range with \code{w\_length\_range2rgb} (see section \ref{}), and from a spectrum with function \code{s\_e\_irrad2rgb}  (see section \ref{}). The RGB values can be used to locate the position of any colour on Maxwell's triangle, given a set of chromaticity coordinates defining the triangle. In the first example we use some of R's predefined colors. We use the function \code{ggtern} from the package of the same name. It is based on \code{ggplot} and to produce a ternary diagram we need to use \code{ggtern} instead of \code{ggplot}. Geoms, aesthetics, stats and faceting function normally in most cases. Of course, being a ternary plot, the aesthetics \code{x}, \code{y}, and \code{z} should be all assigned to variables in the data.



\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlstd{colours} \hlkwb{<-} \hlkwd{c}\hlstd{(}\hlstr{"red"}\hlstd{,} \hlstr{"green"}\hlstd{,} \hlstr{"yellow"}\hlstd{,} \hlstr{"white"}\hlstd{,}
             \hlstr{"orange"}\hlstd{,} \hlstr{"purple"}\hlstd{,} \hlstr{"seagreen"}\hlstd{,} \hlstr{"pink"}\hlstd{)}
\hlstd{rgb.values} \hlkwb{<-} \hlkwd{col2rgb}\hlstd{(colours)}
\hlstd{test.data} \hlkwb{<-} \hlkwd{data.frame}\hlstd{(}\hlkwc{colour}\hlstd{=colours,}
                        \hlkwc{R}\hlstd{=rgb.values[}\hlnum{1}\hlstd{, ],}
                        \hlkwc{G}\hlstd{=rgb.values[}\hlnum{2}\hlstd{, ],}
                        \hlkwc{B}\hlstd{=rgb.values[}\hlnum{3}\hlstd{, ])}
\hlstd{maxwell.tern} \hlkwb{<-} \hlkwd{ggtern}\hlstd{(}\hlkwc{data}\hlstd{=test.data,}
                       \hlkwd{aes}\hlstd{(}\hlkwc{x}\hlstd{=R,} \hlkwc{y}\hlstd{=G,} \hlkwc{z}\hlstd{=B,} \hlkwc{label}\hlstd{=colour,} \hlkwc{fill}\hlstd{=colour))} \hlopt{+}
                       \hlkwd{geom_point}\hlstd{(}\hlkwc{shape}\hlstd{=}\hlnum{23}\hlstd{,} \hlkwc{size}\hlstd{=}\hlnum{3}\hlstd{)} \hlopt{+}
  \hlkwd{geom_text}\hlstd{(}\hlkwc{hjust}\hlstd{=}\hlopt{-}\hlnum{0.2}\hlstd{)} \hlopt{+}
  \hlkwd{labs}\hlstd{(}\hlkwc{x} \hlstd{=} \hlstr{"R"}\hlstd{,} \hlkwc{y}\hlstd{=}\hlstr{"G"}\hlstd{,} \hlkwc{z}\hlstd{=}\hlstr{"B"}\hlstd{)} \hlopt{+} \hlkwd{scale_fill_identity}\hlstd{()}
\hlstd{maxwell.tern}
\end{alltt}
\end{kframe}

{\centering \includegraphics[width=.95\textwidth]{figure/pos-plot-tern-1-1} 

}



\end{knitrout}

\section{Honey-bee vision: GBU}

In this case we start with the spectral responsiveness of the photoreceptors present in the eyes of honey bees. Bees, as humans have three photoreceptors, but instead of red, green and blue (RGB), bees see green, blue and UV-A (GBU). To plot colours seen by bees one can still use a ternary plot, but the axes represent different photoreceptors than for humans, and the colour space is shifted towards shorter wavelengths.

The calculations we will demonstrate here, in addition are geared to compare a background to a foreground object (foliage vs.\ flower). We have followed xxxxx \cite{chitka?} in this example, but be aware that calculations presented in this reference do not match the equations presented. In the original published example, the calculations have been simplified by leaving out $\delta \lambda$. Although not affecting the final result for their example, intermediate results are different (wrong?). We have further generalized the calculations and equations to make the calculations also valid for spectra measured using $\delta \lambda$ that itself varies along the wavelength axis. This is the usual situation with array spectrometers, nowadays frequently used when measuring reflectance.

The assessment of the perceived `colour difference' between background and foreground objects requires taking into consideration several spectra: the incident `light' spectrum, the reflectance spectra of the two objects, and the sensitivity spectra of three photoreceptors in the case of trichromic vision. In addition to these data, we need to take into consideration the shape of the dose response of the photoreceptors.

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiologygg))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{ggtern))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{ggplot2))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{gridExtra))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiologyFilters))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiologyWavebands))}
\hlkwd{try}\hlstd{(}\hlkwd{detach}\hlstd{(package}\hlopt{:}\hlstd{photobiology))}
\end{alltt}
\end{kframe}
\end{knitrout}



\part{Catalogue of data sources}









\part{Data acquisition and modelling}











\printbibliography

\appendix

\part{Appendixes}












\chapter{Build information}

\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{Sys.info}\hlstd{()}
\end{alltt}
\begin{verbatim}
##                      sysname 
##                    "Windows" 
##                      release 
##                      "7 x64" 
##                      version 
## "build 7601, Service Pack 1" 
##                     nodename 
##                      "MUSTI" 
##                      machine 
##                     "x86-64" 
##                        login 
##                     "aphalo" 
##                         user 
##                     "aphalo" 
##               effective_user 
##                     "aphalo"
\end{verbatim}
\end{kframe}
\end{knitrout}



\begin{knitrout}\footnotesize
\definecolor{shadecolor}{rgb}{0.969, 0.969, 0.969}\color{fgcolor}\begin{kframe}
\begin{alltt}
\hlkwd{sessionInfo}\hlstd{()}
\end{alltt}
\begin{verbatim}
## R version 3.1.2 (2014-10-31)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## 
## locale:
## [1] LC_COLLATE=English_United Kingdom.1252 
## [2] LC_CTYPE=English_United Kingdom.1252   
## [3] LC_MONETARY=English_United Kingdom.1252
## [4] LC_NUMERIC=C                           
## [5] LC_TIME=English_United Kingdom.1252    
## 
## attached base packages:
## [1] grid      methods   tools     stats    
## [5] graphics  grDevices utils     datasets 
## [9] base     
## 
## other attached packages:
## [1] scales_0.2.4     plyr_1.8.1      
## [3] splus2R_1.2-0    proto_0.3-10    
## [5] data.table_1.9.4 lubridate_1.3.3 
## [7] stringr_0.6.2    knitr_1.8       
## 
## loaded via a namespace (and not attached):
##  [1] chron_2.3-45               
##  [2] colorspace_1.2-4           
##  [3] digest_0.6.4               
##  [4] evaluate_0.5.5             
##  [5] formatR_1.0                
##  [6] ggmap_2.3                  
##  [7] ggplot2_1.0.0              
##  [8] ggtern_1.0.3.2             
##  [9] gridExtra_0.9.1            
## [10] gtable_0.1.2               
## [11] highr_0.4                  
## [12] labeling_0.3               
## [13] lattice_0.20-29            
## [14] mapproj_1.2-2              
## [15] maps_2.3-9                 
## [16] MASS_7.3-35                
## [17] memoise_0.2.1              
## [18] munsell_0.4.2              
## [19] photobiology_0.4.8         
## [20] photobiologyFilters_0.1.13 
## [21] photobiologygg_0.1.14      
## [22] photobiologyLEDs_0.1.4     
## [23] photobiologyWavebands_0.1.0
## [24] png_0.1-7                  
## [25] RColorBrewer_1.0-5         
## [26] Rcpp_0.11.3                
## [27] reshape2_1.4               
## [28] RgoogleMaps_1.2.0.6        
## [29] rjson_0.2.15               
## [30] RJSONIO_1.3-0              
## [31] sp_1.0-16
\end{verbatim}
\end{kframe}
\end{knitrout}

\backmatter

\end{document}
